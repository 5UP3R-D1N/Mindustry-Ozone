Main.Ozone -> Main.Ozone:
    java.lang.String AtomHash -> AtomHash
    java.lang.String atomFile -> atomFile
    java.lang.String libs -> libs
    java.lang.String AtomDownload -> AtomDownload
    boolean libraryURLLoaded -> libraryURLLoaded
    boolean libraryExists -> libraryExists
    java.net.URLClassLoader classloader -> classloader
    mindustry.mod.Mod mainMod -> mainMod
    java.io.File ozone -> ozone
    java.io.File parentFile -> parentFile
    java.io.File library -> library
    java.io.File atom -> atom
    void <init>() -> <init>
    void init() -> init
    void loadContent() -> loadContent
    void lambda$new$0(mindustry.game.EventType$ClientLoadEvent) -> lambda$new$0
    void <clinit>() -> <clinit>
Main.h -> Main.h:
    java.io.File mindustry -> mindustry
    Ozone.Swing.Main m -> m
    void <init>() -> <init>
    void main(java.lang.String[]) -> main
MainBackup.OzoneBackup -> MainBackup.OzoneBackup:
    void <init>() -> <init>
    void init() -> init
    void loadContent() -> loadContent
Ozone.Commands.BotInterface -> a.a.a:
    arc.struct.Queue taskQueue -> a
    boolean init -> b
    void init() -> a
    void update() -> e
    void addTask(Ozone.Commands.Task.Task,java.util.function.Consumer) -> a
    void setMov(arc.math.geom.Position) -> a
    java.util.ArrayList getNearby(mindustry.world.Tile,int,int) -> a
    arc.math.geom.Vec2 getCurrentPos() -> b
    arc.math.geom.Vec2 getCurrentTilePos() -> c
    boolean samePos(arc.math.geom.Position,arc.math.geom.Position,boolean) -> a
    void reset() -> d
    void <clinit>() -> <clinit>
Ozone.Commands.Commands -> a.a.b:
    java.util.HashMap commandsList -> a
    boolean init -> b
    boolean falseVote -> c
    void init() -> a
    void taskClear(java.util.ArrayList) -> a
    void sendColorize(java.util.ArrayList) -> b
    void taskDeconstruct(java.util.ArrayList) -> c
    void forceExit(java.util.ArrayList) -> d
    void infoUnit(java.util.ArrayList) -> e
    java.lang.String getTranslation(java.lang.String) -> a
    boolean call(java.lang.String) -> b
    void randomKick(java.util.ArrayList) -> f
    void infoPathfinding(java.util.ArrayList) -> g
    void infoPos(java.util.ArrayList) -> h
    void help(java.util.ArrayList) -> i
    void taskMove(java.util.ArrayList) -> j
    void chaosKick(java.util.ArrayList) -> k
    void tellUser(java.lang.String) -> c
    void lambda$chaosKick$3() -> b
    void lambda$taskMove$2(long,java.lang.Object) -> a
    float lambda$infoPathfinding$1(mindustry.world.Tile) -> a
    void lambda$taskDeconstruct$0(long,java.lang.Object) -> b
    void <clinit>() -> <clinit>
Ozone.Commands.Commands$Command -> a.a.c:
    java.util.function.Consumer method -> a
    java.lang.String description -> b
    arc.scene.style.TextureRegionDrawable icon -> c
    Ozone.UI.OzoneMenu menu -> d
    Ozone.UI.JavaEditor javaEditor -> e
    void <init>(java.util.function.Consumer,java.lang.String) -> <init>
    void <init>(java.util.function.Consumer,java.lang.String,arc.scene.style.TextureRegionDrawable,boolean) -> <init>
    boolean passable(mindustry.world.Tile) -> a
    float isSafe(mindustry.world.Tile) -> b
    double distanceTo(arc.math.geom.Position,arc.math.geom.Position) -> a
Ozone.Commands.Task.CommandsSpam -> a.a.a.a:
    int howManyTimes -> a
    int currentCycle -> b
    java.lang.String commands -> c
    void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    boolean isCompleted() -> a
    void update() -> b
Ozone.Commands.Task.DestructBlock -> a.a.a.b:
    boolean half -> a
    int x -> b
    int y -> c
    void <init>(int,int,boolean) -> <init>
    boolean isCompleted() -> a
    void update() -> b
    boolean lambda$update$0(mindustry.entities.units.BuildPlan) -> a
Ozone.Commands.Task.Move -> a.a.a.c:
    arc.math.geom.Vec2 destPos -> a
    arc.math.geom.Vec2 destTilePos -> b
    mindustry.world.Tile destTile -> c
    arc.struct.Seq pathfindingCache -> d
    boolean alreadyOverlay -> e
    void <init>(float,float) -> <init>
    void <init>(arc.math.geom.Vec2) -> <init>
    void taskCompleted() -> c
    boolean isCompleted() -> a
    void update() -> b
Ozone.Commands.Task.Task -> a.a.a.d:
    java.util.ArrayList onTaskCompleted -> a
    int tick -> b
    int currentTick -> c
    void <init>() -> <init>
    void onTaskCompleted(java.util.function.Consumer) -> a
    void taskCompleted() -> c
    void setTick(int) -> a
    boolean tick() -> d
    boolean isCompleted() -> a
    void update() -> b
Ozone.Interface -> a.a:
    arc.struct.ObjectMap bundle -> a
    arc.struct.ObjectMap keybindings -> b
    void registerKeybinding(Ozone.Patch.ImprovisedKeybinding,java.lang.Runnable) -> a
    void registerWords(java.lang.String,java.lang.String) -> a
    void registerWords(java.lang.String) -> a
    void <clinit>() -> <clinit>
Ozone.Main -> a.b:
    void init() -> a
    void patch() -> b
Ozone.Main$1 -> a.c:
    void <init>() -> <init>
Ozone.Patch.DesktopInput -> a.b.a:
    float xav -> a
    float yav -> b
    void <init>() -> <init>
    void buildPlacementUI(arc.scene.ui.layout.Table) -> buildPlacementUI
    void updateMovement(mindustry.gen.Unit) -> updateMovement
    void lambda$buildPlacementUI$0() -> a
Ozone.Patch.ImprovisedKeybinding -> a.b.b:
    java.lang.String name -> a
    java.lang.String category -> b
    arc.KeyBinds$KeybindValue value -> c
    void <init>(java.lang.String,arc.KeyBinds$KeybindValue,java.lang.String,Ozone.Patch.ImprovisedKeybinding$mode) -> <init>
    java.lang.String name() -> name
    arc.KeyBinds$KeybindValue defaultValue(arc.input.InputDevice$DeviceType) -> defaultValue
    java.lang.String category() -> category
Ozone.Patch.ImprovisedKeybinding$mode -> a.b.c:
    Ozone.Patch.ImprovisedKeybinding$mode down -> b
    Ozone.Patch.ImprovisedKeybinding$mode release -> c
    Ozone.Patch.ImprovisedKeybinding$mode tap -> a
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
Ozone.Patch.SettingsDialog -> a.b.d:
    void <init>() -> <init>
    void lambda$new$0(java.lang.reflect.Field,boolean) -> a
Ozone.Patch.SettingsDialog$1 -> a.b.e:
    java.lang.reflect.Field val$f -> a
    void <init>(Ozone.Patch.SettingsDialog,java.lang.reflect.Field) -> <init>
    void add(arc.scene.ui.SettingsDialog$SettingsTable) -> add
    void lambda$add$1(java.lang.reflect.Field,java.lang.String) -> a
    java.lang.CharSequence lambda$add$0(java.lang.reflect.Field) -> a
Ozone.Patch.SettingsDialog$2 -> a.b.f:
    java.lang.reflect.Field val$f -> a
    void <init>(Ozone.Patch.SettingsDialog,java.lang.reflect.Field) -> <init>
    void add(arc.scene.ui.SettingsDialog$SettingsTable) -> add
    void lambda$add$1(java.lang.reflect.Field,java.lang.String) -> a
    java.lang.CharSequence lambda$add$0(java.lang.reflect.Field) -> a
Ozone.Patch.SettingsDialog$3 -> a.b.g:
    java.lang.reflect.Field val$f -> a
    void <init>(Ozone.Patch.SettingsDialog,java.lang.reflect.Field) -> <init>
    void add(arc.scene.ui.SettingsDialog$SettingsTable) -> add
    void lambda$add$1(java.lang.reflect.Field,java.lang.String) -> a
    java.lang.CharSequence lambda$add$0(java.lang.reflect.Field) -> a
Ozone.Patch.SettingsDialog$4 -> a.b.h:
    java.lang.reflect.Field val$f -> a
    void <init>(Ozone.Patch.SettingsDialog,java.lang.reflect.Field) -> <init>
    void add(arc.scene.ui.SettingsDialog$SettingsTable) -> add
    void lambda$add$1(java.lang.reflect.Field,java.lang.String) -> a
    java.lang.CharSequence lambda$add$0(java.lang.reflect.Field) -> a
Ozone.Pre.Download -> a.c.a:
    java.net.URL url -> b
    java.util.concurrent.atomic.AtomicInteger downloaded -> a
    int size -> c
    int status -> d
    java.io.File file -> e
    void <init>(java.net.URL,java.io.File) -> <init>
    int getSize() -> a
    int getStatus() -> b
    void run() -> run
    void <clinit>() -> <clinit>
Ozone.Pre.PreInstall -> a.c.b:
    void <init>() -> <init>
    void install(Ozone.Swing.Main) -> a
    void lambda$install$4(Ozone.Swing.Main,java.awt.event.ActionEvent) -> a
    void lambda$install$3(Ozone.Pre.Download,Ozone.Swing.Main,java.io.File) -> a
    void lambda$install$2(Ozone.Pre.Download,Ozone.Swing.Main) -> a
    void lambda$install$1(java.awt.event.ActionEvent) -> a
    void lambda$install$0(Ozone.Swing.Main,java.awt.event.ActionEvent) -> b
Ozone.Pre.Preload -> a.c.c:
    boolean init -> a
    boolean checkLibrary(java.lang.String,java.io.File) -> a
    void incites(java.io.File,java.lang.String,java.lang.Object) -> a
    void lambda$checkLibrary$0(Ozone.Pre.Download,Ozone.Swing.SPreLoad,java.lang.String) -> a
    void <clinit>() -> <clinit>
Ozone.Settings -> a.d:
    boolean colorPatch -> a
    boolean debugMode -> b
    void <init>() -> <init>
    void <clinit>() -> <clinit>
Ozone.Swing.Main -> a.d.a:
    javax.swing.JDialog dialog1 -> a
    javax.swing.JFileChooser fileChooser1 -> b
    javax.swing.JFrame frame1 -> c
    javax.swing.JLabel label1 -> j
    javax.swing.JLabel label4 -> d
    javax.swing.JButton button3 -> e
    javax.swing.JLabel labelStatus -> f
    javax.swing.JProgressBar progressBar1 -> g
    javax.swing.JButton buttonInstall -> h
    javax.swing.JButton buttonExit -> i
    void <init>() -> <init>
Ozone.Swing.SPreLoad -> a.d.b:
    java.awt.Frame frame1 -> a
    javax.swing.JLabel label1 -> b
    javax.swing.JProgressBar progressBar1 -> c
    void <init>() -> <init>
Ozone.UI.CommandsListFrag -> a.e.a:
    boolean visible -> a
    arc.scene.ui.layout.Table content -> b
    arc.struct.Queue commandsTask -> c
    float h -> d
    arc.scene.ui.TextField sField -> e
    java.lang.String commands -> f
    void <init>() -> <init>
    void build(arc.scene.Group) -> build
    void rebuild() -> b
    void toggle() -> a
    void lambda$rebuild$11(java.lang.String,java.util.Map$Entry) -> a
    void lambda$rebuild$10(java.util.Map$Entry) -> a
    java.lang.CharSequence lambda$rebuild$9(java.util.Map$Entry) -> b
    void lambda$build$8(arc.scene.ui.layout.Table) -> a
    void lambda$build$7(arc.scene.ui.layout.Table) -> b
    void lambda$build$6(arc.scene.ui.layout.Table) -> c
    void lambda$build$5() -> c
    void lambda$build$4(java.lang.String) -> a
    void lambda$build$3(java.lang.String,java.lang.String) -> a
    void lambda$build$2(java.lang.String) -> b
    void lambda$build$1() -> d
    boolean lambda$build$0() -> e
Ozone.UI.CommandsListFrag$1 -> a.e.b:
    void <init>(Ozone.UI.CommandsListFrag) -> <init>
    void draw() -> draw
Ozone.UI.JavaEditor -> a.e.c:
    java.util.ArrayList messages -> a
    Atom.Runtime.RuntimeSource rs -> b
    Atom.Runtime.RuntimeClass rc -> c
    java.util.HashMap color -> d
    arc.scene.ui.TextArea a -> e
    arc.scene.ui.Label label -> f
    void <init>(java.lang.String,arc.scene.ui.Dialog$DialogStyle) -> <init>
    void hide() -> hide
    void Run() -> a
    void setup() -> b
    void updateChat() -> c
    void lambda$setup$4() -> d
    void lambda$setup$3(arc.files.Fi) -> a
    void lambda$setup$2() -> e
    void lambda$setup$1(arc.files.Fi) -> b
    void lambda$setup$0(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicReference,java.util.regex.Pattern,arc.scene.ui.layout.Table) -> a
Ozone.UI.JavaEditor$1 -> a.e.d:
    java.lang.StringBuilder val$sb -> a
    void <init>(Ozone.UI.JavaEditor,java.lang.StringBuilder) -> <init>
    void write(int) -> write
Ozone.UI.OzoneMenu -> a.e.e:
    arc.scene.ui.TextField commandsField -> a
    java.lang.String commands -> b
    void <init>(java.lang.String,arc.scene.ui.Dialog$DialogStyle) -> <init>
    void hide() -> hide
    void setup() -> a
    void lambda$setup$6(arc.scene.ui.layout.Table) -> a
    void lambda$setup$5() -> b
    void lambda$setup$4(java.lang.String) -> a
    java.lang.CharSequence lambda$setup$3() -> c
    void lambda$setup$2() -> d
    void lambda$setup$1() -> e
    void lambda$new$0(arc.input.KeyCode) -> a
net.miginfocom.layout.AC -> net.miginfocom.layout.AC:
    java.util.ArrayList cList -> cList
    int curIx -> curIx
    void <init>() -> <init>
    net.miginfocom.layout.DimConstraint[] getConstaints() -> getConstaints
    void setConstaints(net.miginfocom.layout.DimConstraint[]) -> setConstaints
    int getCount() -> getCount
    net.miginfocom.layout.AC count(int) -> count
    net.miginfocom.layout.AC noGrid() -> noGrid
    net.miginfocom.layout.AC noGrid(int[]) -> noGrid
    net.miginfocom.layout.AC index(int) -> index
    net.miginfocom.layout.AC fill() -> fill
    net.miginfocom.layout.AC fill(int[]) -> fill
    net.miginfocom.layout.AC sizeGroup() -> sizeGroup
    net.miginfocom.layout.AC sizeGroup(java.lang.String) -> sizeGroup
    net.miginfocom.layout.AC sizeGroup(java.lang.String,int[]) -> sizeGroup
    net.miginfocom.layout.AC size(java.lang.String) -> size
    net.miginfocom.layout.AC size(java.lang.String,int[]) -> size
    net.miginfocom.layout.AC gap() -> gap
    net.miginfocom.layout.AC gap(java.lang.String) -> gap
    net.miginfocom.layout.AC gap(java.lang.String,int[]) -> gap
    net.miginfocom.layout.AC align(java.lang.String) -> align
    net.miginfocom.layout.AC align(java.lang.String,int[]) -> align
    net.miginfocom.layout.AC growPrio(int) -> growPrio
    net.miginfocom.layout.AC growPrio(int,int[]) -> growPrio
    net.miginfocom.layout.AC grow() -> grow
    net.miginfocom.layout.AC grow(float) -> grow
    net.miginfocom.layout.AC grow(float,int[]) -> grow
    net.miginfocom.layout.AC shrinkPrio(int) -> shrinkPrio
    net.miginfocom.layout.AC shrinkPrio(int,int[]) -> shrinkPrio
    net.miginfocom.layout.AC shrink() -> shrink
    net.miginfocom.layout.AC shrink(float) -> shrink
    net.miginfocom.layout.AC shrink(float,int[]) -> shrink
    net.miginfocom.layout.AC shrinkWeight(float) -> shrinkWeight
    net.miginfocom.layout.AC shrinkWeight(float,int[]) -> shrinkWeight
    void makeSize(int) -> makeSize
    java.lang.Object readResolve() -> readResolve
    void readExternal(java.io.ObjectInput) -> readExternal
    void writeExternal(java.io.ObjectOutput) -> writeExternal
net.miginfocom.layout.AnimSpec -> net.miginfocom.layout.AnimSpec:
    net.miginfocom.layout.AnimSpec DEF -> DEF
    int prio -> prio
    int durMillis -> durMillis
    float easeIn -> easeIn
    float easeOut -> easeOut
    void <init>(int,int,float,float) -> <init>
    int getPriority() -> getPriority
    int getDurationMillis(int) -> getDurationMillis
    int getDurationMillis() -> getDurationMillis
    float getEaseIn() -> getEaseIn
    float getEaseOut() -> getEaseOut
    void <clinit>() -> <clinit>
net.miginfocom.layout.BoundSize -> net.miginfocom.layout.BoundSize:
    net.miginfocom.layout.BoundSize NULL_SIZE -> NULL_SIZE
    net.miginfocom.layout.BoundSize ZERO_PIXEL -> ZERO_PIXEL
    net.miginfocom.layout.UnitValue min -> min
    net.miginfocom.layout.UnitValue pref -> pref
    net.miginfocom.layout.UnitValue max -> max
    boolean gapPush -> gapPush
    long serialVersionUID -> serialVersionUID
    void <init>(net.miginfocom.layout.UnitValue,java.lang.String) -> <init>
    void <init>(net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,java.lang.String) -> <init>
    void <init>(net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,boolean,java.lang.String) -> <init>
    net.miginfocom.layout.UnitValue getMin() -> getMin
    net.miginfocom.layout.UnitValue getPreferred() -> getPreferred
    net.miginfocom.layout.UnitValue getMax() -> getMax
    boolean getGapPush() -> getGapPush
    boolean isUnset() -> isUnset
    int constrain(int,float,net.miginfocom.layout.ContainerWrapper) -> constrain
    net.miginfocom.layout.UnitValue getSize(int) -> getSize
    int[] getPixelSizes(float,net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.ComponentWrapper) -> getPixelSizes
    java.lang.String getConstraintString() -> getConstraintString
    void checkNotLinked() -> checkNotLinked
    boolean isLinked() -> isLinked
    boolean isAbsolute() -> isAbsolute
    java.lang.String toString() -> toString
    java.lang.Object readResolve() -> readResolve
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    void <clinit>() -> <clinit>
net.miginfocom.layout.BoundSize$1 -> net.miginfocom.layout.BoundSize$1:
    void <init>() -> <init>
    java.beans.Expression instantiate(java.lang.Object,java.beans.Encoder) -> instantiate
net.miginfocom.layout.CC -> net.miginfocom.layout.CC:
    net.miginfocom.layout.BoundSize DEF_GAP -> DEF_GAP
    java.lang.String[] DOCK_SIDES -> DOCK_SIDES
    int dock -> dock
    net.miginfocom.layout.UnitValue[] pos -> pos
    net.miginfocom.layout.UnitValue[] padding -> padding
    net.miginfocom.layout.UnitValue[] visualPadding -> visualPadding
    java.lang.Boolean flowX -> flowX
    int skip -> skip
    int split -> split
    int spanX -> spanX
    int spanY -> spanY
    int cellX -> cellX
    int cellY -> cellY
    java.lang.String tag -> tag
    java.lang.String id -> id
    int hideMode -> hideMode
    net.miginfocom.layout.DimConstraint hor -> hor
    net.miginfocom.layout.DimConstraint ver -> ver
    net.miginfocom.layout.BoundSize newline -> newline
    net.miginfocom.layout.BoundSize wrap -> wrap
    boolean boundsInGrid -> boundsInGrid
    boolean external -> external
    java.lang.Float pushX -> pushX
    java.lang.Float pushY -> pushY
    net.miginfocom.layout.AnimSpec animSpec -> animSpec
    java.lang.String[] EMPTY_ARR -> EMPTY_ARR
    java.lang.String[] linkTargets -> linkTargets
    void <init>() -> <init>
    java.lang.String[] getLinkTargets() -> getLinkTargets
    void addLinkTargetIDs(java.util.ArrayList,net.miginfocom.layout.UnitValue) -> addLinkTargetIDs
    net.miginfocom.layout.CC endGroupX(java.lang.String) -> endGroupX
    net.miginfocom.layout.CC sizeGroupX(java.lang.String) -> sizeGroupX
    net.miginfocom.layout.CC minWidth(java.lang.String) -> minWidth
    net.miginfocom.layout.CC width(java.lang.String) -> width
    net.miginfocom.layout.CC maxWidth(java.lang.String) -> maxWidth
    net.miginfocom.layout.CC gapX(java.lang.String,java.lang.String) -> gapX
    net.miginfocom.layout.CC alignX(java.lang.String) -> alignX
    net.miginfocom.layout.CC growPrioX(int) -> growPrioX
    net.miginfocom.layout.CC growPrio(int[]) -> growPrio
    net.miginfocom.layout.CC growX() -> growX
    net.miginfocom.layout.CC growX(float) -> growX
    net.miginfocom.layout.CC grow(float[]) -> grow
    net.miginfocom.layout.CC shrinkPrioX(int) -> shrinkPrioX
    net.miginfocom.layout.CC shrinkPrio(int[]) -> shrinkPrio
    net.miginfocom.layout.CC shrinkX(float) -> shrinkX
    net.miginfocom.layout.CC shrink(float[]) -> shrink
    net.miginfocom.layout.CC endGroupY(java.lang.String) -> endGroupY
    net.miginfocom.layout.CC endGroup(java.lang.String[]) -> endGroup
    net.miginfocom.layout.CC sizeGroupY(java.lang.String) -> sizeGroupY
    net.miginfocom.layout.CC sizeGroup(java.lang.String[]) -> sizeGroup
    net.miginfocom.layout.CC minHeight(java.lang.String) -> minHeight
    net.miginfocom.layout.CC height(java.lang.String) -> height
    net.miginfocom.layout.CC maxHeight(java.lang.String) -> maxHeight
    net.miginfocom.layout.CC gapY(java.lang.String,java.lang.String) -> gapY
    net.miginfocom.layout.CC alignY(java.lang.String) -> alignY
    net.miginfocom.layout.CC growPrioY(int) -> growPrioY
    net.miginfocom.layout.CC growY() -> growY
    net.miginfocom.layout.CC growY(float) -> growY
    net.miginfocom.layout.CC growY(java.lang.Float) -> growY
    net.miginfocom.layout.CC shrinkPrioY(int) -> shrinkPrioY
    net.miginfocom.layout.CC shrinkY(float) -> shrinkY
    net.miginfocom.layout.CC hideMode(int) -> hideMode
    net.miginfocom.layout.CC id(java.lang.String) -> id
    net.miginfocom.layout.CC tag(java.lang.String) -> tag
    net.miginfocom.layout.CC cell(int[]) -> cell
    net.miginfocom.layout.CC span(int[]) -> span
    net.miginfocom.layout.CC gap(java.lang.String[]) -> gap
    net.miginfocom.layout.CC gapBefore(java.lang.String) -> gapBefore
    net.miginfocom.layout.CC gapAfter(java.lang.String) -> gapAfter
    net.miginfocom.layout.CC gapTop(java.lang.String) -> gapTop
    net.miginfocom.layout.CC gapLeft(java.lang.String) -> gapLeft
    net.miginfocom.layout.CC gapBottom(java.lang.String) -> gapBottom
    net.miginfocom.layout.CC gapRight(java.lang.String) -> gapRight
    net.miginfocom.layout.CC spanY() -> spanY
    net.miginfocom.layout.CC spanY(int) -> spanY
    net.miginfocom.layout.CC spanX() -> spanX
    net.miginfocom.layout.CC spanX(int) -> spanX
    net.miginfocom.layout.CC push() -> push
    net.miginfocom.layout.CC push(java.lang.Float,java.lang.Float) -> push
    net.miginfocom.layout.CC pushY() -> pushY
    net.miginfocom.layout.CC pushY(java.lang.Float) -> pushY
    net.miginfocom.layout.CC pushX() -> pushX
    net.miginfocom.layout.CC pushX(java.lang.Float) -> pushX
    net.miginfocom.layout.CC split(int) -> split
    net.miginfocom.layout.CC split() -> split
    net.miginfocom.layout.CC skip(int) -> skip
    net.miginfocom.layout.CC skip() -> skip
    net.miginfocom.layout.CC external() -> external
    net.miginfocom.layout.CC flowX() -> flowX
    net.miginfocom.layout.CC flowY() -> flowY
    net.miginfocom.layout.CC grow() -> grow
    net.miginfocom.layout.CC newline() -> newline
    net.miginfocom.layout.CC newline(java.lang.String) -> newline
    net.miginfocom.layout.CC wrap() -> wrap
    net.miginfocom.layout.CC wrap(java.lang.String) -> wrap
    net.miginfocom.layout.CC dockNorth() -> dockNorth
    net.miginfocom.layout.CC dockWest() -> dockWest
    net.miginfocom.layout.CC dockSouth() -> dockSouth
    net.miginfocom.layout.CC dockEast() -> dockEast
    net.miginfocom.layout.CC x(java.lang.String) -> x
    net.miginfocom.layout.CC y(java.lang.String) -> y
    net.miginfocom.layout.CC x2(java.lang.String) -> x2
    net.miginfocom.layout.CC y2(java.lang.String) -> y2
    net.miginfocom.layout.CC corrPos(java.lang.String,int) -> corrPos
    net.miginfocom.layout.CC pos(java.lang.String,java.lang.String) -> pos
    net.miginfocom.layout.CC pos(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> pos
    net.miginfocom.layout.CC pad(int,int,int,int) -> pad
    net.miginfocom.layout.CC pad(java.lang.String) -> pad
    net.miginfocom.layout.DimConstraint getHorizontal() -> getHorizontal
    void setHorizontal(net.miginfocom.layout.DimConstraint) -> setHorizontal
    net.miginfocom.layout.DimConstraint getVertical() -> getVertical
    void setVertical(net.miginfocom.layout.DimConstraint) -> setVertical
    net.miginfocom.layout.DimConstraint getDimConstraint(boolean) -> getDimConstraint
    net.miginfocom.layout.UnitValue[] getPos() -> getPos
    void setPos(net.miginfocom.layout.UnitValue[]) -> setPos
    boolean isBoundsInGrid() -> isBoundsInGrid
    void setBoundsInGrid(boolean) -> setBoundsInGrid
    int getCellX() -> getCellX
    void setCellX(int) -> setCellX
    int getCellY() -> getCellY
    void setCellY(int) -> setCellY
    int getDockSide() -> getDockSide
    void setDockSide(int) -> setDockSide
    boolean isExternal() -> isExternal
    void setExternal(boolean) -> setExternal
    java.lang.Boolean getFlowX() -> getFlowX
    void setFlowX(java.lang.Boolean) -> setFlowX
    int getHideMode() -> getHideMode
    void setHideMode(int) -> setHideMode
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    net.miginfocom.layout.UnitValue[] getPadding() -> getPadding
    void setPadding(net.miginfocom.layout.UnitValue[]) -> setPadding
    net.miginfocom.layout.UnitValue[] getVisualPadding() -> getVisualPadding
    void setVisualPadding(net.miginfocom.layout.UnitValue[]) -> setVisualPadding
    int getSkip() -> getSkip
    void setSkip(int) -> setSkip
    int getSpanX() -> getSpanX
    void setSpanX(int) -> setSpanX
    int getSpanY() -> getSpanY
    void setSpanY(int) -> setSpanY
    java.lang.Float getPushX() -> getPushX
    void setPushX(java.lang.Float) -> setPushX
    java.lang.Float getPushY() -> getPushY
    void setPushY(java.lang.Float) -> setPushY
    int getSplit() -> getSplit
    void setSplit(int) -> setSplit
    java.lang.String getTag() -> getTag
    void setTag(java.lang.String) -> setTag
    boolean isWrap() -> isWrap
    void setWrap(boolean) -> setWrap
    net.miginfocom.layout.BoundSize getWrapGapSize() -> getWrapGapSize
    void setWrapGapSize(net.miginfocom.layout.BoundSize) -> setWrapGapSize
    boolean isNewline() -> isNewline
    void setNewline(boolean) -> setNewline
    net.miginfocom.layout.BoundSize getNewlineGapSize() -> getNewlineGapSize
    void setNewlineGapSize(net.miginfocom.layout.BoundSize) -> setNewlineGapSize
    net.miginfocom.layout.AnimSpec getAnimSpec() -> getAnimSpec
    java.lang.Object readResolve() -> readResolve
    void readExternal(java.io.ObjectInput) -> readExternal
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void <clinit>() -> <clinit>
net.miginfocom.layout.ComponentWrapper -> net.miginfocom.layout.ComponentWrapper:
    int TYPE_UNSET -> TYPE_UNSET
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_CONTAINER -> TYPE_CONTAINER
    int TYPE_LABEL -> TYPE_LABEL
    int TYPE_TEXT_FIELD -> TYPE_TEXT_FIELD
    int TYPE_TEXT_AREA -> TYPE_TEXT_AREA
    int TYPE_BUTTON -> TYPE_BUTTON
    int TYPE_LIST -> TYPE_LIST
    int TYPE_TABLE -> TYPE_TABLE
    int TYPE_SCROLL_PANE -> TYPE_SCROLL_PANE
    int TYPE_IMAGE -> TYPE_IMAGE
    int TYPE_PANEL -> TYPE_PANEL
    int TYPE_COMBO_BOX -> TYPE_COMBO_BOX
    int TYPE_SLIDER -> TYPE_SLIDER
    int TYPE_SPINNER -> TYPE_SPINNER
    int TYPE_PROGRESS_BAR -> TYPE_PROGRESS_BAR
    int TYPE_TREE -> TYPE_TREE
    int TYPE_CHECK_BOX -> TYPE_CHECK_BOX
    int TYPE_SCROLL_BAR -> TYPE_SCROLL_BAR
    int TYPE_SEPARATOR -> TYPE_SEPARATOR
    int TYPE_TABBED_PANE -> TYPE_TABBED_PANE
    java.lang.Object getComponent() -> getComponent
    int getX() -> getX
    int getY() -> getY
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getScreenLocationX() -> getScreenLocationX
    int getScreenLocationY() -> getScreenLocationY
    int getMinimumWidth(int) -> getMinimumWidth
    int getMinimumHeight(int) -> getMinimumHeight
    int getPreferredWidth(int) -> getPreferredWidth
    int getPreferredHeight(int) -> getPreferredHeight
    int getMaximumWidth(int) -> getMaximumWidth
    int getMaximumHeight(int) -> getMaximumHeight
    void setBounds(int,int,int,int) -> setBounds
    boolean isVisible() -> isVisible
    int getBaseline(int,int) -> getBaseline
    boolean hasBaseline() -> hasBaseline
    net.miginfocom.layout.ContainerWrapper getParent() -> getParent
    float getPixelUnitFactor(boolean) -> getPixelUnitFactor
    int getHorizontalScreenDPI() -> getHorizontalScreenDPI
    int getVerticalScreenDPI() -> getVerticalScreenDPI
    int getScreenWidth() -> getScreenWidth
    int getScreenHeight() -> getScreenHeight
    java.lang.String getLinkId() -> getLinkId
    int getLayoutHashCode() -> getLayoutHashCode
    int[] getVisualPadding() -> getVisualPadding
    void paintDebugOutline(boolean) -> paintDebugOutline
    int getComponentType(boolean) -> getComponentType
    int getContentBias() -> getContentBias
net.miginfocom.layout.ConstraintParser -> net.miginfocom.layout.ConstraintParser:
    void <init>() -> <init>
    net.miginfocom.layout.LC parseLayoutConstraint(java.lang.String) -> parseLayoutConstraint
    net.miginfocom.layout.AC parseRowConstraints(java.lang.String) -> parseRowConstraints
    net.miginfocom.layout.AC parseColumnConstraints(java.lang.String) -> parseColumnConstraints
    net.miginfocom.layout.AC parseAxisConstraint(java.lang.String,boolean) -> parseAxisConstraint
    net.miginfocom.layout.DimConstraint parseDimConstraint(java.lang.String,net.miginfocom.layout.BoundSize,net.miginfocom.layout.BoundSize,boolean) -> parseDimConstraint
    java.util.Map parseComponentConstraints(java.util.Map) -> parseComponentConstraints
    net.miginfocom.layout.CC parseComponentConstraint(java.lang.String) -> parseComponentConstraint
    net.miginfocom.layout.UnitValue[] parseInsets(java.lang.String,boolean) -> parseInsets
    net.miginfocom.layout.BoundSize[] parseGaps(java.lang.String) -> parseGaps
    int parseSpan(java.lang.String) -> parseSpan
    java.lang.Float parseFloat(java.lang.String,java.lang.Float) -> parseFloat
    net.miginfocom.layout.BoundSize parseBoundSize(java.lang.String,boolean,boolean) -> parseBoundSize
    net.miginfocom.layout.UnitValue parseUnitValueOrAlign(java.lang.String,boolean,net.miginfocom.layout.UnitValue) -> parseUnitValueOrAlign
    net.miginfocom.layout.UnitValue parseUnitValue(java.lang.String,boolean) -> parseUnitValue
    net.miginfocom.layout.UnitValue parseUnitValue(java.lang.String,net.miginfocom.layout.UnitValue,boolean) -> parseUnitValue
    net.miginfocom.layout.UnitValue parseAlignKeywords(java.lang.String,boolean) -> parseAlignKeywords
    java.lang.String[] getNumTextParts(java.lang.String) -> getNumTextParts
    int getOper(java.lang.String) -> getOper
    int startsWithLenient(java.lang.String,java.lang.String[],int[],boolean) -> startsWithLenient
    int startsWithLenient(java.lang.String,java.lang.String,int,boolean) -> startsWithLenient
    java.lang.String[] toTrimmedTokens(java.lang.String,char) -> toTrimmedTokens
    java.util.ArrayList getRowColAndGapsTrimmed(java.lang.String) -> getRowColAndGapsTrimmed
    java.lang.String prepare(java.lang.String) -> prepare
net.miginfocom.layout.ContainerWrapper -> net.miginfocom.layout.ContainerWrapper:
    net.miginfocom.layout.ComponentWrapper[] getComponents() -> getComponents
    int getComponentCount() -> getComponentCount
    java.lang.Object getLayout() -> getLayout
    boolean isLeftToRight() -> isLeftToRight
    void paintDebugCell(int,int,int,int) -> paintDebugCell
net.miginfocom.layout.DimConstraint -> net.miginfocom.layout.DimConstraint:
    net.miginfocom.layout.ResizeConstraint resize -> resize
    java.lang.String sizeGroup -> sizeGroup
    net.miginfocom.layout.BoundSize size -> size
    net.miginfocom.layout.BoundSize gapBefore -> gapBefore
    net.miginfocom.layout.BoundSize gapAfter -> gapAfter
    net.miginfocom.layout.UnitValue align -> align
    java.lang.String endGroup -> endGroup
    boolean fill -> fill
    boolean noGrid -> noGrid
    void <init>() -> <init>
    int getGrowPriority() -> getGrowPriority
    void setGrowPriority(int) -> setGrowPriority
    java.lang.Float getGrow() -> getGrow
    void setGrow(java.lang.Float) -> setGrow
    int getShrinkPriority() -> getShrinkPriority
    void setShrinkPriority(int) -> setShrinkPriority
    java.lang.Float getShrink() -> getShrink
    void setShrink(java.lang.Float) -> setShrink
    net.miginfocom.layout.UnitValue getAlignOrDefault(boolean) -> getAlignOrDefault
    net.miginfocom.layout.UnitValue getAlign() -> getAlign
    void setAlign(net.miginfocom.layout.UnitValue) -> setAlign
    net.miginfocom.layout.BoundSize getGapAfter() -> getGapAfter
    void setGapAfter(net.miginfocom.layout.BoundSize) -> setGapAfter
    boolean hasGapAfter() -> hasGapAfter
    boolean isGapAfterPush() -> isGapAfterPush
    net.miginfocom.layout.BoundSize getGapBefore() -> getGapBefore
    void setGapBefore(net.miginfocom.layout.BoundSize) -> setGapBefore
    boolean hasGapBefore() -> hasGapBefore
    boolean isGapBeforePush() -> isGapBeforePush
    net.miginfocom.layout.BoundSize getSize() -> getSize
    void setSize(net.miginfocom.layout.BoundSize) -> setSize
    java.lang.String getSizeGroup() -> getSizeGroup
    void setSizeGroup(java.lang.String) -> setSizeGroup
    java.lang.String getEndGroup() -> getEndGroup
    void setEndGroup(java.lang.String) -> setEndGroup
    boolean isFill() -> isFill
    void setFill(boolean) -> setFill
    boolean isNoGrid() -> isNoGrid
    void setNoGrid(boolean) -> setNoGrid
    int[] getRowGaps(net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.BoundSize,int,boolean) -> getRowGaps
    int[] getComponentGaps(net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.BoundSize,net.miginfocom.layout.ComponentWrapper,java.lang.String,int,int,boolean) -> getComponentGaps
    java.lang.Object readResolve() -> readResolve
    void readExternal(java.io.ObjectInput) -> readExternal
    void writeExternal(java.io.ObjectOutput) -> writeExternal
net.miginfocom.layout.Grid -> net.miginfocom.layout.Grid:
    boolean TEST_GAPS -> TEST_GAPS
    java.lang.Float[] GROW_100 -> GROW_100
    net.miginfocom.layout.DimConstraint DOCK_DIM_CONSTRAINT -> DOCK_DIM_CONSTRAINT
    int MAX_GRID -> MAX_GRID
    int MAX_DOCK_GRID -> MAX_DOCK_GRID
    net.miginfocom.layout.ResizeConstraint GAP_RC_CONST -> GAP_RC_CONST
    net.miginfocom.layout.ResizeConstraint GAP_RC_CONST_PUSH -> GAP_RC_CONST_PUSH
    net.miginfocom.layout.CC DEF_CC -> DEF_CC
    net.miginfocom.layout.LC lc -> lc
    net.miginfocom.layout.ContainerWrapper container -> container
    java.util.LinkedHashMap grid -> grid
    java.util.HashMap wrapGapMap -> wrapGapMap
    java.util.TreeSet rowIndexes -> rowIndexes
    java.util.TreeSet colIndexes -> colIndexes
    net.miginfocom.layout.AC rowConstr -> rowConstr
    net.miginfocom.layout.AC colConstr -> colConstr
    net.miginfocom.layout.Grid$FlowSizeSpec colFlowSpecs -> colFlowSpecs
    net.miginfocom.layout.Grid$FlowSizeSpec rowFlowSpecs -> rowFlowSpecs
    java.util.ArrayList[] colGroupLists -> colGroupLists
    java.util.ArrayList[] rowGroupLists -> rowGroupLists
    int[] width -> width
    int[] height -> height
    java.util.ArrayList debugRects -> debugRects
    java.util.HashMap linkTargetIDs -> linkTargetIDs
    int dockOffY -> dockOffY
    int dockOffX -> dockOffX
    java.lang.Float[] pushXs -> pushXs
    java.lang.Float[] pushYs -> pushYs
    java.util.ArrayList callbackList -> callbackList
    int lastRefWidth -> lastRefWidth
    int lastRefHeight -> lastRefHeight
    java.util.WeakHashMap[] PARENT_ROWCOL_SIZES_MAP -> PARENT_ROWCOL_SIZES_MAP
    java.util.WeakHashMap PARENT_GRIDPOS_MAP -> PARENT_GRIDPOS_MAP
    void <init>(net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.LC,net.miginfocom.layout.AC,net.miginfocom.layout.AC,java.util.Map,java.util.ArrayList) -> <init>
    void ensureIndexSizes(int,int) -> ensureIndexSizes
    net.miginfocom.layout.CC getCC(net.miginfocom.layout.ComponentWrapper,java.util.Map) -> getCC
    void addLinkIDs(net.miginfocom.layout.CC) -> addLinkIDs
    void invalidateContainerSize() -> invalidateContainerSize
    void invalidateComponentSizes() -> invalidateComponentSizes
    boolean layout(int[],net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,boolean,boolean) -> layout
    boolean layout(int[],net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,boolean) -> layout
    boolean layoutImpl(int[],net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,boolean,boolean) -> layoutImpl
    void paintDebug() -> paintDebug
    net.miginfocom.layout.ContainerWrapper getContainer() -> getContainer
    int[] getWidth() -> getWidth
    int[] getWidth(int) -> getWidth
    int[] getHeight() -> getHeight
    int[] getHeight(int) -> getHeight
    void checkSizeCalcs(int,int) -> checkSizeCalcs
    void calcGridSizes(int,int) -> calcGridSizes
    net.miginfocom.layout.UnitValue[] getPos(net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.CC) -> getPos
    net.miginfocom.layout.BoundSize[] getCallbackSize(net.miginfocom.layout.ComponentWrapper) -> getCallbackSize
    int getDockInsets(java.util.TreeSet) -> getDockInsets
    boolean setLinkedBounds(net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.CC,int,int,int,int,boolean) -> setLinkedBounds
    int increase(int[],int) -> increase
    void wrap(int[],net.miginfocom.layout.BoundSize) -> wrap
    void sortCellsByPlatform(java.util.Collection,net.miginfocom.layout.ContainerWrapper) -> sortCellsByPlatform
    java.lang.Float[] getDefaultPushWeights(boolean) -> getDefaultPushWeights
    void clearGroupLinkBounds() -> clearGroupLinkBounds
    void resetLinkValues(boolean,boolean) -> resetLinkValues
    net.miginfocom.layout.Grid$LinkedDimGroup getGroupContaining(java.util.ArrayList[],net.miginfocom.layout.Grid$CompWrap) -> getGroupContaining
    boolean doAbsoluteCorrections(net.miginfocom.layout.Grid$CompWrap,int[]) -> doAbsoluteCorrections
    void adjustSizeForAbsolute(boolean) -> adjustSizeForAbsolute
    int[] getAbsoluteDimBounds(net.miginfocom.layout.Grid$CompWrap,int,boolean) -> getAbsoluteDimBounds
    void layoutInOneDim(int,net.miginfocom.layout.UnitValue,boolean,java.lang.Float[]) -> layoutInOneDim
    void addToSizeGroup(java.util.HashMap,java.lang.String,int[]) -> addToSizeGroup
    java.util.HashMap addToEndGroup(java.util.HashMap,java.lang.String,int) -> addToEndGroup
    net.miginfocom.layout.Grid$FlowSizeSpec calcRowsOrColsSizes(boolean,int) -> calcRowsOrColsSizes
    int getParentSize(net.miginfocom.layout.ComponentWrapper,boolean) -> getParentSize
    int[] getMinPrefMaxSumSize(boolean,int[][]) -> getMinPrefMaxSumSize
    net.miginfocom.layout.ResizeConstraint[] getRowResizeConstraints(net.miginfocom.layout.DimConstraint[]) -> getRowResizeConstraints
    net.miginfocom.layout.ResizeConstraint[] getComponentResizeConstraints(java.util.ArrayList,boolean) -> getComponentResizeConstraints
    boolean[] getComponentGapPush(java.util.ArrayList,boolean) -> getComponentGapPush
    int[][] getRowGaps(net.miginfocom.layout.DimConstraint[],int,boolean,boolean[]) -> getRowGaps
    int[][] getGaps(java.util.ArrayList,boolean) -> getGaps
    boolean hasDocks() -> hasDocks
    void adjustMinPrefForSpanningComps(net.miginfocom.layout.DimConstraint[],java.lang.Float[],net.miginfocom.layout.Grid$FlowSizeSpec,java.util.ArrayList[]) -> adjustMinPrefForSpanningComps
    java.util.ArrayList[] divideIntoLinkedGroups(boolean) -> divideIntoLinkedGroups
    int convertSpanToSparseGrid(int,int,java.util.TreeSet) -> convertSpanToSparseGrid
    boolean isCellFree(int,int,java.util.ArrayList) -> isCellFree
    net.miginfocom.layout.Grid$Cell getCell(int,int) -> getCell
    void setCell(int,int,net.miginfocom.layout.Grid$Cell) -> setCell
    void addDockingCell(int[],int,net.miginfocom.layout.Grid$CompWrap) -> addDockingCell
    void layoutBaseline(net.miginfocom.layout.ContainerWrapper,java.util.ArrayList,net.miginfocom.layout.DimConstraint,int,int,int,int) -> layoutBaseline
    void layoutSerial(net.miginfocom.layout.ContainerWrapper,java.util.ArrayList,net.miginfocom.layout.DimConstraint,int,int,boolean,int,boolean) -> layoutSerial
    void setCompWrapBounds(net.miginfocom.layout.ContainerWrapper,int[],java.util.ArrayList,net.miginfocom.layout.UnitValue,int,int,boolean,boolean) -> setCompWrapBounds
    void layoutParallel(net.miginfocom.layout.ContainerWrapper,java.util.ArrayList,net.miginfocom.layout.DimConstraint,int,int,boolean,boolean) -> layoutParallel
    void setCompWrapBounds(net.miginfocom.layout.ContainerWrapper,int[][],java.util.ArrayList,net.miginfocom.layout.UnitValue,int,int,boolean,boolean) -> setCompWrapBounds
    net.miginfocom.layout.UnitValue correctAlign(net.miginfocom.layout.CC,net.miginfocom.layout.UnitValue,boolean,boolean) -> correctAlign
    net.miginfocom.layout.Grid$AboveBelow getBaselineAboveBelow(java.util.ArrayList,int,boolean) -> getBaselineAboveBelow
    int getTotalSizeParallel(java.util.ArrayList,int,boolean) -> getTotalSizeParallel
    int getTotalSizeSerial(java.util.ArrayList,int,boolean) -> getTotalSizeSerial
    int getTotalGroupsSizeParallel(java.util.ArrayList,int,boolean) -> getTotalGroupsSizeParallel
    int[][] getComponentSizes(java.util.ArrayList,boolean) -> getComponentSizes
    net.miginfocom.layout.Grid$FlowSizeSpec mergeSizesGapsAndResConstrs(net.miginfocom.layout.ResizeConstraint[],boolean[],int[][],int[][]) -> mergeSizesGapsAndResConstrs
    int[] mergeSizes(int[],int[]) -> mergeSizes
    int mergeSizes(int,int,boolean) -> mergeSizes
    int constrainSize(int) -> constrainSize
    void correctMinMax(int[]) -> correctMinMax
    java.lang.Float[] extractSubArray(net.miginfocom.layout.DimConstraint[],java.lang.Float[],int,int) -> extractSubArray
    void putSizesAndIndexes(java.lang.Object,int[],int[],boolean) -> putSizesAndIndexes
    int[][] getSizesAndIndexes(java.lang.Object,boolean) -> getSizesAndIndexes
    void saveGrid(net.miginfocom.layout.ComponentWrapper,java.util.LinkedHashMap) -> saveGrid
    java.util.HashMap getGridPositions(java.lang.Object) -> getGridPositions
    void access$4100(net.miginfocom.layout.ContainerWrapper,java.util.ArrayList,net.miginfocom.layout.DimConstraint,int,int,boolean,boolean) -> access$4100
    void access$4200(net.miginfocom.layout.ContainerWrapper,java.util.ArrayList,net.miginfocom.layout.DimConstraint,int,int,int,int) -> access$4200
    void access$4300(net.miginfocom.layout.ContainerWrapper,java.util.ArrayList,net.miginfocom.layout.DimConstraint,int,int,boolean,int,boolean) -> access$4300
    int access$4400(java.util.ArrayList,int,boolean) -> access$4400
    net.miginfocom.layout.Grid$AboveBelow access$4500(java.util.ArrayList,int,boolean) -> access$4500
    int access$4600(java.util.ArrayList,int,boolean) -> access$4600
    net.miginfocom.layout.BoundSize[] access$4700(net.miginfocom.layout.Grid,net.miginfocom.layout.ComponentWrapper) -> access$4700
    void access$4800(int[]) -> access$4800
    int access$4900(int) -> access$4900
    java.lang.Float[] access$5500(net.miginfocom.layout.DimConstraint[],java.lang.Float[],int,int) -> access$5500
    void <clinit>() -> <clinit>
net.miginfocom.layout.Grid$1 -> net.miginfocom.layout.Grid$1:
net.miginfocom.layout.Grid$AboveBelow -> net.miginfocom.layout.Grid$AboveBelow:
    int maxAbove -> maxAbove
    int maxBelow -> maxBelow
    void <init>(int,int) -> <init>
    int sum() -> sum
net.miginfocom.layout.Grid$Cell -> net.miginfocom.layout.Grid$Cell:
    int spanx -> spanx
    int spany -> spany
    boolean flowx -> flowx
    java.util.ArrayList compWraps -> compWraps
    boolean hasTagged -> hasTagged
    void <init>(net.miginfocom.layout.Grid$CompWrap) -> <init>
    void <init>(int,int,boolean) -> <init>
    void <init>(net.miginfocom.layout.Grid$CompWrap,int,int,boolean) -> <init>
    void <init>(net.miginfocom.layout.Grid$CompWrap,net.miginfocom.layout.Grid$1) -> <init>
    java.util.ArrayList access$200(net.miginfocom.layout.Grid$Cell) -> access$200
    void <init>(int,int,boolean,net.miginfocom.layout.Grid$1) -> <init>
    boolean access$400(net.miginfocom.layout.Grid$Cell) -> access$400
    boolean access$402(net.miginfocom.layout.Grid$Cell,boolean) -> access$402
    int access$500(net.miginfocom.layout.Grid$Cell) -> access$500
    int access$600(net.miginfocom.layout.Grid$Cell) -> access$600
    boolean access$1100(net.miginfocom.layout.Grid$Cell) -> access$1100
    void <init>(net.miginfocom.layout.Grid$CompWrap,int,int,boolean,net.miginfocom.layout.Grid$1) -> <init>
net.miginfocom.layout.Grid$CompWrap -> net.miginfocom.layout.Grid$CompWrap:
    net.miginfocom.layout.ComponentWrapper comp -> comp
    net.miginfocom.layout.CC cc -> cc
    int eHideMode -> eHideMode
    boolean useVisualPadding -> useVisualPadding
    boolean sizesOk -> sizesOk
    boolean isAbsolute -> isAbsolute
    int[][] gaps -> gaps
    int[] horSizes -> horSizes
    int[] verSizes -> verSizes
    int x -> x
    int y -> y
    int w -> w
    int h -> h
    int forcedPushGaps -> forcedPushGaps
    net.miginfocom.layout.Grid this$0 -> this$0
    void <init>(net.miginfocom.layout.Grid,net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.CC,int,boolean) -> <init>
    int[] getSizes(boolean) -> getSizes
    void validateSize() -> validateSize
    int getSize(net.miginfocom.layout.BoundSize,int,boolean,boolean,int) -> getSize
    void calcGaps(net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.CC,net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.CC,java.lang.String,boolean,boolean) -> calcGaps
    void setDimBounds(int,int,boolean) -> setDimBounds
    void invalidateSizes() -> invalidateSizes
    boolean isPushGap(boolean,boolean) -> isPushGap
    void transferBounds(boolean) -> transferBounds
    void setForcedSizes(int[],boolean) -> setForcedSizes
    void setGaps(int[],int) -> setGaps
    void mergeGapSizes(int[],boolean,boolean) -> mergeGapSizes
    int getGapIx(boolean,boolean) -> getGapIx
    int getSizeInclGaps(int,boolean) -> getSizeInclGaps
    int getSize(int,boolean) -> getSize
    int getGapBefore(int,boolean) -> getGapBefore
    int getGapAfter(int,boolean) -> getGapAfter
    int[] getGaps(boolean,boolean) -> getGaps
    int filter(int,int) -> filter
    boolean isBaselineAlign(boolean) -> isBaselineAlign
    int getBaseline(int) -> getBaseline
    void adjustMinHorSizeUp(int) -> adjustMinHorSizeUp
    void <init>(net.miginfocom.layout.Grid,net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.CC,int,boolean,net.miginfocom.layout.Grid$1) -> <init>
    net.miginfocom.layout.CC access$700(net.miginfocom.layout.Grid$CompWrap) -> access$700
    int[] access$800(net.miginfocom.layout.Grid$CompWrap,boolean) -> access$800
    void access$900(net.miginfocom.layout.Grid$CompWrap,int[],boolean) -> access$900
    net.miginfocom.layout.ComponentWrapper access$1000(net.miginfocom.layout.Grid$CompWrap) -> access$1000
    void access$1200(net.miginfocom.layout.Grid$CompWrap,net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.CC,net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.CC,java.lang.String,boolean,boolean) -> access$1200
    int access$1300(net.miginfocom.layout.Grid$CompWrap) -> access$1300
    int access$1400(net.miginfocom.layout.Grid$CompWrap) -> access$1400
    int access$1500(net.miginfocom.layout.Grid$CompWrap) -> access$1500
    int access$1600(net.miginfocom.layout.Grid$CompWrap) -> access$1600
    int access$1402(net.miginfocom.layout.Grid$CompWrap,int) -> access$1402
    int access$1602(net.miginfocom.layout.Grid$CompWrap,int) -> access$1602
    int access$1302(net.miginfocom.layout.Grid$CompWrap,int) -> access$1302
    int access$1502(net.miginfocom.layout.Grid$CompWrap,int) -> access$1502
    void access$1700(net.miginfocom.layout.Grid$CompWrap,boolean) -> access$1700
    void access$2200(net.miginfocom.layout.Grid$CompWrap,int[],boolean,boolean) -> access$2200
    int access$2302(net.miginfocom.layout.Grid$CompWrap,int) -> access$2302
    int access$2300(net.miginfocom.layout.Grid$CompWrap) -> access$2300
    void access$2400(net.miginfocom.layout.Grid$CompWrap,int[],int) -> access$2400
    void access$2600(net.miginfocom.layout.Grid$CompWrap,int,int,boolean) -> access$2600
    int access$2700(net.miginfocom.layout.Grid$CompWrap,int,boolean) -> access$2700
    boolean access$3100(net.miginfocom.layout.Grid$CompWrap,boolean,boolean) -> access$3100
    int[] access$3200(net.miginfocom.layout.Grid$CompWrap,boolean,boolean) -> access$3200
    boolean access$3700(net.miginfocom.layout.Grid$CompWrap,boolean) -> access$3700
    int access$5000(net.miginfocom.layout.Grid$CompWrap,int) -> access$5000
    int access$5100(net.miginfocom.layout.Grid$CompWrap,int,boolean) -> access$5100
    int access$5200(net.miginfocom.layout.Grid$CompWrap,int,boolean) -> access$5200
    int access$5300(net.miginfocom.layout.Grid$CompWrap,int,boolean) -> access$5300
net.miginfocom.layout.Grid$FlowSizeSpec -> net.miginfocom.layout.Grid$FlowSizeSpec:
    int[][] sizes -> sizes
    net.miginfocom.layout.ResizeConstraint[] resConstsInclGaps -> resConstsInclGaps
    void <init>(int[][],net.miginfocom.layout.ResizeConstraint[]) -> <init>
    int expandSizes(net.miginfocom.layout.DimConstraint[],java.lang.Float[],int,int,int,int,int) -> expandSizes
    int[][] access$2100(net.miginfocom.layout.Grid$FlowSizeSpec) -> access$2100
    net.miginfocom.layout.ResizeConstraint[] access$2800(net.miginfocom.layout.Grid$FlowSizeSpec) -> access$2800
    int access$3400(net.miginfocom.layout.Grid$FlowSizeSpec,net.miginfocom.layout.DimConstraint[],java.lang.Float[],int,int,int,int,int) -> access$3400
    void <init>(int[][],net.miginfocom.layout.ResizeConstraint[],net.miginfocom.layout.Grid$1) -> <init>
net.miginfocom.layout.Grid$LinkedDimGroup -> net.miginfocom.layout.Grid$LinkedDimGroup:
    int TYPE_SERIAL -> TYPE_SERIAL
    int TYPE_PARALLEL -> TYPE_PARALLEL
    int TYPE_BASELINE -> TYPE_BASELINE
    java.lang.String linkCtx -> linkCtx
    int span -> span
    int linkType -> linkType
    boolean isHor -> isHor
    boolean fromEnd -> fromEnd
    java.util.ArrayList _compWraps -> _compWraps
    int lStart -> lStart
    int lSize -> lSize
    void <init>(java.lang.String,int,int,boolean,boolean) -> <init>
    void addCompWrap(net.miginfocom.layout.Grid$CompWrap) -> addCompWrap
    void setCompWraps(java.util.ArrayList) -> setCompWraps
    void layout(net.miginfocom.layout.DimConstraint,int,int,int) -> layout
    int[] getMinPrefMax() -> getMinPrefMax
    int access$1800(net.miginfocom.layout.Grid$LinkedDimGroup) -> access$1800
    boolean access$1900(net.miginfocom.layout.Grid$LinkedDimGroup) -> access$1900
    int access$2000(net.miginfocom.layout.Grid$LinkedDimGroup) -> access$2000
    java.util.ArrayList access$2500(net.miginfocom.layout.Grid$LinkedDimGroup) -> access$2500
    int access$2900(net.miginfocom.layout.Grid$LinkedDimGroup) -> access$2900
    void access$3000(net.miginfocom.layout.Grid$LinkedDimGroup,net.miginfocom.layout.DimConstraint,int,int,int) -> access$3000
    int[] access$3300(net.miginfocom.layout.Grid$LinkedDimGroup) -> access$3300
    void <init>(java.lang.String,int,int,boolean,boolean,net.miginfocom.layout.Grid$1) -> <init>
    void access$3600(net.miginfocom.layout.Grid$LinkedDimGroup,java.util.ArrayList) -> access$3600
    java.lang.String access$3800(net.miginfocom.layout.Grid$LinkedDimGroup) -> access$3800
    void access$3900(net.miginfocom.layout.Grid$LinkedDimGroup,net.miginfocom.layout.Grid$CompWrap) -> access$3900
net.miginfocom.layout.Grid$WeakCell -> net.miginfocom.layout.Grid$WeakCell:
    java.lang.ref.WeakReference componentRef -> componentRef
    int x -> x
    int y -> y
    int spanX -> spanX
    int spanY -> spanY
    void <init>(java.lang.Object,int,int,int,int) -> <init>
    void <init>(java.lang.Object,int,int,int,int,net.miginfocom.layout.Grid$1) -> <init>
    java.lang.ref.WeakReference access$5700(net.miginfocom.layout.Grid$WeakCell) -> access$5700
    int access$5800(net.miginfocom.layout.Grid$WeakCell) -> access$5800
    int access$5900(net.miginfocom.layout.Grid$WeakCell) -> access$5900
    int access$6000(net.miginfocom.layout.Grid$WeakCell) -> access$6000
    int access$6100(net.miginfocom.layout.Grid$WeakCell) -> access$6100
net.miginfocom.layout.InCellGapProvider -> net.miginfocom.layout.InCellGapProvider:
    net.miginfocom.layout.BoundSize getDefaultGap(net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.ComponentWrapper,int,java.lang.String,boolean) -> getDefaultGap
net.miginfocom.layout.LC -> net.miginfocom.layout.LC:
    int wrapAfter -> wrapAfter
    java.lang.Boolean leftToRight -> leftToRight
    net.miginfocom.layout.UnitValue[] insets -> insets
    net.miginfocom.layout.UnitValue alignX -> alignX
    net.miginfocom.layout.UnitValue alignY -> alignY
    net.miginfocom.layout.BoundSize gridGapX -> gridGapX
    net.miginfocom.layout.BoundSize gridGapY -> gridGapY
    net.miginfocom.layout.BoundSize width -> width
    net.miginfocom.layout.BoundSize height -> height
    net.miginfocom.layout.BoundSize packW -> packW
    net.miginfocom.layout.BoundSize packH -> packH
    float pwAlign -> pwAlign
    float phAlign -> phAlign
    int debugMillis -> debugMillis
    int hideMode -> hideMode
    boolean noCache -> noCache
    boolean flowX -> flowX
    boolean fillX -> fillX
    boolean fillY -> fillY
    boolean topToBottom -> topToBottom
    boolean noGrid -> noGrid
    boolean visualPadding -> visualPadding
    void <init>() -> <init>
    boolean isNoCache() -> isNoCache
    void setNoCache(boolean) -> setNoCache
    net.miginfocom.layout.UnitValue getAlignX() -> getAlignX
    void setAlignX(net.miginfocom.layout.UnitValue) -> setAlignX
    net.miginfocom.layout.UnitValue getAlignY() -> getAlignY
    void setAlignY(net.miginfocom.layout.UnitValue) -> setAlignY
    int getDebugMillis() -> getDebugMillis
    void setDebugMillis(int) -> setDebugMillis
    boolean isFillX() -> isFillX
    void setFillX(boolean) -> setFillX
    boolean isFillY() -> isFillY
    void setFillY(boolean) -> setFillY
    boolean isFlowX() -> isFlowX
    void setFlowX(boolean) -> setFlowX
    net.miginfocom.layout.BoundSize getGridGapX() -> getGridGapX
    void setGridGapX(net.miginfocom.layout.BoundSize) -> setGridGapX
    net.miginfocom.layout.BoundSize getGridGapY() -> getGridGapY
    void setGridGapY(net.miginfocom.layout.BoundSize) -> setGridGapY
    int getHideMode() -> getHideMode
    void setHideMode(int) -> setHideMode
    net.miginfocom.layout.UnitValue[] getInsets() -> getInsets
    void setInsets(net.miginfocom.layout.UnitValue[]) -> setInsets
    java.lang.Boolean getLeftToRight() -> getLeftToRight
    void setLeftToRight(java.lang.Boolean) -> setLeftToRight
    boolean isNoGrid() -> isNoGrid
    void setNoGrid(boolean) -> setNoGrid
    boolean isTopToBottom() -> isTopToBottom
    void setTopToBottom(boolean) -> setTopToBottom
    boolean isVisualPadding() -> isVisualPadding
    void setVisualPadding(boolean) -> setVisualPadding
    int getWrapAfter() -> getWrapAfter
    void setWrapAfter(int) -> setWrapAfter
    net.miginfocom.layout.BoundSize getPackWidth() -> getPackWidth
    void setPackWidth(net.miginfocom.layout.BoundSize) -> setPackWidth
    net.miginfocom.layout.BoundSize getPackHeight() -> getPackHeight
    void setPackHeight(net.miginfocom.layout.BoundSize) -> setPackHeight
    float getPackHeightAlign() -> getPackHeightAlign
    void setPackHeightAlign(float) -> setPackHeightAlign
    float getPackWidthAlign() -> getPackWidthAlign
    void setPackWidthAlign(float) -> setPackWidthAlign
    net.miginfocom.layout.BoundSize getWidth() -> getWidth
    void setWidth(net.miginfocom.layout.BoundSize) -> setWidth
    net.miginfocom.layout.BoundSize getHeight() -> getHeight
    void setHeight(net.miginfocom.layout.BoundSize) -> setHeight
    net.miginfocom.layout.LC pack() -> pack
    net.miginfocom.layout.LC pack(java.lang.String,java.lang.String) -> pack
    net.miginfocom.layout.LC packAlign(float,float) -> packAlign
    net.miginfocom.layout.LC wrap() -> wrap
    net.miginfocom.layout.LC wrapAfter(int) -> wrapAfter
    net.miginfocom.layout.LC noCache() -> noCache
    net.miginfocom.layout.LC flowY() -> flowY
    net.miginfocom.layout.LC flowX() -> flowX
    net.miginfocom.layout.LC fill() -> fill
    net.miginfocom.layout.LC fillX() -> fillX
    net.miginfocom.layout.LC fillY() -> fillY
    net.miginfocom.layout.LC leftToRight(boolean) -> leftToRight
    net.miginfocom.layout.LC rightToLeft() -> rightToLeft
    net.miginfocom.layout.LC bottomToTop() -> bottomToTop
    net.miginfocom.layout.LC topToBottom() -> topToBottom
    net.miginfocom.layout.LC noGrid() -> noGrid
    net.miginfocom.layout.LC noVisualPadding() -> noVisualPadding
    net.miginfocom.layout.LC insetsAll(java.lang.String) -> insetsAll
    net.miginfocom.layout.LC insets(java.lang.String) -> insets
    net.miginfocom.layout.LC insets(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> insets
    net.miginfocom.layout.LC alignX(java.lang.String) -> alignX
    net.miginfocom.layout.LC alignY(java.lang.String) -> alignY
    net.miginfocom.layout.LC align(java.lang.String,java.lang.String) -> align
    net.miginfocom.layout.LC gridGapX(java.lang.String) -> gridGapX
    net.miginfocom.layout.LC gridGapY(java.lang.String) -> gridGapY
    net.miginfocom.layout.LC gridGap(java.lang.String,java.lang.String) -> gridGap
    net.miginfocom.layout.LC debug() -> debug
    net.miginfocom.layout.LC debug(int) -> debug
    net.miginfocom.layout.LC hideMode(int) -> hideMode
    net.miginfocom.layout.LC minWidth(java.lang.String) -> minWidth
    net.miginfocom.layout.LC width(java.lang.String) -> width
    net.miginfocom.layout.LC maxWidth(java.lang.String) -> maxWidth
    net.miginfocom.layout.LC minHeight(java.lang.String) -> minHeight
    net.miginfocom.layout.LC height(java.lang.String) -> height
    net.miginfocom.layout.LC maxHeight(java.lang.String) -> maxHeight
    java.lang.Object readResolve() -> readResolve
    void readExternal(java.io.ObjectInput) -> readExternal
    void writeExternal(java.io.ObjectOutput) -> writeExternal
net.miginfocom.layout.LayoutCallback -> net.miginfocom.layout.LayoutCallback:
    void <init>() -> <init>
    net.miginfocom.layout.UnitValue[] getPosition(net.miginfocom.layout.ComponentWrapper) -> getPosition
    net.miginfocom.layout.BoundSize[] getSize(net.miginfocom.layout.ComponentWrapper) -> getSize
    void correctBounds(net.miginfocom.layout.ComponentWrapper) -> correctBounds
net.miginfocom.layout.LayoutUtil -> net.miginfocom.layout.LayoutUtil:
    int INF -> INF
    int NOT_SET -> NOT_SET
    int MIN -> MIN
    int PREF -> PREF
    int MAX -> MAX
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    java.util.WeakHashMap CR_MAP -> CR_MAP
    java.util.WeakHashMap DT_MAP -> DT_MAP
    int eSz -> eSz
    int globalDebugMillis -> globalDebugMillis
    boolean HAS_BEANS -> HAS_BEANS
    java.io.ByteArrayOutputStream writeOutputStream -> writeOutputStream
    byte[] readBuf -> readBuf
    java.util.IdentityHashMap SER_MAP -> SER_MAP
    boolean hasBeans() -> hasBeans
    void <init>() -> <init>
    java.lang.String getVersion() -> getVersion
    int getGlobalDebugMillis() -> getGlobalDebugMillis
    void setGlobalDebugMillis(int) -> setGlobalDebugMillis
    void setDesignTime(net.miginfocom.layout.ContainerWrapper,boolean) -> setDesignTime
    boolean isDesignTime(net.miginfocom.layout.ContainerWrapper) -> isDesignTime
    int getDesignTimeEmptySize() -> getDesignTimeEmptySize
    void setDesignTimeEmptySize(int) -> setDesignTimeEmptySize
    void putCCString(java.lang.Object,java.lang.String) -> putCCString
    void setDelegate(java.lang.Class,java.beans.PersistenceDelegate) -> setDelegate
    java.lang.String getCCString(java.lang.Object) -> getCCString
    void throwCC() -> throwCC
    int[] calculateSerial(int[][],net.miginfocom.layout.ResizeConstraint[],java.lang.Float[],int,int) -> calculateSerial
    java.lang.Object getIndexSafe(java.lang.Object[],int) -> getIndexSafe
    int getBrokenBoundary(float,int,int) -> getBrokenBoundary
    int sum(int[],int,int) -> sum
    int sum(int[]) -> sum
    float clamp(float,float,float) -> clamp
    int clamp(int,int,int) -> clamp
    int getSizeSafe(int[],int) -> getSizeSafe
    net.miginfocom.layout.BoundSize derive(net.miginfocom.layout.BoundSize,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue) -> derive
    boolean isLeftToRight(net.miginfocom.layout.LC,net.miginfocom.layout.ContainerWrapper) -> isLeftToRight
    int[] roundSizes(float[]) -> roundSizes
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    net.miginfocom.layout.UnitValue getInsets(net.miginfocom.layout.LC,int,boolean) -> getInsets
    void writeXMLObject(java.io.OutputStream,java.lang.Object,java.beans.ExceptionListener) -> writeXMLObject
    void writeAsXML(java.io.ObjectOutput,java.lang.Object) -> writeAsXML
    java.lang.Object readAsXML(java.io.ObjectInput) -> readAsXML
    void setSerializedObject(java.lang.Object,java.lang.Object) -> setSerializedObject
    java.lang.Object getSerializedObject(java.lang.Object) -> getSerializedObject
    void <clinit>() -> <clinit>
net.miginfocom.layout.LayoutUtil$1 -> net.miginfocom.layout.LayoutUtil$1:
    void <init>() -> <init>
    void exceptionThrown(java.lang.Exception) -> exceptionThrown
net.miginfocom.layout.LinkHandler -> net.miginfocom.layout.LinkHandler:
    int X -> X
    int Y -> Y
    int WIDTH -> WIDTH
    int HEIGHT -> HEIGHT
    int X2 -> X2
    int Y2 -> Y2
    int VALUES -> VALUES
    int VALUES_TEMP -> VALUES_TEMP
    java.util.WeakHashMap LAYOUTS -> LAYOUTS
    void <init>() -> <init>
    java.lang.Integer getValue(java.lang.Object,java.lang.String,int) -> getValue
    boolean setBounds(java.lang.Object,java.lang.String,int,int,int,int) -> setBounds
    boolean setBounds(java.lang.Object,java.lang.String,int,int,int,int,boolean,boolean) -> setBounds
    void clearWeakReferencesNow() -> clearWeakReferencesNow
    boolean clearBounds(java.lang.Object,java.lang.String) -> clearBounds
    void clearTemporaryBounds(java.lang.Object) -> clearTemporaryBounds
    void <clinit>() -> <clinit>
net.miginfocom.layout.PlatformDefaults -> net.miginfocom.layout.PlatformDefaults:
    java.lang.String VISUAL_PADDING_PROPERTY -> VISUAL_PADDING_PROPERTY
    int DEF_H_UNIT -> DEF_H_UNIT
    int DEF_V_UNIT -> DEF_V_UNIT
    net.miginfocom.layout.InCellGapProvider GAP_PROVIDER -> GAP_PROVIDER
    int MOD_COUNT -> MOD_COUNT
    net.miginfocom.layout.UnitValue LPX6 -> LPX6
    net.miginfocom.layout.UnitValue LPX7 -> LPX7
    net.miginfocom.layout.UnitValue LPX11 -> LPX11
    net.miginfocom.layout.UnitValue LPX12 -> LPX12
    net.miginfocom.layout.UnitValue LPX16 -> LPX16
    net.miginfocom.layout.UnitValue LPX18 -> LPX18
    net.miginfocom.layout.UnitValue LPX20 -> LPX20
    net.miginfocom.layout.UnitValue LPY6 -> LPY6
    net.miginfocom.layout.UnitValue LPY7 -> LPY7
    net.miginfocom.layout.UnitValue LPY11 -> LPY11
    net.miginfocom.layout.UnitValue LPY12 -> LPY12
    net.miginfocom.layout.UnitValue LPY16 -> LPY16
    net.miginfocom.layout.UnitValue LPY18 -> LPY18
    net.miginfocom.layout.UnitValue LPY20 -> LPY20
    int WINDOWS_XP -> WINDOWS_XP
    int MAC_OSX -> MAC_OSX
    int GNOME -> GNOME
    int CUR_PLAF -> CUR_PLAF
    net.miginfocom.layout.UnitValue[] PANEL_INS -> PANEL_INS
    net.miginfocom.layout.UnitValue[] DIALOG_INS -> DIALOG_INS
    java.lang.String BUTTON_FORMAT -> BUTTON_FORMAT
    java.util.HashMap HOR_DEFS -> HOR_DEFS
    java.util.HashMap VER_DEFS -> VER_DEFS
    net.miginfocom.layout.BoundSize DEF_VGAP -> DEF_VGAP
    net.miginfocom.layout.BoundSize DEF_HGAP -> DEF_HGAP
    net.miginfocom.layout.BoundSize RELATED_X -> RELATED_X
    net.miginfocom.layout.BoundSize RELATED_Y -> RELATED_Y
    net.miginfocom.layout.BoundSize UNRELATED_X -> UNRELATED_X
    net.miginfocom.layout.BoundSize UNRELATED_Y -> UNRELATED_Y
    net.miginfocom.layout.UnitValue BUTT_WIDTH -> BUTT_WIDTH
    net.miginfocom.layout.UnitValue BUTT_PADDING -> BUTT_PADDING
    java.lang.Float horScale -> horScale
    java.lang.Float verScale -> verScale
    int BASE_FONT_SIZE -> BASE_FONT_SIZE
    int BASE_SCALE_FACTOR -> BASE_SCALE_FACTOR
    int BASE_REAL_PIXEL -> BASE_REAL_PIXEL
    int LP_BASE -> LP_BASE
    java.lang.Integer BASE_DPI_FORCED -> BASE_DPI_FORCED
    int BASE_DPI -> BASE_DPI
    boolean dra -> dra
    java.util.HashMap VISUAL_BOUNDS -> VISUAL_BOUNDS
    int getCurrentPlatform() -> getCurrentPlatform
    void <init>() -> <init>
    void setPlatform(int) -> setPlatform
    void setDefaultVisualPadding(java.lang.String,int[]) -> setDefaultVisualPadding
    int[] getDefaultVisualPadding(java.lang.String) -> getDefaultVisualPadding
    int getPlatformDPI(int) -> getPlatformDPI
    int getPlatform() -> getPlatform
    int getDefaultDPI() -> getDefaultDPI
    void setDefaultDPI(java.lang.Integer) -> setDefaultDPI
    java.lang.Float getHorizontalScaleFactor() -> getHorizontalScaleFactor
    void setHorizontalScaleFactor(java.lang.Float) -> setHorizontalScaleFactor
    java.lang.Float getVerticalScaleFactor() -> getVerticalScaleFactor
    void setVerticalScaleFactor(java.lang.Float) -> setVerticalScaleFactor
    int getLogicalPixelBase() -> getLogicalPixelBase
    void setLogicalPixelBase(int) -> setLogicalPixelBase
    void setRelatedGap(net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue) -> setRelatedGap
    void setUnrelatedGap(net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue) -> setUnrelatedGap
    void setParagraphGap(net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue) -> setParagraphGap
    void setIndentGap(net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue) -> setIndentGap
    void setGridCellGap(net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue) -> setGridCellGap
    void setMinimumButtonWidth(net.miginfocom.layout.UnitValue) -> setMinimumButtonWidth
    net.miginfocom.layout.UnitValue getMinimumButtonWidth() -> getMinimumButtonWidth
    void setMinimumButtonPadding(net.miginfocom.layout.UnitValue) -> setMinimumButtonPadding
    net.miginfocom.layout.UnitValue getMinimumButtonPadding() -> getMinimumButtonPadding
    float getMinimumButtonWidthIncludingPadding(float,net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.ComponentWrapper) -> getMinimumButtonWidthIncludingPadding
    net.miginfocom.layout.UnitValue getUnitValueX(java.lang.String) -> getUnitValueX
    net.miginfocom.layout.UnitValue getUnitValueY(java.lang.String) -> getUnitValueY
    void setUnitValue(java.lang.String[],net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue) -> setUnitValue
    int convertToPixels(float,java.lang.String,boolean,float,net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.ComponentWrapper) -> convertToPixels
    java.lang.String getButtonOrder() -> getButtonOrder
    void setButtonOrder(java.lang.String) -> setButtonOrder
    java.lang.String getTagForChar(char) -> getTagForChar
    net.miginfocom.layout.BoundSize getGridGapX() -> getGridGapX
    net.miginfocom.layout.BoundSize getGridGapY() -> getGridGapY
    net.miginfocom.layout.UnitValue getDialogInsets(int) -> getDialogInsets
    void setDialogInsets(net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue) -> setDialogInsets
    net.miginfocom.layout.UnitValue getPanelInsets(int) -> getPanelInsets
    void setPanelInsets(net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue) -> setPanelInsets
    float getLabelAlignPercentage() -> getLabelAlignPercentage
    net.miginfocom.layout.BoundSize getDefaultComponentGap(net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.ComponentWrapper,int,java.lang.String,boolean) -> getDefaultComponentGap
    net.miginfocom.layout.InCellGapProvider getGapProvider() -> getGapProvider
    void setGapProvider(net.miginfocom.layout.InCellGapProvider) -> setGapProvider
    int getModCount() -> getModCount
    void invalidate() -> invalidate
    int getDefaultHorizontalUnit() -> getDefaultHorizontalUnit
    void setDefaultHorizontalUnit(int) -> setDefaultHorizontalUnit
    int getDefaultVerticalUnit() -> getDefaultVerticalUnit
    void setDefaultVerticalUnit(int) -> setDefaultVerticalUnit
    boolean getDefaultRowAlignmentBaseline() -> getDefaultRowAlignmentBaseline
    void setDefaultRowAlignmentBaseline(boolean) -> setDefaultRowAlignmentBaseline
    void <clinit>() -> <clinit>
net.miginfocom.layout.ResizeConstraint -> net.miginfocom.layout.ResizeConstraint:
    java.lang.Float WEIGHT_100 -> WEIGHT_100
    java.lang.Float grow -> grow
    int growPrio -> growPrio
    java.lang.Float shrink -> shrink
    int shrinkPrio -> shrinkPrio
    void <init>() -> <init>
    void <init>(int,java.lang.Float,int,java.lang.Float) -> <init>
    java.lang.Object readResolve() -> readResolve
    void readExternal(java.io.ObjectInput) -> readExternal
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void <clinit>() -> <clinit>
net.miginfocom.layout.UnitConverter -> net.miginfocom.layout.UnitConverter:
    int UNABLE -> UNABLE
    void <init>() -> <init>
    int convertToPixels(float,java.lang.String,boolean,float,net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.ComponentWrapper) -> convertToPixels
net.miginfocom.layout.UnitValue -> net.miginfocom.layout.UnitValue:
    java.util.HashMap UNIT_MAP -> UNIT_MAP
    java.util.ArrayList CONVERTERS -> CONVERTERS
    int STATIC -> STATIC
    int ADD -> ADD
    int SUB -> SUB
    int MUL -> MUL
    int DIV -> DIV
    int MIN -> MIN
    int MAX -> MAX
    int MID -> MID
    int PIXEL -> PIXEL
    int LPX -> LPX
    int LPY -> LPY
    int MM -> MM
    int CM -> CM
    int INCH -> INCH
    int PERCENT -> PERCENT
    int PT -> PT
    int SPX -> SPX
    int SPY -> SPY
    int ALIGN -> ALIGN
    int MIN_SIZE -> MIN_SIZE
    int PREF_SIZE -> PREF_SIZE
    int MAX_SIZE -> MAX_SIZE
    int BUTTON -> BUTTON
    int LINK_X -> LINK_X
    int LINK_Y -> LINK_Y
    int LINK_W -> LINK_W
    int LINK_H -> LINK_H
    int LINK_X2 -> LINK_X2
    int LINK_Y2 -> LINK_Y2
    int LINK_XPOS -> LINK_XPOS
    int LINK_YPOS -> LINK_YPOS
    int LOOKUP -> LOOKUP
    int LABEL_ALIGN -> LABEL_ALIGN
    int IDENTITY -> IDENTITY
    net.miginfocom.layout.UnitValue ZERO -> ZERO
    net.miginfocom.layout.UnitValue TOP -> TOP
    net.miginfocom.layout.UnitValue LEADING -> LEADING
    net.miginfocom.layout.UnitValue LEFT -> LEFT
    net.miginfocom.layout.UnitValue CENTER -> CENTER
    net.miginfocom.layout.UnitValue TRAILING -> TRAILING
    net.miginfocom.layout.UnitValue RIGHT -> RIGHT
    net.miginfocom.layout.UnitValue BOTTOM -> BOTTOM
    net.miginfocom.layout.UnitValue LABEL -> LABEL
    net.miginfocom.layout.UnitValue INF -> INF
    net.miginfocom.layout.UnitValue BASELINE_IDENTITY -> BASELINE_IDENTITY
    float value -> value
    int unit -> unit
    int oper -> oper
    java.lang.String unitStr -> unitStr
    java.lang.String linkId -> linkId
    boolean isHor -> isHor
    net.miginfocom.layout.UnitValue[] subUnits -> subUnits
    float[] SCALE -> SCALE
    long serialVersionUID -> serialVersionUID
    void <init>(float) -> <init>
    void <init>(float,int,java.lang.String) -> <init>
    void <init>(float,java.lang.String,boolean,int,java.lang.String) -> <init>
    void <init>(boolean,int,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,java.lang.String) -> <init>
    void <init>(float,java.lang.String,int,boolean,int,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,java.lang.String) -> <init>
    int getPixels(float,net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.ComponentWrapper) -> getPixels
    float getPixelsExact(float,net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.ComponentWrapper) -> getPixelsExact
    float lookup(float,net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.ComponentWrapper) -> lookup
    int parseUnitString() -> parseUnitString
    boolean isAbsolute() -> isAbsolute
    boolean isAbsoluteDeep() -> isAbsoluteDeep
    boolean isLinked() -> isLinked
    boolean isLinkedDeep() -> isLinkedDeep
    java.lang.String getLinkTargetId() -> getLinkTargetId
    net.miginfocom.layout.UnitValue getSubUnitValue(int) -> getSubUnitValue
    int getSubUnitCount() -> getSubUnitCount
    net.miginfocom.layout.UnitValue[] getSubUnits() -> getSubUnits
    int getUnit() -> getUnit
    java.lang.String getUnitString() -> getUnitString
    int getOperation() -> getOperation
    float getValue() -> getValue
    boolean isHorizontal() -> isHorizontal
    java.lang.String toString() -> toString
    java.lang.String getConstraintString() -> getConstraintString
    int hashCode() -> hashCode
    void addGlobalUnitConverter(net.miginfocom.layout.UnitConverter) -> addGlobalUnitConverter
    boolean removeGlobalUnitConverter(net.miginfocom.layout.UnitConverter) -> removeGlobalUnitConverter
    net.miginfocom.layout.UnitConverter[] getGlobalUnitConverters() -> getGlobalUnitConverters
    int getDefaultUnit() -> getDefaultUnit
    void setDefaultUnit(int) -> setDefaultUnit
    java.lang.Object readResolve() -> readResolve
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    void <clinit>() -> <clinit>
net.miginfocom.layout.UnitValue$1 -> net.miginfocom.layout.UnitValue$1:
    void <init>() -> <init>
    java.beans.Expression instantiate(java.lang.Object,java.beans.Encoder) -> instantiate
net.miginfocom.swing.MigLayout -> net.miginfocom.swing.MigLayout:
    java.util.Map scrConstrMap -> scrConstrMap
    java.lang.Object layoutConstraints -> layoutConstraints
    java.lang.Object colConstraints -> colConstraints
    java.lang.Object rowConstraints -> rowConstraints
    net.miginfocom.layout.ContainerWrapper cacheParentW -> cacheParentW
    java.util.Map ccMap -> ccMap
    javax.swing.Timer debugTimer -> debugTimer
    net.miginfocom.layout.LC lc -> lc
    net.miginfocom.layout.AC colSpecs -> colSpecs
    net.miginfocom.layout.AC rowSpecs -> rowSpecs
    net.miginfocom.layout.Grid grid -> grid
    int lastModCount -> lastModCount
    int lastHash -> lastHash
    java.awt.Dimension lastInvalidSize -> lastInvalidSize
    boolean lastWasInvalid -> lastWasInvalid
    java.awt.Dimension lastParentSize -> lastParentSize
    java.util.ArrayList callbackList -> callbackList
    boolean dirty -> dirty
    long lastSize -> lastSize
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    void <init>(net.miginfocom.layout.LC) -> <init>
    void <init>(net.miginfocom.layout.LC,net.miginfocom.layout.AC) -> <init>
    void <init>(net.miginfocom.layout.LC,net.miginfocom.layout.AC,net.miginfocom.layout.AC) -> <init>
    java.lang.Object getLayoutConstraints() -> getLayoutConstraints
    void setLayoutConstraints(java.lang.Object) -> setLayoutConstraints
    java.lang.Object getColumnConstraints() -> getColumnConstraints
    void setColumnConstraints(java.lang.Object) -> setColumnConstraints
    java.lang.Object getRowConstraints() -> getRowConstraints
    void setRowConstraints(java.lang.Object) -> setRowConstraints
    java.util.Map getConstraintMap() -> getConstraintMap
    void setConstraintMap(java.util.Map) -> setConstraintMap
    java.lang.Object getComponentConstraints(java.awt.Component) -> getComponentConstraints
    void setComponentConstraints(java.awt.Component,java.lang.Object) -> setComponentConstraints
    void setComponentConstraintsImpl(java.awt.Component,java.lang.Object,boolean) -> setComponentConstraintsImpl
    boolean isManagingComponent(java.awt.Component) -> isManagingComponent
    void addLayoutCallback(net.miginfocom.layout.LayoutCallback) -> addLayoutCallback
    void removeLayoutCallback(net.miginfocom.layout.LayoutCallback) -> removeLayoutCallback
    void setDebug(net.miginfocom.layout.ComponentWrapper,boolean) -> setDebug
    boolean getDebug() -> getDebug
    int getDebugMillis() -> getDebugMillis
    void checkCache(java.awt.Container) -> checkCache
    void cleanConstraintMaps(java.awt.Container) -> cleanConstraintMaps
    void resetLastInvalidOnParent(java.awt.Container) -> resetLastInvalidOnParent
    net.miginfocom.layout.ContainerWrapper checkParent(java.awt.Container) -> checkParent
    void layoutContainer(java.awt.Container) -> layoutContainer
    void adjustWindowSize(net.miginfocom.layout.ContainerWrapper) -> adjustWindowSize
    java.awt.Container getPackable(java.awt.Component) -> getPackable
    java.lang.Object findType(java.lang.Class,java.awt.Component) -> findType
    int constrain(net.miginfocom.layout.ContainerWrapper,int,int,net.miginfocom.layout.BoundSize) -> constrain
    java.awt.Dimension minimumLayoutSize(java.awt.Container) -> minimumLayoutSize
    java.awt.Dimension preferredLayoutSize(java.awt.Container) -> preferredLayoutSize
    java.awt.Dimension maximumLayoutSize(java.awt.Container) -> maximumLayoutSize
    java.awt.Dimension getSizeImpl(java.awt.Container,int) -> getSizeImpl
    float getLayoutAlignmentX(java.awt.Container) -> getLayoutAlignmentX
    float getLayoutAlignmentY(java.awt.Container) -> getLayoutAlignmentY
    void addLayoutComponent(java.lang.String,java.awt.Component) -> addLayoutComponent
    void addLayoutComponent(java.awt.Component,java.lang.Object) -> addLayoutComponent
    void removeLayoutComponent(java.awt.Component) -> removeLayoutComponent
    void invalidateLayout(java.awt.Container) -> invalidateLayout
    java.lang.Object readResolve() -> readResolve
    void readExternal(java.io.ObjectInput) -> readExternal
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void access$100(net.miginfocom.swing.MigLayout,net.miginfocom.layout.ContainerWrapper) -> access$100
    net.miginfocom.layout.Grid access$200(net.miginfocom.swing.MigLayout) -> access$200
    javax.swing.Timer access$300(net.miginfocom.swing.MigLayout) -> access$300
    javax.swing.Timer access$302(net.miginfocom.swing.MigLayout,javax.swing.Timer) -> access$302
net.miginfocom.swing.MigLayout$1 -> net.miginfocom.swing.MigLayout$1:
    java.awt.Component val$parent -> val$parent
    net.miginfocom.swing.MigLayout this$0 -> this$0
    void <init>(net.miginfocom.swing.MigLayout,java.awt.Component) -> <init>
    void run() -> run
net.miginfocom.swing.MigLayout$2 -> net.miginfocom.swing.MigLayout$2:
    net.miginfocom.layout.ContainerWrapper val$containerWrapper -> val$containerWrapper
    net.miginfocom.swing.MigLayout this$0 -> this$0
    void <init>(net.miginfocom.swing.MigLayout,net.miginfocom.layout.ContainerWrapper) -> <init>
    void run() -> run
net.miginfocom.swing.MigLayout$MyDebugRepaintListener -> net.miginfocom.swing.MigLayout$MyDebugRepaintListener:
    net.miginfocom.swing.MigLayout this$0 -> this$0
    void <init>(net.miginfocom.swing.MigLayout) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void <init>(net.miginfocom.swing.MigLayout,net.miginfocom.swing.MigLayout$1) -> <init>
net.miginfocom.swing.SwingComponentWrapper -> net.miginfocom.swing.SwingComponentWrapper:
    boolean maxSet -> maxSet
    boolean vp -> vp
    java.awt.Color DB_COMP_OUTLINE -> DB_COMP_OUTLINE
    java.lang.String VISUAL_PADDING_PROPERTY -> VISUAL_PADDING_PROPERTY
    java.awt.Component c -> c
    int compType -> compType
    java.lang.Boolean bl -> bl
    boolean prefCalled -> prefCalled
    java.util.IdentityHashMap FM_MAP -> FM_MAP
    java.awt.Font SUBST_FONT -> SUBST_FONT
    boolean isJava9orLater -> isJava9orLater
    void <init>(java.awt.Component) -> <init>
    int getBaseline(int,int) -> getBaseline
    java.lang.Object getComponent() -> getComponent
    float getPixelUnitFactor(boolean) -> getPixelUnitFactor
    int getX() -> getX
    int getY() -> getY
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    int getScreenLocationX() -> getScreenLocationX
    int getScreenLocationY() -> getScreenLocationY
    int getMinimumHeight(int) -> getMinimumHeight
    int getMinimumWidth(int) -> getMinimumWidth
    int getPreferredHeight(int) -> getPreferredHeight
    int getPreferredWidth(int) -> getPreferredWidth
    int getMaximumHeight(int) -> getMaximumHeight
    int getMaximumWidth(int) -> getMaximumWidth
    boolean isMaxSet(java.awt.Component) -> isMaxSet
    net.miginfocom.layout.ContainerWrapper getParent() -> getParent
    int getHorizontalScreenDPI() -> getHorizontalScreenDPI
    int getVerticalScreenDPI() -> getVerticalScreenDPI
    int getScreenWidth() -> getScreenWidth
    int getScreenHeight() -> getScreenHeight
    boolean hasBaseline() -> hasBaseline
    java.lang.String getLinkId() -> getLinkId
    void setBounds(int,int,int,int) -> setBounds
    boolean isVisible() -> isVisible
    int[] getVisualPadding() -> getVisualPadding
    boolean isMaxSizeSetOn1_4() -> isMaxSizeSetOn1_4
    void setMaxSizeSetOn1_4(boolean) -> setMaxSizeSetOn1_4
    boolean isVisualPaddingEnabled() -> isVisualPaddingEnabled
    void setVisualPaddingEnabled(boolean) -> setVisualPaddingEnabled
    void paintDebugOutline(boolean) -> paintDebugOutline
    int getComponentType(boolean) -> getComponentType
    int getLayoutHashCode() -> getLayoutHashCode
    int checkType(boolean) -> checkType
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int getContentBias() -> getContentBias
    void <clinit>() -> <clinit>
net.miginfocom.swing.SwingContainerWrapper -> net.miginfocom.swing.SwingContainerWrapper:
    java.awt.Color DB_CELL_OUTLINE -> DB_CELL_OUTLINE
    void <init>(java.awt.Container) -> <init>
    net.miginfocom.layout.ComponentWrapper[] getComponents() -> getComponents
    int getComponentCount() -> getComponentCount
    java.lang.Object getLayout() -> getLayout
    boolean isLeftToRight() -> isLeftToRight
    void paintDebugCell(int,int,int,int) -> paintDebugCell
    int getComponentType(boolean) -> getComponentType
    int getLayoutHashCode() -> getLayoutHashCode
    void <clinit>() -> <clinit>
