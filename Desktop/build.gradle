plugins {
    id 'java'
}

version 'unspecified'

repositories {
    mavenCentral()
}
//Desktop jar with installer and separated library
jar {
    dependsOn ":gay"
    archiveFileName = "Ozone.jar"
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes 'Main-Class': 'Premain.InstallerEntryPoint'
    }
}
repositories {
    mavenCentral()
    maven { url 'https://www.jitpack.io' }
    flatDir {
        dirs 'libs'
    }
    flatDir {
        dirs 'lib'
    }
}
dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation rootProject
    //compileOnly files("${project.rootDir}/libs/Atomic.jar")
    //compileOnly files("${project.rootDir}/libs/Mindustry.jar")
    compileOnly "com.github.o7-Fire.Atomic-Library:Desktop:$atomHash"
    compileOnly "com.github.Anuken.Mindustry:desktop:$mindustryVersion"
    implementation 'io.sentry:sentry:3.1.0'
    compileOnly files("${project.rootDir}/lib/flatlaf-0.42.jar")
    compileOnly files("${project.rootDir}/lib/miglayout-core.jar")
    compileOnly files("${project.rootDir}/lib/miglayout-swing.jar")

}

tasks.withType(JavaCompile) {
    sourceCompatibility = 14
    targetCompatibility = 14
    options.encoding = "UTF-8"
    options.compilerArgs += ["-Xlint:deprecation"]
}
//Obfuscated Desktop jar
task proguard(dependsOn: jar, type: proguard.gradle.ProGuardTask) {
    printmapping "Ozone-Mapping-Desktop.map"
    keep 'class !Ozone.** { *; }'
    // Automatically handle the Java version of this build.
    if (System.getProperty('java.version').startsWith('1.')) {
        // Before Java 9, the runtime classes were packaged in a single jar file.
        libraryjars "${System.getProperty('java.home')}/lib/rt.jar"
    } else {
        // As of Java 9, the runtime classes are packaged in modular jmod files.
        libraryjars "${System.getProperty('java.home')}/jmods/java.base.jmod", jarfilter: '!**.jar', filter: '!module-info.class'
        libraryjars "${System.getProperty('java.home')}/jmods/java.desktop.jmod", jarfilter: '!**.jar', filter: '!module-info.class'
        libraryjars "${System.getProperty('java.home')}/jmods/java.logging.jmod", jarfilter: '!**.jar', filter: '!module-info.class'
        libraryjars "${System.getProperty('java.home')}/jmods/java.compiler.jmod", jarfilter: '!**.jar', filter: '!module-info.class'
    }
    //if(System.getProperty("user.name") == "runner")
      //libraryjars gradle.gradleHomeDir, jarfilter: '!**.jar', filter: '!module-info.class'
    HashMap<String, String> s = new HashMap<>()
    for(String e : configurations.runtimeClasspath.asList()) {
        s.put(e,e)
    }
    for(String e : configurations.compileClasspath.asList()) {
        s.put(e,e)
    }
    for(Map.Entry<String,String> e : s.entrySet()){
        println e.key
        libraryjars e.key
    }
    //libraryjars "${project.rootDir}/libs/"
    //libraryjars "${project.rootDir}/lib/"

    repackageclasses 'Ozone'
    injars "$buildDir/libs/Ozone.jar"
    outjars "$buildDir/libs/Ozone-Desktop.jar"
}