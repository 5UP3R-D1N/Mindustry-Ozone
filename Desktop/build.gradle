plugins {
    id 'java'
}

version 'unspecified'

repositories {
    mavenCentral()
}
//Desktop jar with installer and separated library
jar {
    dependsOn ":jar"
    archiveFileName = "Ozone.jar"
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes 'Main-Class': 'Main.h'
    }
}
dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation rootProject
    compileOnly files("${project.rootDir}/libs/Atomic.jar")
    compileOnly files("${project.rootDir}/libs/Mindustry.jar")
    implementation files("${project.rootDir}/lib/flatlaf-0.42.jar")
    implementation files("${project.rootDir}/lib/miglayout-core.jar")
    implementation files("${project.rootDir}/lib/miglayout-swing.jar")
}

tasks.withType(JavaCompile) {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.encoding = "UTF-8"
    options.compilerArgs += ["-Xlint:deprecation"]
    if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
        options.compilerArgs.addAll(['--release', '8'])
    }
}
//Obfuscated Desktop jar
task proguard(dependsOn: jar, type: proguard.gradle.ProGuardTask) {
    printmapping "Ozone-Mapping-Desktop.map"
    keep 'class !Ozone.** { *; }'
    // Automatically handle the Java version of this build.
    if (System.getProperty('java.version').startsWith('1.')) {
        // Before Java 9, the runtime classes were packaged in a single jar file.
        libraryjars "${System.getProperty('java.home')}/lib/rt.jar"
    } else {
        // As of Java 9, the runtime classes are packaged in modular jmod files.
        libraryjars "${System.getProperty('java.home')}/jmods/java.base.jmod", jarfilter: '!**.jar', filter: '!module-info.class'
        libraryjars "${System.getProperty('java.home')}/jmods/java.desktop.jmod", jarfilter: '!**.jar', filter: '!module-info.class'
        libraryjars "${System.getProperty('java.home')}/jmods/java.logging.jmod", jarfilter: '!**.jar', filter: '!module-info.class'
    }
    libraryjars "${project.rootDir}/libs/"
    libraryjars "${project.rootDir}/lib/"
    injars "$buildDir/libs/Ozone.jar"
    outjars "$buildDir/libs/Ozone-Desktop.jar"
}