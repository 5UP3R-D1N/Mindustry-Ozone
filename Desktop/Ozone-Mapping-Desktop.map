Main.Ozone -> Main.Ozone:
    java.io.File ozone -> ozone
         java.io.File parentFile -> parentFile
                java.io.File library -> library
                        java.io.File atom -> atom
                                     boolean libraryURLLoaded -> libraryURLLoaded
                                     boolean libraryExists -> libraryExists
                                             java.net.URLClassLoader classloader -> classloader
                                                                                 mindustry.mod.Mod mainMod -> mainMod
                                                                                                            java.lang.
                                                                                                            String type
                                                                                                            -> type
                                                                                                               java.lang
                                                                                                               .String
                                                                                                               desktopAtomicURL
                                                                                                               ->
                                                                                                               desktopAtomicURL
    java.io.File desktopAtomic -> desktopAtomic
    void <init>() -> <init>
         void init() -> init
         void loadContent() -> loadContent
                          void lambda$new$ 0(mindustry.game.EventType$ClientLoadEvent) -> lambda$new$ 0
                                            void <clinit>() -> <clinit>
                                                  Main.h -> Main.h:
                                                      java.io.File mindustry -> mindustry
                                                           Ozone.Desktop.Swing.Main m -> m
                                                                        void <init>() -> <init>
                                                                              void main(java.lang.String[]) -> main
                                                                                   MainBackup.OzoneBackup ->
    MainBackup.OzoneBackup:
    void <init>() -> <init>
                  void init() -> init
                               void loadContent() -> loadContent
                               Ozone.Commands.BotInterface -> Ozone.a:
    arc.struct.Queue taskQueue -> a
    boolean init -> b
            void init() -> a
                           void update() -> e
                           void addTask(Ozone.Commands.Task.Task,java.util.function.Consumer) -> a
                                       void setMov(arc.math.geom.Position) -> a
    java.util.ArrayList getNearby(mindustry.world.Tile,int,int) -> a
    arc.math.geom.Vec2 getCurrentPos() -> b
                                       arc.math.geom.Vec2 getCurrentTilePos() -> c
                                                          boolean samePos
                                                          (arc.math.geom.Position,arc.math.geom.Position,boolean) -> a
                                                                                                                   void
                                                                                                                   reset
                                                                                                                   () ->
                                                                                                                   d
                                                                                                                   void
                                       <clinit>() -> <clinit>
                                       Ozone.Commands.Commands -> Ozone.b:
                                                                         java.util.HashMap commandsList -> a
                                       boolean init -> c
                                       boolean falseVote -> d
                                       arc.struct.Queue commandsQueue -> b
                                       void init() -> a
                                            void register(java.lang.String,Ozone.Commands.Commands$Command) -> a
                                                                                                             void
                                                                                                             register
                                                                                                             (java.lang.String,Ozone.Commands.Commands$Command,java.lang.String)
                                                                                                             -> a
                                                                                                             void
                                                                                                             shuffleSorter
    (java.util.ArrayList) -> a
    void taskClear(java.util.ArrayList) -> b
    void sendColorize(java.util.ArrayList) -> c
    void taskDeconstruct(java.util.ArrayList) -> d
                                               void forceExit(java.util.ArrayList) -> e
                                               void infoUnit(java.util.ArrayList) -> f
                                                            boolean call(java.lang.String) -> a
    void randomKick(java.util.ArrayList) -> g
    void infoPathfinding(java.util.ArrayList) -> h
                                               void infoPos(java.util.ArrayList) -> i
                                               void help(java.util.ArrayList) -> j
                                                        void taskMove(java.util.ArrayList) -> k
    void chaosKick(java.util.ArrayList) -> l
    void tellUser(java.lang.String) -> b
                                     void lambda$chaosKick$ 5() -> b
                                                                void lambda$taskMove$ 4(long,java.lang.Object) -> a
                                                                                                               float
                                                                                                               lambda$
                                                                                                               infoPathfinding
                                                                                                               $ 3
                                                                                                               (mindustry.world.Tile)
                                                                                                               -> a
                                                                                                               void
                                                                                                               lambda$
                                                                                                               taskDeconstruct
                                                                                                               $ 2
                                                                                                               (long,java.lang.Object)
                                                                                                               -> b
                                                                                                               void
                                                                                                               lambda$
                                                                                                               init$ 1(
                                                                                                               ) -> c
                                                                                                               void
                                                                                                               lambda$
                                                                                                               init$ 0
                                                                                                               () -> d
                                                                                                               void <
                                                                                                               clinit>(
                                                                                                               ) -> <
                                                                                                               clinit>
                                                                                                               Ozone.
                                                                                                               Commands.
                                                                                                               Commands$
                                                                                                               Command -
                                                                                                               > Ozone.c
                                                                                                               :
                                                                                                               java
                                                                                                               .util.
                                                                                                               function.
                                                                                                               Consumer
                                                                                                               method ->
                                                                                                               a
                                                                                                               java.lang
                                                                                                               .String
                                                                                                               description
                                                                                                               -> b
                                                                                                               arc
                                                                                                               .scene.
                                                                                                               style.
                                                                                                               TextureRegionDrawable
                                                                                                               icon -> c
    void <init>(java.util.function.Consumer) -> <init>
    void <init>(java.util.function.Consumer,arc.scene.style.TextureRegionDrawable) -> <init>
    boolean passable(mindustry.world.Tile) -> a
    float isSafe(mindustry.world.Tile) -> b
                                        double distanceTo(arc.math.geom.Position,arc.math.geom.Position) -> a
                                        Ozone.Commands.Task.CommandsSpam -> Ozone.d:
                                                                                   int howManyTimes -> a
                                                                                   int currentCycle -> b
                                                                                                       java.lang.String
                                                                                                       commands -> c
    void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    boolean isCompleted() -> a
    void update() -> b
                Ozone.Commands.Task.DestructBlock -> Ozone.e:
                                    boolean half -> a
                                                  int x -> b
                                                  int y -> c
                                                         void <init>(int,int,boolean) -> <init>
                                                                                          boolean isCompleted() -> a
                                                                                          void update() -> b
                                                                                               boolean lambda$update
                                    $ 0(mindustry.entities.units.BuildPlan) -> a
                                    Ozone.Commands.Task.Move -> Ozone.f:
                                                   arc.math.geom.Vec2 destPos -> a
                                    arc.math.geom.Vec2 destTilePos -> b
                                                                      mindustry.world.Tile destTile -> c
    arc.struct.Seq pathfindingCache -> d
    boolean alreadyOverlay -> e
            void <init>(float,float) -> <init>
                                      void <init>(arc.math.geom.Vec2) -> <init>
                                                                       void taskCompleted() -> c
                                                                                               boolean isCompleted() ->
                                                                                               a
                                                                                               void update() -> b
                                                                                                          Ozone.Commands
                                                                                                          .Task
    .Task -> Ozone.g:
    java.util.ArrayList onTaskCompleted -> a
         int tick -> b
                   int currentTick -> c
                   void <init>() -> <init>
                             void onTaskCompleted(java.util.function.Consumer) -> a
                                                 void taskCompleted() -> c
                                                                         void setTick(int) -> a
                                                                         boolean tick() -> d
                                                                                      boolean isCompleted() -> a
                                                                                                               void
                                                                                                               update()
                                                                                                               -> b
                                                                                                               Ozone.
                                                 Desktop.Patch.Commands -> Ozone.h:
                                                                                  java.util.LinkedHashMap libs -> a
                                                 boolean init -> b
                                                 void Init() -> a
                                                              void infoPos(java.util.ArrayList) -> a
                                                              void debug(java.util.ArrayList) -> b
                                                                        void library(java.util.ArrayList) -> c
                                                 void downloadLib(Atom.Manifest$Library) -> a
                                                 void javac(java.util.ArrayList) -> d
                                                                                  void availableLib() -> b
                                                                                  voidlambda$availableLib$ 7
                                                                                      (java.lang.Integer,Atom.Manifest$Library)
                                                                                      -> a
                                                                                      void
                                                                                  lambda$javac$ 6(java.lang.String) -> a
                                                                                  void
                                                                                  lambda$javac$ 5(java.lang.String) -> b
                                                                                  booleanlambda$javac$ 4
                                                                                         (java.lang.String,Atom.Manifest$Library)
                                                                                         -> a
                                                                                         booleanlambda$javac$ 3
                                                                                                (java.lang.String,Atom.Manifest$Library)
                                                                                                -> b
                                                                                                void
                                                                                  lambda$downloadLib$ 2
                                                                                  (Atom.Manifest$Library) -> b
                                                                                  voidlambda$library$ 1
                                                                                      (Atom.Manifest$Library) -> c
                                                                                      voidlambda$Init$ 0
                                                                                          (int[],Atom.Manifest$Library)
                                                                                          -> a
                                                                                          void <clinit>() -> <clinit>
                                                                                  Ozone.Desktop.Patch.DesktopPatcher ->
                                                                                  Ozone.i:
                                                                                       void register() -> a
                                                                                  void lambda$register$ 4
                                                                                  (mindustry.game.EventType$ClientLoadEvent)
                                                                                  -> a
                                                                                  void lambda$register$ 3() -> b
                                                                                                               void
                                                                                                               lambda$
                                                                                                               register$
                                                                                                               2() -> c
                                                                                                                    void
                                                                                                                    lambda
                                                                                                                    $
                                                                                                                    register
                                                                                                                    $ 1
                                                                                                                    (java.lang.StringBuilder,Atom.Manifest$Library)
                                                                                                                    -> a
                                                                                                                     boolean
                                                                                                                     lambda
                                                                                                                     $
                                                                                                                     register
                                                                                                                     $ 0
                                                                                                                     (Atom.Manifest$Library)
                                                                                                                     -
                                                                                  > a
                                                                                  Ozone.Desktop.Patch.Translation -
                                                                                  > Ozone.j:
                                                                                  boolean init -> a
                                                                                  void Init() -> a
                                                                                  void <clinit>() -> <clinit>
                                                                                              Ozone.
                                                                                              Desktop.Pre.DownloadSwing-
                                                                                              > Ozone.k:
                                                                                                       java.net.URL url
                                                                                                       -> c
                                                                                              java.util.concurrent.
                                                                                              atomic.AtomicInteger
                                                                                              downloaded -> d
                                                                                                         int size -> e
                                                                                                         int status -> f
                                                                                                                    java
                                                                                                                    .io.
                                                                                                                    File
                                                                                                                    file
                                                                                                                    -> g
                                                                                                                     Ozone
                                                                                                                     .
                                                                                                                     Desktop
                                                                                                                     .
                                                                                                                     Swing
                                                                                                                     .
                                                                                                                     SPreLoad
                                                                                                                     swing
                                                                                              -> h
                                                                                              javax.swing.JProgressBar
                                                                                              progressBar -> a
                                                                                                           javax.swing.
                                                                                                           JLabel label
                                                                                                           -> i
                                                                                                              javax.
                                                                                                              swing.
                                                                                                              JFrame
                                                                                                              frame -> b
                                                                                  long lastRecordTime -> j
                                                                                  long lastRecord -> k
                                                                                  boolean displayed -> l
                                                                                  void <init>(java.net.URL,java.io.File)
                                                                                  -> <init>
                                                                                  void display(javax.swing.JLabel) -> a
                                                                                                                      void
                                                                                                                      display
                                                                                                                      ()
                                                                                                                      ->
                                                                                                                      a
                                                                                                                      void
                                                                                                                      run
                                                                                  () -> run
                                                                                  Ozone.Desktop.Pre
                                                                                  .PreInstall -> Ozone.l:
                                                                                  void <init>() -> <init>
                                                                                        void
                                                                                  install(Ozone.Desktop.Swing.Main) -> a
                                                                                  void lambda$install$3
                                                                                                      (Ozone.Desktop.Swing.Main,java.awt.event.ActionEvent)
                                                                                                      -> a
                                                                                                      void lambda$
                                                                                                      install$2
                                                                                                              (java.io.File,Ozone.Desktop.Swing.Main)
                                                                                                              -> a
                                                                                                              void
                                                                                                              lambda$
                                                                                                              install$
                                                                                  1(java.awt.event.ActionEvent) -> a
                                                                                  void lambda$install$0
                                                                                                      (Ozone.Desktop.Swing.Main,java.awt.event.ActionEvent)
                                                                                                      -> b
                                                                                                      Ozone.Desktop.Pre
                                                                                  .Preload -> Ozone.m:
                                                                                  boolean init -> a
                                                                                               boolean checkAtomic
                                                                                               (java.lang.String,java.io.File)
                                                                                               -> a
                                                                                               voidincites
                                                                                                   (java.io.File,java.lang.String,java.lang.Object)
                                                                                                   -> a
                                                                                                   void <clinit>(
                                                                                  ) -> <clinit>
                                                                                  Ozone.Desktop.Swing.Main -> Ozone.n:
                                                                                                javax
                                                                                  .swing.JDialog dialog1 -> a
                                                                                  javax.
                                                                                  swing.JFileChooser fileChooser1 -> b
                                                                                  javax.swing.JFrame frame1 -> c
                                                                                             javax.swing.
                                                                                  JLabel label1 -> j
                                                                                  javax.swing.JLabel label4 -> d
                                                                                                     javax.swing.JButton
                                                                                                     button3 -> e
                                                                                                             javax.swing
                                                                                                             .JLabel
                                                                                                             labelStatus
                                                                                                             -> f
                                                                                                              javax.
                                                                                                              swing.
                                                                                                              JProgressBar
                                                                                                              progressBar1
                                                                                                              -> g
                                                                                                                 javax.
                                                                                                                 swing.
                                                                                                                 JButton
                                                                                                                 buttonInstall
                                                                                                                 -> h
                                                                                  javax.swing.JButton buttonExit -> i
                                                                                  void <init>() -> <init>
                                                                                  void setTheme() -> a
                                                                                  Ozone.Desktop
                                                                                  .Swing.SPreLoad -> Ozone.o:
                                                                                  java.awt.Frame frame1 -> a
                                                                                  javax.swing.JLabel label1 -> b
                                                                                       javax.swing.JLabel label2 -> c
                                                                                             javax.swing
                                                                                       .JProgressBar progressBar1 -> d
                                                                                       void <init>() -> <init>
                                                                                                  Ozone.Event
                                                                                       .Internal -> Ozone.p:
                                                                                       Ozone.
                                                                                       Event.Internal$Init -> Ozone.q:
                                                                                                                     Ozone
                                                                                                                     .
                                                                                                                     Event
                                                                                                                     .
                                                                                                                     Internal
                                                                                                                     $
                                                                                                                     Init
                                                                                                                     CommandsRegister
                                                                                                                     -
                                                                                       > a
                                                                                       Ozone.Event.Internal$Init
                                                                                       TranslationRegister -> b
                                                                                                           Ozone.Event.
                                                                                                           Internal$Init
                                                                                       PatchRegister -> c
                                                                                       Ozone.Event.Internal$
                                                                                  Init SettingsRegister -> d
                                                                                  void <init>(java.lang.String,int)
                                                                                  -> <init>
                                                                                  void <clinit>() -> <clinit>
                                                                                                Ozone.Interface -
                                                                                  > Ozone.r:
                                                                                  arc.struct.ObjectMap bundle -> a
                                                                                                       arc.struct.
                                                                                                       ObjectMap
                                                                                                       keybindings -> b
                                                                                                                   void
                                                                                                                   registerKeybinding
                                                                                                                   (Ozone.Patch.ImprovisedKeybinding,java.lang.Runnable)
                                                                                                                   -> a
                                                                                                                   void
                                                                                  registerWords
                                                                                  (java.lang.String,java.lang.String) ->
                                                                                  a
                                                                                  void registerWords(java.lang.String) -
                                                                                  > a
                                                                                    void restart() -> a
                                                                                    void <clinit>() -> <clinit>
                                                                                          Ozone.Main -> Ozone.s:
                                                                                               void init() -> a
                                                                                                        void
                                                                                                        patchTranslation
                                                                                                        () -> b
                                                                                                            java.lang.
                                                                                                            String
                                                                                                            getRandomHexColor
                                                                                                            () -> c
                                                                                                               void
                                                                                                               lambda$
                                                                                                               setOzoneLogger
                                                                                                               $ 19
                                                                                                               (java.lang.String[],java.lang.String[],arc.util.Log$LogLevel,java.lang.String)
                                                                                                        -> a
                                                                                                        void lambda$
                                                                                                        initEvent$ 18
                                                                                                        (mindustry.game.EventType$ConfigEvent)
                                                                                                        -> a
                                                                                                        void lambda$
                                                                                                        initEvent$ 17
                                                                                                        (mindustry.game.EventType$PlayerLeave)
                                                                                                        -> a
                                                                                                        void lambda$
                                                                                                        initEvent$ 16
                                                                                                        (mindustry.game.EventType$BlockBuildBeginEvent)
                                                                                                        -> a
                                                                                                        void lambda$
                                                                                                        initEvent$ 15
                                                                                                        (mindustry.game.EventType$BlockDestroyEvent)
                                                                                                        -> a
                                                                                                        void lambda$
                                                                                                        initEvent$ 14
                                                                                                        (mindustry.game.EventType$PlayerJoin)
                                                                                                        -> a
                                                                                                        void lambda$
                                                                                                        initEvent$ 13
                                                                                                        (mindustry.game.EventType$BlockBuildEndEvent)
                                                                                                        -> a
                                                                                                        void lambda$
                                                                                                        initEvent$ 12
                                                                                                        (mindustry.game.EventType$UnitDrownEvent)
                                                                                  -> a
                                                                                  void lambda$initEvent$ 11
                                                                                  (mindustry.game.EventType$UnitDestroyEvent)
                                                                                  -> a
                                                                                  void lambda$initEvent$ 10
                                                                                  (mindustry.game.EventType$UnitChangeEvent)
                                                                                  -> a
                                                                                  void lambda$initEvent$ 9
                                                                                  (mindustry.game.EventType$UnitCreateEvent)
                                                                                  -> a
                                                                                  void lambda$initEvent$ 8
                                                                                  (mindustry.game.EventType$StateChangeEvent)
                                                                                  -> a
                                                                                  void lambda$initEvent$ 7
                                                                                  (mindustry.game.EventType$WithdrawEvent)
                                                                                  -> a
                                                                                  void lambda$initEvent$ 6
                                                                                  (mindustry.game.EventType$DepositEvent)
                                                                                  -> a
                                                                                  void lambda$initEvent$ 5
                                                                                  (mindustry.game.EventType$CommandIssueEvent)
                                                                                  -> a
                                                                                  void lambda$initEvent$ 4
                                                                                  (mindustry.game.EventType$ClientPreConnectEvent)
                                                                                  -> a
                                                                                  void lambda$initEvent$ 3
                                                                                  (mindustry.game.EventType$ClientLoadEvent)
                                                                                  -> a
                                                                                  void lambda$initEvent$ 2() -> d
                                                                                                           void lambda$
                                                                                                           initEvent$ 1
                                                                                                           () -> e
                                                                                                           void lambda$
                                                                                                           initEvent$
                                                                                                           0() -> f
                                                                                                           Ozone.Main$
                                                                                                           1 -> Ozone.t:
                                                                                                           void <init
                                                                                                           >() -> <init>
                                                                                                           Ozone.
                                                                                                           Manifest ->
                                                                                                           Ozone.u:
                                                                                                           java.lang
                                                                                                           .String
                                                                                                           atomType -> e
                                                                                                           java.lang.
                                                                                                           String
                                                                                                           atomDownloadLink
                                                                                                           -> a
                                                                                                           Ozone.UI.
                                                                                                           OzoneMenu
                                                                                                           menu -> b
                                                                                                           Ozone.UI.
                                                                                                           CommandsListFrag
                                                                                                           commFrag -> c
                                                                                                                    java
                                                                                                                    .
                                                                                                                    util
                                                                                                                    .
                                                                                                                    ArrayList
                                                                                                                    settings
                                                                                                                    -> d
                                                                                                                     java
                                                                                                                     .
                                                                                                                     lang
                                                                                                                     .
                                                                                                                     String
                                                                                                                     lastServer
                                                                                                                     ->
                                                                                                                     f
                                                                                                                     java
                                                                                                                     .
                                                                                                                     lang
                                                                                                                     .
                                                                                                                     String
                                                                                                                     getCurrentServerIP
                                                                                                                     ()
                                                                                                                     -
                                                                                                                     > a
                                                                                                                     java
                                                                                                                     .
                                                                                                                     util
                                                                                                                     .
                                                                                                                     ArrayList
                                                                                                                     getSettings
                                                                                                                     ()
                                                                                                                     ->b
                                                                                                                     void
                                                                                                                     <
                                                                                                                     clinit
                                                                                                                     >()
                                                                                                                     -
                                                                                                                     > <
                                                                                                                     clinit
                                                                                                                     >
                                                                                                                     Ozone
                                                                                                                     .
                                                                                                                     Patch
                                                                                                                     .
                                                                                                                     ChatFragment
                                                                                                                     ->
                                                                                                                      Ozone
                                                                                                                      .v
                                                                                                                      :
                                                                                                                      arc
                                                                                                                      .
                                                                                                                      struct
                                                                                                                      .
                                                                                                                      Seq
                                                                                                                     messages
                                                                                                                     ->
                                                                                                                     a
                                                                                                                     float
                                                                                                                     fadetime
                                                                                                                     ->
                                                                                                                     b
                                                                                                                     boolean
                                                                                                                     shown
                                                                                                                     ->
                                                                                                                     c
                                                                                                                     arc
                                                                                                                     .
                                                                                                                     scene
                                                                                                                     .ui
                                                                                                                     .
                                                                                                                     TextField
                                                                                                                     chatfield
                                                                                                                     ->
                                                                                                                     d
                                                                                                                     arc
                                                                                                                     .
                                                                                                                     scene
                                                                                                                     .ui
                                                                                                                     .
                                                                                                                     Label
                                                                                                                     fieldlabel
                                                                                                                     ->
                                                                                                                     e
                                                                                                                     arc
                                                                                                                     .
                                                                                                                     graphics
                                                                                                                     .
                                                                                                           g2d.Font font
                                                                                                           -> f
                                                                                                           arc.graphics
                                                                                                           .g2d.
                                                                                                           GlyphLayout
                                                                                                           layout -> g
                                                                                                           float offsetx
                                                                                                           -> h
                                                                                                           float offsety
                                                                                                           -> i
                                                                                                           float
                                                                                                           fontoffsetx
                                                                                                           -> j
    float chatspace -> k
    arc.graphics.Color shadowColor -> l
    float textspacing -> m
    arc.struct.Seq history -> n
    int historyPos -> o
    int scrollPos -> p
    mindustry.ui.fragments.Fragment container -> q
    java.util.HashMap antiSpam -> r
    void <init>() -> <init>
    mindustry.ui.fragments.Fragment container() -> container
    void clearMessages() -> clearMessages
    void draw() -> draw
                          void sendMessage() -> a
                               void toggle() -> toggle
                                             void hide() -> hide
                      void updateChat() -> updateChat
                      void clearChatInput() -> clearChatInput
                                          boolean shown() -> shown
                                                             void addMessage(java.lang.String,java.lang.String) ->
                                                             addMessage
                                                             void lambda$toggle$ 2(java.lang.String) -> a
                                                                         void lambda$new$ 1() -> b
                                                                                     boolean lambda$new$ 0() -> c
                                                                                                   Ozone
                                                                                                   .Patch.ChatFragment$
                                                                                                   1 -> Ozone.w:
                                                                                                              Ozone.
                                                                                                              Patch.
                                                                                                              ChatFragment
                                                                                                              this$ 0
                                                                                                   -> a
                                                                                                   void <init>
                                                                                                   (Ozone.Patch.ChatFragment)
                                                                                                   -> <init>
                                                                                                      void build
                                                                                                      (arc.scene.Group)
                                                                                                      -> build
                                                                                                      Ozone
                                                                                                   .Patch.ChatFragment$
                                                                                                   AntiSpam -> Ozone.x:
                                                                                                                     int
                                                                                                                     maxRepeatingChar
                                                                                                                     ->
                                                                                                                     c
                                                                                                                     long
                                                                                                                     rateLimit
                                                                                                                     -
                                                                                                   > d
                                                                                                   java.lang.String
                                                                                                   lastMessage -> a
                                                                                                                  int
                                                                                                                  lastMessageTimes
                                                                                                                  -> e
                                                                                                                  java.
                                                                                                                  lang.
                                                                                                   String reasons -> b
                                                                                                   long lastMessageSent
                                                                                                   -> f
                                                                                                           void <init>
                                                                                                           (java.lang.String)
                                                                                                           -> <init>
                                                                                                           void
                                                                                                           setLastMessage
                                                                                                           (java.lang.String)
                                                                                                           -> a
                                                                                                           java.lang.
                                                                                                           String filter
                                                                                                           (java.lang.String)
                                                                                                           -> b
                                                                                                           void <clinit>
                                                                                                           () -> <clinit
                                                                                                           >
                                                                                                           Ozone.Patch
                                                                                                           .ChatFragment
                                                                                                           $ChatMessage
                                                                                                           -> Ozone.y:
                                                                                                           java.lang.
                                                                                                           String
                                                                                                           message -> a
                                                                                                           java
                                                                                                           .lang.String
                                                                                                           formattedMessage
                                                                                                           -> b
                                                                                                           void <init>
                                                                                                                 (java.lang.String,java.lang.String)
                                                                                                                 -> <
                                                                                                                 init>
                                                                                                                 void <
                                                                                                           init>
                                                                                                           (java.lang.String,java.lang.String,java.lang.String)
                                                                                                           -> <init>
                                                                                                           Ozone.Patch.
                                                                                                                 DesktopInput
                                                                                                                 ->
                                                                                                                 Ozone.z
                                                                                                                 :
                                                                                                                 float
                                                                                                           xav -> a
                                                                                                           float yav ->
                                                                                                           b
                                                                                                           void
                                                                                                           <init>() -> <
                                                                                                           init>
                                                                                                           void
                                                                                                           buildPlacementUI
                                                                                                           (arc.scene.ui.layout.Table)
                                                                                                           ->
                                                                                                           buildPlacementUI
                                                                                                           void
                                                                                                           updateMovement
                                                                                                           (mindustry.gen.Unit)
                                                                                                           ->
                                                                                                            updateMovement
                                                                                                            void lambda$
                                                                                                            buildPlacementUI
                                                                                                            $ 0() -> a
                                                                                                                  Ozone.
                                                                                                                  Patch.
                                                                                                                  ImprovisedKeybinding
                                                                                                                  ->
                                                                                                           Ozone.A:
                                                                                                           java.lang.
                                                                                                           String name
                                                                                                           -> a
                                                                                                           java.lang.
                                                                                                           String
                                                                                                           category -> b
                                                                                                                     arc
                                                                                                                     .
                                                                                                                     KeyBinds
                                                                                                                     $
                                                                                                                     KeybindValue
                                                                                                                     value
                                                                                                                     ->
                                                                                                           c
                                                                                                           void <init>
                                                                                                           (java.lang.String,arc.KeyBinds$KeybindValue,java.lang.String,Ozone.Patch.ImprovisedKeybinding$mode)
                                                                                                           -> <init>
                                                                                                                   java.
                                                                                                                   lang.
                                                                                                                   String
                                                                                                                   name(
                                                                                                                   ) -
                                                                                                           > name
                                                                                                           arc.KeyBinds$
                                                                                                           KeybindValue
                                                                                                           defaultValue
                                                                                                           (arc.input.InputDevice$DeviceType)
                                                                                                           ->
                                                                                                            defaultValue
                                                                                                            java.lang.
                                                                                                            String
                                                                                                            category()
                                                                                                           -> category
                                                                                                           Ozone.Patch.
                                                                                                           ImprovisedKeybinding
                                                                                                           $mode
                                                                                                           -> Ozone.B:
                                                                                                           Ozone.Patch.
                                                                                                           ImprovisedKeybinding
                                                                                                           $mode down ->
                                                                                                           b
                                                                                                           Ozone.Patch.
                                                                                                                      ImprovisedKeybinding
                                                                                                                      $
                                                                                                                      mode
                                                                                                                      release
                                                                                                                      ->
                                                                                                                      c
                                                                                                                      Ozone
                                                                                                                      .
                                                                                                           Patch.
                                                                                                           ImprovisedKeybinding
                                                                                                           $mode tap ->
                                                                                                           a
                                                                                                           void<init>
                                                                                                               (java.lang.String,int)
                                                                                                               -> <init>
                                                                                                               void
                                                                                                           <clinit>() ->
                                                                                                           <clinit>
                                                                                                           Ozone.Patch.
                                                                                                           SettingsDialog
                                                                                                           -> Ozone.C:
                                                                                                                     void
                                                                                                                     <
                                                                                                                     init
                                                                                                                     >()
                                                                                                                     ->
                                                                                                                     <
                                                                                                                     init
                                                                                                                     >
                                                                                                                     void
                                                                                                                     lambda
                                                                                                                     $
                                                                                                                     new
                                                                                                                     $ 0
                                                                                                                     (java.lang.reflect.Field,boolean)
                                                                                                                     -
                                                                                                                     > a
                                                                                                                     Ozone
                                                                                                                     .
                                                                                                                     Patch
                                                                                                                     .
                                                                                                                     SettingsDialog
                                                                                                                     $ 1
                                                                                                                     ->
                                                                                                                      Ozone
                                                                                                                      .D
                                                                                                                      :
                                                                                                                      java
                                                                                                                      .
                                                                                                                      lang
                                                                                                                      .
                                                                                                                      reflect
                                                                                                                     .
                                                                                                                     Field
                                                                                                                     val
                                                                                                                     $f
                                                                                                                     ->
                                                                                                                     a
                                                                                                                     void
                                                                                                                     <
                                                                                                                     init
                                                                                                                     >
                                                                                                                     (Ozone.Patch.SettingsDialog,java.lang.reflect.Field)
                                                                                                                     ->
                                                                                                                     <
                                                                                                                     init
                                                                                                                     >
                                                                                                                     void
                                                                                                                     add
                                                                                                                     (arc.scene.ui.SettingsDialog$SettingsTable)
                                                                                                                     ->
                                                                                                                     add
                                                                                                                     void
                                                                                                                     lambda
                                                                                                                     $
                                                                                                                     add
                                                                                                                     $ 1
                                                                                                                     (java.lang.reflect.Field,java.lang.String)
                                                                                                                     ->
                                                                                                                     a
                                                                                                                     java
                                                                                                                     .
                                                                                                                     lang
                                                                                                                     .
                                                                                                                     CharSequence
                                                                                                                     lambda
                                                                                                                     $
                                                                                                                     add
                                                                                                                     $ 0
                                                                                                                     (java.lang.reflect.Field)
                                                                                                                     ->
                                                                                                                     a
                                                                                                                     Ozone
                                                                                                                     .
                                                                                                                     Patch
                                                                                                                     .
                                                                                                                     SettingsDialog
                                                                                                                     $ 2
                                                                                                                     ->
                                                                                                                     Ozone
                                                                                                                     .E:
                                                                                                                       java
                                                                                                                       .
                                                                                                                       lang
                                                                                                                       .
                                                                                                                       reflect
                                                                                                                       .
                                                                                                                       Field
                                                                                                                       val
                                                                                                                       $
                                                                                                                       f
                                                                                                                       -
                                                                                                                       >
                                                                                                                       a
                                                                                                                       void
                                                                                                                       <
                                                                                                                       init
                                                                                                                       >
                                                                                                                       (Ozone.Patch.SettingsDialog,java.lang.reflect.Field)
                                                                                                                       -
                                                                                                                       >
                                                                                                                       <
                                                                                                                       init
                                                                                                                       >
                                                                                                                       void
                                                                                                                       add
                                                                                                                       (arc.scene.ui.SettingsDialog$SettingsTable)
                                                                                                                       -
                                                                                                                       >
                                                                                                                       add
                                                                                                                       void
                                                                                                                       lambda
                                                                                                                       $
                                                                                                                       add
                                                                                                                       $
                                                                                                                       1
                                                                                                                       (java.lang.reflect.Field,java.lang.String)
                                                                                                                       -
                                                                                                                       >
                                                                                                                       a
                                                                                                                       java
                                                                                                                       .
                                                                                                                       lang
                                                                                                                       .
                                                                                                                       CharSequence
                                                                                                                       lambda
                                                                                                                       $
                                                                                                                       add
                                                                                                                       $
                                                                                                                       0
                                                                                                                       (java.lang.reflect.Field)
                                                                                                                       -
                                                                                                                       >
                                                                                                                       a
                                                                                                                       Ozone
                                                                                                                       .
                                                                                                                       Patch
                                                                                                                       .
                                                                                                                       SettingsDialog
                                                                                                                       $
                                                                                                                       3
                                                                                                                       -
                                                                                                                       >
                                                                                                                       Ozone
                                                                                                                       .
                                                                                                                       F
                                                                                                                       :
                                                                                                                       java
                                                                                                                       .
                                                                                                                       lang
                                                                                                                       .
                                                                                                                       reflect
                                                                                                                       .
                                                                                                                       Field
                                                                                                                       val
                                                                                                                       $
                                                                                                                       f
                                                                                                                       -
                                                                                                                       >
                                                                                                                       a
                                                                                                                       void
                                                                                                                       <
                                                                                                                       init
                                                                                                                       >
                                                                                                                       (Ozone.Patch.SettingsDialog,java.lang.reflect.Field)
                                                                                                                       -
                                                                                                                       >
                                                                                                                       <
                                                                                                                       init
                                                                                                                       >
                                                                                                                       void
                                                                                                                       add
                                                                                                                       (arc.scene.ui.SettingsDialog$SettingsTable)
                                                                                                                       -
                                                                                                                       >
                                                                                                                       add
                                                                                                                       void
                                                                                                                       lambda
                                                                                                                       $
                                                                                                                       add
    $ 1(java.lang.reflect.Field,java.lang.String) -> a
    java.lang.CharSequence lambda$add$ 0(java.lang.reflect.Field) -> a
    Ozone.Patch.SettingsDialog$ 4 -> Ozone.G:
                                          java.lang.reflect.Field val$f -> a
                                                                  void <init>
    (Ozone.Patch.SettingsDialog,java.lang.reflect.Field) -> <init>
    void add(arc.scene.ui.SettingsDialog$SettingsTable) -> add
                                                         void lambda$add$ 1(java.lang.reflect.Field,java.lang.String) -
    > a
    java.lang.CharSequence lambda$add$ 0(java.lang.reflect.Field) -> a
                                     Ozone.Patch.Translation -> Ozone.H:
                                                 java.util.ArrayList normalSinglet -> b
                                                          java.util.ArrayList singlet1 -> c
                                                                    java.util.HashMap settings -> d
                                                                                      java.util.HashMap commands -> a
                                                                                                                 java.
                                                                                                                 util.
                                                                                                                 HashMap
                                                                                                                 keyBinds
                                                                                                                 -> e
                                                                                                                  void
                                                                                                                  patch(
                                                                                                                  ) -> a
                                                                                                                  void
                                                          <clinit>() -> <clinit>
                                                          Ozone.UI.CommandsListFrag -> Ozone.I:
                                                                                              boolean visible -> a
                                                                                              arc.scene.
                                                          ui.layout.Table content -> b
                                                          float h -> c
                                                                arc.scene.ui.TextField sField -> d
                                                                             java.lang.String commands -> e
                                                                                              void <init>() -> <init>
                                                                                                            void build
                                                                                                            (arc.scene.Group)
                                                                                                            -> build
                                                                                                               void
                                                                                                               rebuild()
                                                                                                               -> b
                                                                                                               void
                                                                                                               toggle
                                                                             () -> a
                                                                             void lambda$rebuild$
                                                                             12(java.lang.String,java.util.Map$Entry) ->
                                                                             a
    void lambda$rebuild$11(java.util.Map$Entry) -> a
    java.lang.CharSequence lambda$rebuild$10(java.lang.String) -> a
                           java.lang.CharSequence lambda$rebuild$ 9(java.util.Map$Entry) -> b
                                                                                         void lambda$build$ 8
                                                                                         (arc.scene.ui.layout.Table)
    -> a
    void lambda$build$ 7(arc.scene.ui.layout.Table) -> b
                                                    void lambda$build$ 6(arc.scene.ui.layout.Table) -> c
                                                                                                    void lambda$build$ 5
                                                                                                    () -> c
                                                                                                     void lambda$build$
                                                                                                     4
    (java.lang.String) -> b
    void lambda$build$ 3(java.lang.String,java.lang.String) -> a
                        void lambda$build$ 2(java.lang.String) -> c
                                            void lambda$build$ 1() -> d
                                                                boolean lambda$build$0() -> e
                                                                                     Ozone.UI.
    CommandsListFrag$ 1 -> Ozone.J:
    void <init>(Ozone.UI.CommandsListFrag) -> <init>
         void draw() -> draw
              Ozone.UI.OzoneMenu -> Ozone.K:
                       arc.scene.ui.TextField commandsField -> a
                                java.lang.String commands -> b
                                     void <init>(java.lang.String,arc.scene.ui.Dialog$DialogStyle) -> <init>
                                               void hide() -> hide
                                                         void setup() -> a
                                                                         void lambda$setup$ 5(arc.scene.ui.layout.Table)
                                                                         -> a
                                                                            void lambda$setup$ 4() -> b
                                                                                                    void lambda$setup$ 3
                                                                                                    (java.lang.String) -
    > a
    java.lang.CharSequence lambda$setup$ 2() -> c
                                       void lambda$setup$ 1() -> d
                                                   void lambda$new$ 0(arc.input.KeyCode) -> a
                                                              Settings.Core -> Settings.Core:
                                                                       boolean colorPatch -> colorPatch
                                                                                           boolean debugMode ->
                                                                                           debugMode
                                                                                           boolean antiSpam -> antiSpam
                                                                                                             java.lang.
                                                                                                             String
                                                                                                             commandsPrefix
                                                                                                             ->
    commandsPrefix
    void <init>() -> <init>
                      void <clinit>() -> <clinit>
                                         Settings.Desktop -> Settings.Desktop:
                                                                      boolean logMessage -> logMessage
                                                                      void <init>() -> <init>
                                                                                void <clinit>() -> <clinit>
                                                                                      com
                                                                      .formdev.flatlaf.FlatClientProperties -> com.
                                                                      formdev.flatlaf.FlatClientProperties:
                                                                      java.lang.String BUTTON_TYPE -> BUTTON_TYPE
                                                                                java.lang.String
                                                                      BUTTON_TYPE_SQUARE -> BUTTON_TYPE_SQUARE
                                                                      java.lang.String BUTTON_TYPE_ROUND_RECT
                                                                      -> BUTTON_TYPE_ROUND_RECT
                                                                      java.lang.String BUTTON_TYPE_TAB -
                                                                      > BUTTON_TYPE_TAB
                                                                      java.lang.String BUTTON_TYPE_HELP ->
                                                                      BUTTON_TYPE_HELP
                                                                      java.lang.String BUTTON_TYPE_TOOLBAR_BUTTON ->
                                                                      BUTTON_TYPE_TOOLBAR_BUTTON
    java.lang.String SELECTED_STATE -> SELECTED_STATE
    java.lang.String SELECTED_STATE_INDETERMINATE -> SELECTED_STATE_INDETERMINATE
        java.lang.String SQUARE_SIZE -> SQUARE_SIZE
    java.lang.String MINIMUM_WIDTH -> MINIMUM_WIDTH
    java.lang.String MINIMUM_HEIGHT -> MINIMUM_HEIGHT
    java.lang.String OUTLINE -> OUTLINE
    java.lang.String OUTLINE_ERROR -> OUTLINE_ERROR
    java.lang.String OUTLINE_WARNING -> OUTLINE_WARNING
    java.lang.String COMPONENT_ROUND_RECT -> COMPONENT_ROUND_RECT
    java.lang.String POPUP_DROP_SHADOW_PAINTED -> POPUP_DROP_SHADOW_PAINTED
    java.lang.String PROGRESS_BAR_LARGE_HEIGHT -> PROGRESS_BAR_LARGE_HEIGHT
    java.lang.String PROGRESS_BAR_SQUARE -> PROGRESS_BAR_SQUARE
    java.lang.String MENU_BAR_EMBEDDED -> MENU_BAR_EMBEDDED
    java.lang.String SCROLL_BAR_SHOW_BUTTONS -> SCROLL_BAR_SHOW_BUTTONS
    java.lang.String SCROLL_PANE_SMOOTH_SCROLLING -> SCROLL_PANE_SMOOTH_SCROLLING
    java.lang.String TABBED_PANE_SHOW_TAB_SEPARATORS -> TABBED_PANE_SHOW_TAB_SEPARATORS
    java.lang.String TABBED_PANE_HAS_FULL_BORDER -> TABBED_PANE_HAS_FULL_BORDER
    java.lang.String TABBED_PANE_TAB_HEIGHT -> TABBED_PANE_TAB_HEIGHT
    java.lang.String SELECT_ALL_ON_FOCUS_POLICY -> SELECT_ALL_ON_FOCUS_POLICY
    java.lang.String SELECT_ALL_ON_FOCUS_POLICY_NEVER -> SELECT_ALL_ON_FOCUS_POLICY_NEVER
    java.lang.String SELECT_ALL_ON_FOCUS_POLICY_ONCE -> SELECT_ALL_ON_FOCUS_POLICY_ONCE
    java.lang.String SELECT_ALL_ON_FOCUS_POLICY_ALWAYS -> SELECT_ALL_ON_FOCUS_POLICY_ALWAYS
    java.lang.String PLACEHOLDER_TEXT -> PLACEHOLDER_TEXT
    java.lang.String TAB_BUTTON_UNDERLINE_HEIGHT -> TAB_BUTTON_UNDERLINE_HEIGHT
    java.lang.String TAB_BUTTON_UNDERLINE_COLOR -> TAB_BUTTON_UNDERLINE_COLOR
    java.lang.String TAB_BUTTON_SELECTED_BACKGROUND -> TAB_BUTTON_SELECTED_BACKGROUND
    boolean clientPropertyEquals(javax.swing.JComponent,java.lang.String,java.lang.Object) -> clientPropertyEquals
    boolean clientPropertyBoolean(javax.swing.JComponent,java.lang.String,boolean) -> clientPropertyBoolean
    java.lang.Boolean clientPropertyBooleanStrict(javax.swing.JComponent,java.lang.String,java.lang.Boolean) -> clientPropertyBooleanStrict
    int clientPropertyInt(javax.swing.JComponent,java.lang.String,int) -> clientPropertyInt
    java.awt.Color clientPropertyColor(javax.swing.JComponent,java.lang.String,java.awt.Color) -> clientPropertyColor
    int clientPropertyChoice(javax.swing.JComponent,java.lang.String,java.lang.String[]) -> clientPropertyChoice
com.formdev.flatlaf.FlatDarculaLaf -> com.formdev.flatlaf.FlatDarculaLaf:
    void <init>() -> <init>
    boolean install() -> install
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
com.formdev.flatlaf.FlatDarkLaf -> com.formdev.flatlaf.FlatDarkLaf:
    void <init>() -> <init>
    boolean install() -> install
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
    boolean isDark() -> isDark
com.formdev.flatlaf.FlatDefaultsAddon -> com.formdev.flatlaf.FlatDefaultsAddon:
    void <init>() -> <init>
    java.io.InputStream getDefaults(java.lang.Class) -> getDefaults
    void afterDefaultsLoading(javax.swing.LookAndFeel,javax.swing.UIDefaults) -> afterDefaultsLoading
    int getPriority() -> getPriority
com.formdev.flatlaf.FlatIconColors -> com.formdev.flatlaf.FlatIconColors:
    com.formdev.flatlaf.FlatIconColors ACTIONS_RED -> ACTIONS_RED
    com.formdev.flatlaf.FlatIconColors ACTIONS_RED_DARK -> ACTIONS_RED_DARK
    com.formdev.flatlaf.FlatIconColors ACTIONS_YELLOW -> ACTIONS_YELLOW
    com.formdev.flatlaf.FlatIconColors ACTIONS_YELLOW_DARK -> ACTIONS_YELLOW_DARK
    com.formdev.flatlaf.FlatIconColors ACTIONS_GREEN -> ACTIONS_GREEN
    com.formdev.flatlaf.FlatIconColors ACTIONS_GREEN_DARK -> ACTIONS_GREEN_DARK
    com.formdev.flatlaf.FlatIconColors ACTIONS_BLUE -> ACTIONS_BLUE
    com.formdev.flatlaf.FlatIconColors ACTIONS_BLUE_DARK -> ACTIONS_BLUE_DARK
    com.formdev.flatlaf.FlatIconColors ACTIONS_GREY -> ACTIONS_GREY
    com.formdev.flatlaf.FlatIconColors ACTIONS_GREY_DARK -> ACTIONS_GREY_DARK
    com.formdev.flatlaf.FlatIconColors ACTIONS_GREYINLINE -> ACTIONS_GREYINLINE
    com.formdev.flatlaf.FlatIconColors ACTIONS_GREYINLINE_DARK -> ACTIONS_GREYINLINE_DARK
    com.formdev.flatlaf.FlatIconColors OBJECTS_GREY -> OBJECTS_GREY
    com.formdev.flatlaf.FlatIconColors OBJECTS_BLUE -> OBJECTS_BLUE
    com.formdev.flatlaf.FlatIconColors OBJECTS_GREEN -> OBJECTS_GREEN
    com.formdev.flatlaf.FlatIconColors OBJECTS_YELLOW -> OBJECTS_YELLOW
    com.formdev.flatlaf.FlatIconColors OBJECTS_YELLOW_DARK -> OBJECTS_YELLOW_DARK
    com.formdev.flatlaf.FlatIconColors OBJECTS_PURPLE -> OBJECTS_PURPLE
    com.formdev.flatlaf.FlatIconColors OBJECTS_PINK -> OBJECTS_PINK
    com.formdev.flatlaf.FlatIconColors OBJECTS_RED -> OBJECTS_RED
    com.formdev.flatlaf.FlatIconColors OBJECTS_RED_STATUS -> OBJECTS_RED_STATUS
    com.formdev.flatlaf.FlatIconColors OBJECTS_GREEN_ANDROID -> OBJECTS_GREEN_ANDROID
    com.formdev.flatlaf.FlatIconColors OBJECTS_BLACK_TEXT -> OBJECTS_BLACK_TEXT
    int rgb -> rgb
    java.lang.String key -> key
    boolean light -> light
    boolean dark -> dark
    com.formdev.flatlaf.FlatIconColors[] $VALUES -> $VALUES
    com.formdev.flatlaf.FlatIconColors[] values() -> values
    com.formdev.flatlaf.FlatIconColors valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    void <init>(java.lang.String,int,int,java.lang.String,boolean,boolean) -> <init>
    void <clinit>() -> <clinit>
com.formdev.flatlaf.FlatInputMaps -> com.formdev.flatlaf.FlatInputMaps:
    void <init>() -> <init>
    void initInputMaps(javax.swing.UIDefaults) -> initInputMaps
    void initBasicInputMaps(javax.swing.UIDefaults) -> initBasicInputMaps
    void initTextComponentInputMaps(javax.swing.UIDefaults) -> initTextComponentInputMaps
    void initMacInputMaps(javax.swing.UIDefaults) -> initMacInputMaps
    void modifyInputMap(javax.swing.UIDefaults,java.lang.String,java.lang.Object[]) -> modifyInputMap
    void modifyInputMap(java.util.function.BooleanSupplier,javax.swing.UIDefaults,java.lang.String,java.lang.Object[]) -> modifyInputMap
    java.lang.Object mac(java.lang.Object,java.lang.Object) -> mac
    boolean lambda$initBasicInputMaps$0() -> lambda$initBasicInputMaps$0
com.formdev.flatlaf.FlatInputMaps$LazyInputMapEx -> com.formdev.flatlaf.FlatInputMaps$LazyInputMapEx:
    java.lang.Object[][] bindingsArray -> bindingsArray
    void <init>(java.lang.Object[][]) -> <init>
    java.lang.Object createValue(javax.swing.UIDefaults) -> createValue
com.formdev.flatlaf.FlatInputMaps$LazyModifyInputMap -> com.formdev.flatlaf.FlatInputMaps$LazyModifyInputMap:
    java.util.function.BooleanSupplier condition -> condition
    java.lang.Object baseInputMap -> baseInputMap
    java.lang.Object[] bindings -> bindings
    void <init>(java.util.function.BooleanSupplier,java.lang.Object,java.lang.Object[]) -> <init>
    java.lang.Object createValue(javax.swing.UIDefaults) -> createValue
com.formdev.flatlaf.FlatIntelliJLaf -> com.formdev.flatlaf.FlatIntelliJLaf:
    void <init>() -> <init>
    boolean install() -> install
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
com.formdev.flatlaf.FlatLaf -> com.formdev.flatlaf.FlatLaf:
    java.util.logging.Logger LOG -> LOG
    java.lang.String DESKTOPFONTHINTS -> DESKTOPFONTHINTS
    java.util.List customDefaultsSources -> customDefaultsSources
    java.lang.String desktopPropertyName -> desktopPropertyName
    java.lang.String desktopPropertyName2 -> desktopPropertyName2
    java.beans.PropertyChangeListener desktopPropertyListener -> desktopPropertyListener
    boolean aquaLoaded -> aquaLoaded
    boolean updateUIPending -> updateUIPending
    javax.swing.PopupFactory oldPopupFactory -> oldPopupFactory
    com.formdev.flatlaf.MnemonicHandler mnemonicHandler -> mnemonicHandler
    java.util.function.Consumer postInitialization -> postInitialization
    java.lang.Boolean oldFrameWindowDecorated -> oldFrameWindowDecorated
    java.lang.Boolean oldDialogWindowDecorated -> oldDialogWindowDecorated
    void <init>() -> <init>
    boolean install(javax.swing.LookAndFeel) -> install
    java.lang.String getID() -> getID
    boolean isDark() -> isDark
    boolean isLafDark() -> isLafDark
    boolean getSupportsWindowDecorations() -> getSupportsWindowDecorations
    boolean isNativeLookAndFeel() -> isNativeLookAndFeel
    boolean isSupportedLookAndFeel() -> isSupportedLookAndFeel
    javax.swing.Icon getDisabledIcon(javax.swing.JComponent,javax.swing.Icon) -> getDisabledIcon
    void initialize() -> initialize
    void uninitialize() -> uninitialize
    void initializeAqua() -> initializeAqua
    javax.swing.UIDefaults getDefaults() -> getDefaults
    void applyAdditionalDefaults(javax.swing.UIDefaults) -> applyAdditionalDefaults
    java.util.List getLafClassesForDefaultsLoading() -> getLafClassesForDefaultsLoading
    java.util.Properties getAdditionalDefaults() -> getAdditionalDefaults
    void initFonts(javax.swing.UIDefaults) -> initFonts
    javax.swing.plaf.FontUIResource createCompositeFont(java.lang.String,int,int) -> createCompositeFont
    void initIconColors(javax.swing.UIDefaults,boolean) -> initIconColors
    void putAATextInfo(javax.swing.UIDefaults) -> putAATextInfo
    void putDefaults(javax.swing.UIDefaults,java.lang.Object,java.lang.String[]) -> putDefaults
    java.util.List getCustomDefaultsSources() -> getCustomDefaultsSources
    void registerCustomDefaultsSource(java.lang.String) -> registerCustomDefaultsSource
    void unregisterCustomDefaultsSource(java.lang.String) -> unregisterCustomDefaultsSource
    void registerCustomDefaultsSource(java.lang.String,java.lang.ClassLoader) -> registerCustomDefaultsSource
    void unregisterCustomDefaultsSource(java.lang.String,java.lang.ClassLoader) -> unregisterCustomDefaultsSource
    void registerCustomDefaultsSource(java.io.File) -> registerCustomDefaultsSource
    void unregisterCustomDefaultsSource(java.io.File) -> unregisterCustomDefaultsSource
    void reSetLookAndFeel() -> reSetLookAndFeel
    void updateUI() -> updateUI
    void updateUILater() -> updateUILater
    boolean isShowMnemonics() -> isShowMnemonics
    void showMnemonics(java.awt.Component) -> showMnemonics
    void hideMnemonics() -> hideMnemonics
    void lambda$updateUILater$6() -> lambda$updateUILater$6
    void lambda$reSetLookAndFeel$5() -> lambda$reSetLookAndFeel$5
    java.lang.Object lambda$getDefaults$4(javax.swing.UIDefaults) -> lambda$getDefaults$4
    int lambda$getDefaults$3(com.formdev.flatlaf.FlatDefaultsAddon,com.formdev.flatlaf.FlatDefaultsAddon) -> lambda$getDefaults$3
    void lambda$initialize$2(javax.swing.UIDefaults) -> lambda$initialize$2
    void lambda$initialize$1(java.beans.PropertyChangeEvent) -> lambda$initialize$1
    java.awt.Image lambda$getDisabledIcon$0(java.awt.image.ImageFilter,java.awt.Image) -> lambda$getDisabledIcon$0
    void <clinit>() -> <clinit>
com.formdev.flatlaf.FlatLaf$ActiveFont -> com.formdev.flatlaf.FlatLaf$ActiveFont:
    float scaleFactor -> scaleFactor
    java.awt.Font font -> font
    java.awt.Font lastDefaultFont -> lastDefaultFont
    void <init>(float) -> <init>
    java.lang.Object createValue(javax.swing.UIDefaults) -> createValue
com.formdev.flatlaf.FlatLaf$ImageIconUIResource -> com.formdev.flatlaf.FlatLaf$ImageIconUIResource:
    void <init>(java.awt.Image) -> <init>
com.formdev.flatlaf.FlatLightLaf -> com.formdev.flatlaf.FlatLightLaf:
    void <init>() -> <init>
    boolean install() -> install
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
    boolean isDark() -> isDark
com.formdev.flatlaf.FlatPropertiesLaf -> com.formdev.flatlaf.FlatPropertiesLaf:
    java.lang.String name -> name
    java.lang.String baseTheme -> baseTheme
    boolean dark -> dark
    java.util.Properties properties -> properties
    void <init>(java.lang.String,java.io.File) -> <init>
    void <init>(java.lang.String,java.io.InputStream) -> <init>
    java.util.Properties loadProperties(java.io.InputStream) -> loadProperties
    void <init>(java.lang.String,java.util.Properties) -> <init>
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
    boolean isDark() -> isDark
    java.util.ArrayList getLafClassesForDefaultsLoading() -> getLafClassesForDefaultsLoading
    java.util.Properties getAdditionalDefaults() -> getAdditionalDefaults
    java.util.List getLafClassesForDefaultsLoading() -> getLafClassesForDefaultsLoading
com.formdev.flatlaf.FlatSystemProperties -> com.formdev.flatlaf.FlatSystemProperties:
    java.lang.String UI_SCALE -> UI_SCALE
    java.lang.String UI_SCALE_ENABLED -> UI_SCALE_ENABLED
    java.lang.String USE_UBUNTU_FONT -> USE_UBUNTU_FONT
    java.lang.String USE_WINDOW_DECORATIONS -> USE_WINDOW_DECORATIONS
    java.lang.String USE_JETBRAINS_CUSTOM_DECORATIONS -> USE_JETBRAINS_CUSTOM_DECORATIONS
    java.lang.String MENUBAR_EMBEDDED -> MENUBAR_EMBEDDED
    java.lang.String USE_TEXT_Y_CORRECTION -> USE_TEXT_Y_CORRECTION
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    java.lang.Boolean getBooleanStrict(java.lang.String,java.lang.Boolean) -> getBooleanStrict
com.formdev.flatlaf.IntelliJTheme -> com.formdev.flatlaf.IntelliJTheme:
    java.lang.String name -> name
    boolean dark -> dark
    java.lang.String author -> author
    java.util.Map colors -> colors
    java.util.Map ui -> ui
    java.util.Map icons -> icons
    java.util.Map namedColors -> namedColors
    java.util.Map uiKeyMapping -> uiKeyMapping
    java.util.Map uiKeyCopying -> uiKeyCopying
    java.util.Map uiKeyInverseMapping -> uiKeyInverseMapping
    java.util.Map checkboxKeyMapping -> checkboxKeyMapping
    java.util.Map checkboxDuplicateColors -> checkboxDuplicateColors
    boolean install(java.io.InputStream) -> install
    com.formdev.flatlaf.FlatLaf createLaf(java.io.InputStream) -> createLaf
    com.formdev.flatlaf.FlatLaf createLaf(com.formdev.flatlaf.IntelliJTheme) -> createLaf
    void <init>(java.io.InputStream) -> <init>
    void applyProperties(javax.swing.UIDefaults) -> applyProperties
    java.util.Map removeThemeSpecificDefaults(javax.swing.UIDefaults) -> removeThemeSpecificDefaults
    void loadNamedColors(javax.swing.UIDefaults) -> loadNamedColors
    void apply(java.lang.String,java.lang.Object,javax.swing.UIDefaults,java.util.ArrayList,java.util.Set) -> apply
    java.lang.String fixColorIfValid(java.lang.String,java.lang.String) -> fixColorIfValid
    void applyColorPalette(javax.swing.UIDefaults) -> applyColorPalette
    javax.swing.plaf.ColorUIResource toColor(java.lang.String) -> toColor
    void applyCheckBoxColors(javax.swing.UIDefaults) -> applyCheckBoxColors
    void access$000(com.formdev.flatlaf.IntelliJTheme,javax.swing.UIDefaults) -> access$000
    void <clinit>() -> <clinit>
com.formdev.flatlaf.IntelliJTheme$ThemeLaf -> com.formdev.flatlaf.IntelliJTheme$ThemeLaf:
    com.formdev.flatlaf.IntelliJTheme theme -> theme
    void <init>(com.formdev.flatlaf.IntelliJTheme) -> <init>
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
    boolean isDark() -> isDark
    com.formdev.flatlaf.IntelliJTheme getTheme() -> getTheme
    void applyAdditionalDefaults(javax.swing.UIDefaults) -> applyAdditionalDefaults
    java.util.ArrayList getLafClassesForDefaultsLoading() -> getLafClassesForDefaultsLoading
    java.util.List getLafClassesForDefaultsLoading() -> getLafClassesForDefaultsLoading
com.formdev.flatlaf.LinuxFontPolicy -> com.formdev.flatlaf.LinuxFontPolicy:
    void <init>() -> <init>
    java.awt.Font getFont() -> getFont
    java.awt.Font getGnomeFont() -> getGnomeFont
    java.awt.Font createFont(java.lang.String,int,int,double) -> createFont
    double getGnomeFontScale() -> getGnomeFontScale
    java.lang.String mapFcName(java.lang.String) -> mapFcName
    java.awt.Font getKDEFont() -> getKDEFont
    java.util.List readConfig(java.lang.String) -> readConfig
    java.lang.String getConfigEntry(java.util.List,java.lang.String,java.lang.String) -> getConfigEntry
    boolean isSystemScaling() -> isSystemScaling
com.formdev.flatlaf.MnemonicHandler -> com.formdev.flatlaf.MnemonicHandler:
    boolean showMnemonics -> showMnemonics
    java.lang.ref.WeakReference lastShowMnemonicWindow -> lastShowMnemonicWindow
    java.awt.event.WindowListener windowListener -> windowListener
    int altPressedEventCount -> altPressedEventCount
    boolean selectMenuOnAltReleased -> selectMenuOnAltReleased
    void <init>() -> <init>
    boolean isShowMnemonics() -> isShowMnemonics
    void install() -> install
    void uninstall() -> uninstall
    boolean postProcessKeyEvent(java.awt.event.KeyEvent) -> postProcessKeyEvent
    boolean shouldShowMnemonics(java.awt.event.KeyEvent) -> shouldShowMnemonics
    boolean processKeyEventOnWindows(java.awt.event.KeyEvent) -> processKeyEventOnWindows
    void stateChanged(javax.swing.event.ChangeEvent) -> stateChanged
    void showMnemonics(boolean,java.awt.Component) -> showMnemonics
    void repaintMnemonics(java.awt.Container) -> repaintMnemonics
    boolean hasMnemonic(java.awt.Component) -> hasMnemonic
    int access$002(int) -> access$002
    boolean access$102(boolean) -> access$102
com.formdev.flatlaf.MnemonicHandler$1 -> com.formdev.flatlaf.MnemonicHandler$1:
    void <init>() -> <init>
    void windowDeactivated(java.awt.event.WindowEvent) -> windowDeactivated
    void lambda$windowDeactivated$0() -> lambda$windowDeactivated$0
com.formdev.flatlaf.UIDefaultsLoader -> com.formdev.flatlaf.UIDefaultsLoader:
    java.lang.String TYPE_PREFIX -> TYPE_PREFIX
    java.lang.String TYPE_PREFIX_END -> TYPE_PREFIX_END
    java.lang.String VARIABLE_PREFIX -> VARIABLE_PREFIX
    java.lang.String PROPERTY_PREFIX -> PROPERTY_PREFIX
    java.lang.String OPTIONAL_PREFIX -> OPTIONAL_PREFIX
    java.lang.String GLOBAL_PREFIX -> GLOBAL_PREFIX
    com.formdev.flatlaf.UIDefaultsLoader$ValueType[] tempResultValueType -> tempResultValueType
    void <init>() -> <init>
    void loadDefaultsFromProperties(java.lang.Class,java.util.List,java.util.Properties,boolean,javax.swing.UIDefaults) -> loadDefaultsFromProperties
    void loadDefaultsFromProperties(java.util.List,java.util.List,java.util.Properties,boolean,javax.swing.UIDefaults) -> loadDefaultsFromProperties
    void logParseError(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.RuntimeException) -> logParseError
    java.lang.String resolveValue(java.lang.String,java.util.function.Function) -> resolveValue
    java.lang.Object parseValue(java.lang.String,java.lang.String) -> parseValue
    java.lang.Object parseValue(java.lang.String,java.lang.String,com.formdev.flatlaf.UIDefaultsLoader$ValueType[],java.util.function.Function,java.util.List) -> parseValue
    java.lang.Object parseBorder(java.lang.String,java.util.function.Function,java.util.List) -> parseBorder
    java.lang.Object parseInstance(java.lang.String,java.util.List) -> parseInstance
    java.lang.Object parseClass(java.lang.String,java.util.List) -> parseClass
    java.lang.Class findClass(java.lang.String,java.util.List) -> findClass
    java.awt.Insets parseInsets(java.lang.String) -> parseInsets
    java.awt.Dimension parseDimension(java.lang.String) -> parseDimension
    java.lang.Object parseColorOrFunction(java.lang.String,java.util.function.Function,boolean) -> parseColorOrFunction
    javax.swing.plaf.ColorUIResource parseColor(java.lang.String) -> parseColor
    javax.swing.plaf.ColorUIResource parseColor(java.lang.String,boolean) -> parseColor
    int parseColorRGBA(java.lang.String) -> parseColorRGBA
    java.lang.Object parseColorFunctions(java.lang.String,java.util.function.Function,boolean) -> parseColorFunctions
    javax.swing.plaf.ColorUIResource parseColorRgbOrRgba(boolean,java.util.List,java.util.function.Function,boolean) -> parseColorRgbOrRgba
    javax.swing.plaf.ColorUIResource parseColorHslOrHsla(boolean,java.util.List) -> parseColorHslOrHsla
    java.lang.Object parseColorHSLIncreaseDecrease(int,boolean,java.util.List,java.util.function.Function,boolean) -> parseColorHSLIncreaseDecrease
    int parsePercentage(java.lang.String) -> parsePercentage
    java.lang.Character parseCharacter(java.lang.String) -> parseCharacter
    java.lang.Integer parseInteger(java.lang.String,int,int,boolean) -> parseInteger
    java.lang.Integer parseInteger(java.lang.String,boolean) -> parseInteger
    java.lang.Float parseFloat(java.lang.String,boolean) -> parseFloat
    javax.swing.UIDefaults$ActiveValue parseScaledInteger(java.lang.String) -> parseScaledInteger
    javax.swing.UIDefaults$ActiveValue parseScaledFloat(java.lang.String) -> parseScaledFloat
    javax.swing.UIDefaults$ActiveValue parseScaledInsets(java.lang.String) -> parseScaledInsets
    javax.swing.UIDefaults$ActiveValue parseScaledDimension(java.lang.String) -> parseScaledDimension
    java.lang.Object parseGrayFilter(java.lang.String) -> parseGrayFilter
    java.util.List split(java.lang.String,char) -> split
    java.util.List splitFunctionParams(java.lang.String,char) -> splitFunctionParams
    java.lang.Object lazyUIManagerGet(java.lang.String) -> lazyUIManagerGet
    java.lang.Object lambda$parseGrayFilter$12(int,int,int,javax.swing.UIDefaults) -> lambda$parseGrayFilter$12
    java.lang.Object lambda$parseScaledDimension$11(java.awt.Dimension,javax.swing.UIDefaults) -> lambda$parseScaledDimension$11
    java.lang.Object lambda$parseScaledInsets$10(java.awt.Insets,javax.swing.UIDefaults) -> lambda$parseScaledInsets$10
    java.lang.Object lambda$parseScaledFloat$9(float,javax.swing.UIDefaults) -> lambda$parseScaledFloat$9
    java.lang.Object lambda$parseScaledInteger$8(int,javax.swing.UIDefaults) -> lambda$parseScaledInteger$8
    java.lang.Object lambda$parseColorHSLIncreaseDecrease$7(java.lang.String,com.formdev.flatlaf.util.ColorFunctions$ColorFunction,javax.swing.UIDefaults) -> lambda$parseColorHSLIncreaseDecrease$7
    java.lang.Object lambda$parseClass$6(java.lang.String,java.util.List,javax.swing.UIDefaults) -> lambda$parseClass$6
    java.lang.Object lambda$parseInstance$5(java.lang.String,java.util.List,javax.swing.UIDefaults) -> lambda$parseInstance$5
    java.lang.Object lambda$parseBorder$4(javax.swing.plaf.ColorUIResource,java.awt.Insets,float,javax.swing.UIDefaults) -> lambda$parseBorder$4
    java.lang.Object lambda$parseValue$3(java.lang.String,javax.swing.UIDefaults) -> lambda$parseValue$3
    java.lang.String lambda$parseValue$2(java.lang.String) -> lambda$parseValue$2
    java.lang.String lambda$loadDefaultsFromProperties$1(java.util.function.Function,java.lang.String) -> lambda$loadDefaultsFromProperties$1
    java.lang.String lambda$loadDefaultsFromProperties$0(java.util.Properties,java.lang.String) -> lambda$loadDefaultsFromProperties$0
    void <clinit>() -> <clinit>
com.formdev.flatlaf.UIDefaultsLoader$1 -> com.formdev.flatlaf.UIDefaultsLoader$1:
    int[] $SwitchMap$com$formdev$flatlaf$UIDefaultsLoader$ValueType -> $SwitchMap$com$formdev$flatlaf$UIDefaultsLoader$ValueType
    void <clinit>() -> <clinit>
com.formdev.flatlaf.UIDefaultsLoader$ValueType -> com.formdev.flatlaf.UIDefaultsLoader$ValueType:
    com.formdev.flatlaf.UIDefaultsLoader$ValueType UNKNOWN -> UNKNOWN
    com.formdev.flatlaf.UIDefaultsLoader$ValueType STRING -> STRING
    com.formdev.flatlaf.UIDefaultsLoader$ValueType BOOLEAN -> BOOLEAN
    com.formdev.flatlaf.UIDefaultsLoader$ValueType CHARACTER -> CHARACTER
    com.formdev.flatlaf.UIDefaultsLoader$ValueType INTEGER -> INTEGER
    com.formdev.flatlaf.UIDefaultsLoader$ValueType FLOAT -> FLOAT
    com.formdev.flatlaf.UIDefaultsLoader$ValueType BORDER -> BORDER
    com.formdev.flatlaf.UIDefaultsLoader$ValueType ICON -> ICON
    com.formdev.flatlaf.UIDefaultsLoader$ValueType INSETS -> INSETS
    com.formdev.flatlaf.UIDefaultsLoader$ValueType DIMENSION -> DIMENSION
    com.formdev.flatlaf.UIDefaultsLoader$ValueType COLOR -> COLOR
    com.formdev.flatlaf.UIDefaultsLoader$ValueType SCALEDINTEGER -> SCALEDINTEGER
    com.formdev.flatlaf.UIDefaultsLoader$ValueType SCALEDFLOAT -> SCALEDFLOAT
    com.formdev.flatlaf.UIDefaultsLoader$ValueType SCALEDINSETS -> SCALEDINSETS
    com.formdev.flatlaf.UIDefaultsLoader$ValueType SCALEDDIMENSION -> SCALEDDIMENSION
    com.formdev.flatlaf.UIDefaultsLoader$ValueType INSTANCE -> INSTANCE
    com.formdev.flatlaf.UIDefaultsLoader$ValueType CLASS -> CLASS
    com.formdev.flatlaf.UIDefaultsLoader$ValueType GRAYFILTER -> GRAYFILTER
    com.formdev.flatlaf.UIDefaultsLoader$ValueType NULL -> NULL
    com.formdev.flatlaf.UIDefaultsLoader$ValueType LAZY -> LAZY
    com.formdev.flatlaf.UIDefaultsLoader$ValueType[] $VALUES -> $VALUES
    com.formdev.flatlaf.UIDefaultsLoader$ValueType[] values() -> values
    com.formdev.flatlaf.UIDefaultsLoader$ValueType valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.formdev.flatlaf.icons.FlatAbstractIcon -> com.formdev.flatlaf.icons.FlatAbstractIcon:
    int width -> width
    int height -> height
    java.awt.Color color -> color
    void <init>(int,int,java.awt.Color) -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics,int,int) -> paintIcon
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
    int getIconWidth() -> getIconWidth
    int getIconHeight() -> getIconHeight
com.formdev.flatlaf.icons.FlatAscendingSortIcon -> com.formdev.flatlaf.icons.FlatAscendingSortIcon:
    boolean chevron -> chevron
    java.awt.Color sortIconColor -> sortIconColor
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatCapsLockIcon -> com.formdev.flatlaf.icons.FlatCapsLockIcon:
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatCheckBoxIcon -> com.formdev.flatlaf.icons.FlatCheckBoxIcon:
    java.lang.String style -> style
    int focusWidth -> focusWidth
    java.awt.Color focusColor -> focusColor
    int arc -> arc
    java.awt.Color borderColor -> borderColor
    java.awt.Color background -> background
    java.awt.Color selectedBorderColor -> selectedBorderColor
    java.awt.Color selectedBackground -> selectedBackground
    java.awt.Color checkmarkColor -> checkmarkColor
    java.awt.Color disabledBorderColor -> disabledBorderColor
    java.awt.Color disabledBackground -> disabledBackground
    java.awt.Color disabledCheckmarkColor -> disabledCheckmarkColor
    java.awt.Color focusedBorderColor -> focusedBorderColor
    java.awt.Color focusedBackground -> focusedBackground
    java.awt.Color selectedFocusedBorderColor -> selectedFocusedBorderColor
    java.awt.Color selectedFocusedBackground -> selectedFocusedBackground
    java.awt.Color selectedFocusedCheckmarkColor -> selectedFocusedCheckmarkColor
    java.awt.Color hoverBorderColor -> hoverBorderColor
    java.awt.Color hoverBackground -> hoverBackground
    java.awt.Color selectedHoverBackground -> selectedHoverBackground
    java.awt.Color pressedBackground -> pressedBackground
    java.awt.Color selectedPressedBackground -> selectedPressedBackground
    int ICON_SIZE -> ICON_SIZE
    java.awt.Color getUIColor(java.lang.String,java.lang.String) -> getUIColor
    int getUIInt(java.lang.String,int,java.lang.String) -> getUIInt
    java.lang.String styleKey(java.lang.String,java.lang.String) -> styleKey
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
    void paintFocusBorder(java.awt.Graphics2D) -> paintFocusBorder
    void paintBorder(java.awt.Graphics2D) -> paintBorder
    void paintBackground(java.awt.Graphics2D) -> paintBackground
    void paintCheckmark(java.awt.Graphics2D) -> paintCheckmark
    void paintIndeterminate(java.awt.Graphics2D) -> paintIndeterminate
com.formdev.flatlaf.icons.FlatCheckBoxMenuItemIcon -> com.formdev.flatlaf.icons.FlatCheckBoxMenuItemIcon:
    java.awt.Color checkmarkColor -> checkmarkColor
    java.awt.Color disabledCheckmarkColor -> disabledCheckmarkColor
    java.awt.Color selectionForeground -> selectionForeground
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
    void paintCheckmark(java.awt.Graphics2D) -> paintCheckmark
    java.awt.Color getCheckmarkColor(java.awt.Component) -> getCheckmarkColor
    boolean isUnderlineSelection() -> isUnderlineSelection
com.formdev.flatlaf.icons.FlatDescendingSortIcon -> com.formdev.flatlaf.icons.FlatDescendingSortIcon:
    boolean chevron -> chevron
    java.awt.Color sortIconColor -> sortIconColor
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatFileChooserDetailsViewIcon -> com.formdev.flatlaf.icons.FlatFileChooserDetailsViewIcon:
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatFileChooserHomeFolderIcon -> com.formdev.flatlaf.icons.FlatFileChooserHomeFolderIcon:
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatFileChooserListViewIcon -> com.formdev.flatlaf.icons.FlatFileChooserListViewIcon:
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatFileChooserNewFolderIcon -> com.formdev.flatlaf.icons.FlatFileChooserNewFolderIcon:
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatFileChooserUpFolderIcon -> com.formdev.flatlaf.icons.FlatFileChooserUpFolderIcon:
    java.awt.Color blueColor -> blueColor
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatFileViewComputerIcon -> com.formdev.flatlaf.icons.FlatFileViewComputerIcon:
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatFileViewDirectoryIcon -> com.formdev.flatlaf.icons.FlatFileViewDirectoryIcon:
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatFileViewFileIcon -> com.formdev.flatlaf.icons.FlatFileViewFileIcon:
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatFileViewFloppyDriveIcon -> com.formdev.flatlaf.icons.FlatFileViewFloppyDriveIcon:
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatFileViewHardDriveIcon -> com.formdev.flatlaf.icons.FlatFileViewHardDriveIcon:
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatHelpButtonIcon -> com.formdev.flatlaf.icons.FlatHelpButtonIcon:
    int focusWidth -> focusWidth
    java.awt.Color focusColor -> focusColor
    java.awt.Color borderColor -> borderColor
    java.awt.Color disabledBorderColor -> disabledBorderColor
    java.awt.Color focusedBorderColor -> focusedBorderColor
    java.awt.Color hoverBorderColor -> hoverBorderColor
    java.awt.Color background -> background
    java.awt.Color disabledBackground -> disabledBackground
    java.awt.Color focusedBackground -> focusedBackground
    java.awt.Color hoverBackground -> hoverBackground
    java.awt.Color pressedBackground -> pressedBackground
    java.awt.Color questionMarkColor -> questionMarkColor
    java.awt.Color disabledQuestionMarkColor -> disabledQuestionMarkColor
    int iconSize -> iconSize
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
    int getIconWidth() -> getIconWidth
    int getIconHeight() -> getIconHeight
com.formdev.flatlaf.icons.FlatInternalFrameAbstractIcon -> com.formdev.flatlaf.icons.FlatInternalFrameAbstractIcon:
    java.awt.Color hoverBackground -> hoverBackground
    java.awt.Color pressedBackground -> pressedBackground
    void <init>() -> <init>
    void <init>(java.awt.Dimension,java.awt.Color,java.awt.Color) -> <init>
    void paintBackground(java.awt.Component,java.awt.Graphics2D) -> paintBackground
com.formdev.flatlaf.icons.FlatInternalFrameCloseIcon -> com.formdev.flatlaf.icons.FlatInternalFrameCloseIcon:
    java.awt.Color hoverForeground -> hoverForeground
    java.awt.Color pressedForeground -> pressedForeground
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatInternalFrameIconifyIcon -> com.formdev.flatlaf.icons.FlatInternalFrameIconifyIcon:
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatInternalFrameMaximizeIcon -> com.formdev.flatlaf.icons.FlatInternalFrameMaximizeIcon:
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatInternalFrameRestoreIcon -> com.formdev.flatlaf.icons.FlatInternalFrameRestoreIcon:
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatMenuArrowIcon -> com.formdev.flatlaf.icons.FlatMenuArrowIcon:
    boolean chevron -> chevron
    java.awt.Color arrowColor -> arrowColor
    java.awt.Color disabledArrowColor -> disabledArrowColor
    java.awt.Color selectionForeground -> selectionForeground
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
    java.awt.Color getArrowColor(java.awt.Component) -> getArrowColor
    boolean isUnderlineSelection() -> isUnderlineSelection
com.formdev.flatlaf.icons.FlatMenuItemArrowIcon -> com.formdev.flatlaf.icons.FlatMenuItemArrowIcon:
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics,int,int) -> paintIcon
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatOptionPaneAbstractIcon -> com.formdev.flatlaf.icons.FlatOptionPaneAbstractIcon:
    java.awt.Color foreground -> foreground
    void <init>(java.lang.String,java.lang.String) -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
    java.awt.Shape createOutside() -> createOutside
    java.awt.Shape createInside() -> createInside
com.formdev.flatlaf.icons.FlatOptionPaneErrorIcon -> com.formdev.flatlaf.icons.FlatOptionPaneErrorIcon:
    void <init>() -> <init>
    java.awt.Shape createOutside() -> createOutside
    java.awt.Shape createInside() -> createInside
com.formdev.flatlaf.icons.FlatOptionPaneInformationIcon -> com.formdev.flatlaf.icons.FlatOptionPaneInformationIcon:
    void <init>() -> <init>
    java.awt.Shape createOutside() -> createOutside
    java.awt.Shape createInside() -> createInside
com.formdev.flatlaf.icons.FlatOptionPaneQuestionIcon -> com.formdev.flatlaf.icons.FlatOptionPaneQuestionIcon:
    void <init>() -> <init>
    java.awt.Shape createOutside() -> createOutside
    java.awt.Shape createInside() -> createInside
com.formdev.flatlaf.icons.FlatOptionPaneWarningIcon -> com.formdev.flatlaf.icons.FlatOptionPaneWarningIcon:
    void <init>() -> <init>
    java.awt.Shape createOutside() -> createOutside
    java.awt.Shape createInside() -> createInside
com.formdev.flatlaf.icons.FlatRadioButtonIcon -> com.formdev.flatlaf.icons.FlatRadioButtonIcon:
    int centerDiameter -> centerDiameter
    void <init>() -> <init>
    void paintFocusBorder(java.awt.Graphics2D) -> paintFocusBorder
    void paintBorder(java.awt.Graphics2D) -> paintBorder
    void paintBackground(java.awt.Graphics2D) -> paintBackground
    void paintCheckmark(java.awt.Graphics2D) -> paintCheckmark
com.formdev.flatlaf.icons.FlatRadioButtonMenuItemIcon -> com.formdev.flatlaf.icons.FlatRadioButtonMenuItemIcon:
    void <init>() -> <init>
    void paintCheckmark(java.awt.Graphics2D) -> paintCheckmark
com.formdev.flatlaf.icons.FlatTreeClosedIcon -> com.formdev.flatlaf.icons.FlatTreeClosedIcon:
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatTreeCollapsedIcon -> com.formdev.flatlaf.icons.FlatTreeCollapsedIcon:
    boolean chevron -> chevron
    void <init>() -> <init>
    void <init>(java.awt.Color) -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
    void rotate(java.awt.Component,java.awt.Graphics2D) -> rotate
com.formdev.flatlaf.icons.FlatTreeExpandedIcon -> com.formdev.flatlaf.icons.FlatTreeExpandedIcon:
    void <init>() -> <init>
    void rotate(java.awt.Component,java.awt.Graphics2D) -> rotate
com.formdev.flatlaf.icons.FlatTreeLeafIcon -> com.formdev.flatlaf.icons.FlatTreeLeafIcon:
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatTreeOpenIcon -> com.formdev.flatlaf.icons.FlatTreeOpenIcon:
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
com.formdev.flatlaf.icons.FlatWindowAbstractIcon -> com.formdev.flatlaf.icons.FlatWindowAbstractIcon:
    java.awt.Color hoverBackground -> hoverBackground
    java.awt.Color pressedBackground -> pressedBackground
    void <init>() -> <init>
    void <init>(java.awt.Dimension,java.awt.Color,java.awt.Color) -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics2D) -> paintIcon
    void paintIconAt1x(java.awt.Graphics2D,int,int,int,int,double) -> paintIconAt1x
    void paintBackground(java.awt.Component,java.awt.Graphics2D) -> paintBackground
    java.awt.Color getForeground(java.awt.Component) -> getForeground
com.formdev.flatlaf.icons.FlatWindowCloseIcon -> com.formdev.flatlaf.icons.FlatWindowCloseIcon:
    java.awt.Color hoverForeground -> hoverForeground
    java.awt.Color pressedForeground -> pressedForeground
    void <init>() -> <init>
    void paintIconAt1x(java.awt.Graphics2D,int,int,int,int,double) -> paintIconAt1x
    java.awt.Color getForeground(java.awt.Component) -> getForeground
com.formdev.flatlaf.icons.FlatWindowIconifyIcon -> com.formdev.flatlaf.icons.FlatWindowIconifyIcon:
    void <init>() -> <init>
    void paintIconAt1x(java.awt.Graphics2D,int,int,int,int,double) -> paintIconAt1x
com.formdev.flatlaf.icons.FlatWindowMaximizeIcon -> com.formdev.flatlaf.icons.FlatWindowMaximizeIcon:
    void <init>() -> <init>
    void paintIconAt1x(java.awt.Graphics2D,int,int,int,int,double) -> paintIconAt1x
com.formdev.flatlaf.icons.FlatWindowRestoreIcon -> com.formdev.flatlaf.icons.FlatWindowRestoreIcon:
    void <init>() -> <init>
    void paintIconAt1x(java.awt.Graphics2D,int,int,int,int,double) -> paintIconAt1x
com.formdev.flatlaf.json.Json -> com.formdev.flatlaf.json.Json:
    void <init>() -> <init>
    java.lang.Object parse(java.io.Reader) -> parse
com.formdev.flatlaf.json.Json$DefaultHandler -> com.formdev.flatlaf.json.Json$DefaultHandler:
    java.lang.Object value -> value
    void <init>() -> <init>
    java.util.List startArray() -> startArray
    java.util.Map startObject() -> startObject
    void endNull() -> endNull
    void endBoolean(boolean) -> endBoolean
    void endString(java.lang.String) -> endString
    void endNumber(java.lang.String) -> endNumber
    void endArray(java.util.List) -> endArray
    void endObject(java.util.Map) -> endObject
    void endArrayValue(java.util.List) -> endArrayValue
    void endObjectValue(java.util.Map,java.lang.String) -> endObjectValue
    java.lang.Object getValue() -> getValue
    void endObjectValue(java.lang.Object,java.lang.String) -> endObjectValue
    void endObject(java.lang.Object) -> endObject
    java.lang.Object startObject() -> startObject
    void endArrayValue(java.lang.Object) -> endArrayValue
    void endArray(java.lang.Object) -> endArray
    java.lang.Object startArray() -> startArray
com.formdev.flatlaf.json.JsonHandler -> com.formdev.flatlaf.json.JsonHandler:
    com.formdev.flatlaf.json.JsonParser parser -> parser
    void <init>() -> <init>
    com.formdev.flatlaf.json.Location getLocation() -> getLocation
    void startNull() -> startNull
    void endNull() -> endNull
    void startBoolean() -> startBoolean
    void endBoolean(boolean) -> endBoolean
    void startString() -> startString
    void endString(java.lang.String) -> endString
    void startNumber() -> startNumber
    void endNumber(java.lang.String) -> endNumber
    java.lang.Object startArray() -> startArray
    void endArray(java.lang.Object) -> endArray
    void startArrayValue(java.lang.Object) -> startArrayValue
    void endArrayValue(java.lang.Object) -> endArrayValue
    java.lang.Object startObject() -> startObject
    void endObject(java.lang.Object) -> endObject
    void startObjectName(java.lang.Object) -> startObjectName
    void endObjectName(java.lang.Object,java.lang.String) -> endObjectName
    void startObjectValue(java.lang.Object,java.lang.String) -> startObjectValue
    void endObjectValue(java.lang.Object,java.lang.String) -> endObjectValue
com.formdev.flatlaf.json.JsonParser -> com.formdev.flatlaf.json.JsonParser:
    int MAX_NESTING_LEVEL -> MAX_NESTING_LEVEL
    int MIN_BUFFER_SIZE -> MIN_BUFFER_SIZE
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    com.formdev.flatlaf.json.JsonHandler handler -> handler
    java.io.Reader reader -> reader
    char[] buffer -> buffer
    int bufferOffset -> bufferOffset
    int index -> index
    int fill -> fill
    int line -> line
    int lineOffset -> lineOffset
    int current -> current
    java.lang.StringBuilder captureBuffer -> captureBuffer
    int captureStart -> captureStart
    int nestingLevel -> nestingLevel
    void <init>(com.formdev.flatlaf.json.JsonHandler) -> <init>
    void parse(java.lang.String) -> parse
    void parse(java.io.Reader) -> parse
    void parse(java.io.Reader,int) -> parse
    void readValue() -> readValue
    void readArray() -> readArray
    void readObject() -> readObject
    java.lang.String readName() -> readName
    void readNull() -> readNull
    void readTrue() -> readTrue
    void readFalse() -> readFalse
    void readRequiredChar(char) -> readRequiredChar
    void readString() -> readString
    java.lang.String readStringInternal() -> readStringInternal
    void readEscape() -> readEscape
    void readNumber() -> readNumber
    boolean readFraction() -> readFraction
    boolean readExponent() -> readExponent
    boolean readChar(char) -> readChar
    boolean readDigit() -> readDigit
    void skipWhiteSpace() -> skipWhiteSpace
    void read() -> read
    void startCapture() -> startCapture
    void pauseCapture() -> pauseCapture
    java.lang.String endCapture() -> endCapture
    com.formdev.flatlaf.json.Location getLocation() -> getLocation
    com.formdev.flatlaf.json.ParseException expected(java.lang.String) -> expected
    com.formdev.flatlaf.json.ParseException error(java.lang.String) -> error
    boolean isWhiteSpace() -> isWhiteSpace
    boolean isDigit() -> isDigit
    boolean isHexDigit() -> isHexDigit
    boolean isEndOfText() -> isEndOfText
com.formdev.flatlaf.json.Location -> com.formdev.flatlaf.json.Location:
    int offset -> offset
    int line -> line
    int column -> column
    void <init>(int,int,int) -> <init>
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.formdev.flatlaf.json.ParseException -> com.formdev.flatlaf.json.ParseException:
    com.formdev.flatlaf.json.Location location -> location
    void <init>(java.lang.String,com.formdev.flatlaf.json.Location) -> <init>
    com.formdev.flatlaf.json.Location getLocation() -> getLocation
    int getOffset() -> getOffset
    int getLine() -> getLine
    int getColumn() -> getColumn
com.formdev.flatlaf.ui.FlatArrowButton -> com.formdev.flatlaf.ui.FlatArrowButton:
    int DEFAULT_ARROW_WIDTH -> DEFAULT_ARROW_WIDTH
    boolean chevron -> chevron
    java.awt.Color foreground -> foreground
    java.awt.Color disabledForeground -> disabledForeground
    java.awt.Color hoverForeground -> hoverForeground
    java.awt.Color hoverBackground -> hoverBackground
    java.awt.Color pressedBackground -> pressedBackground
    int arrowWidth -> arrowWidth
    int xOffset -> xOffset
    int yOffset -> yOffset
    boolean hover -> hover
    boolean pressed -> pressed
    void <init>(int,java.lang.String,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color) -> <init>
    void <init>(int,java.lang.String,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color) -> <init>
    int getArrowWidth() -> getArrowWidth
    void setArrowWidth(int) -> setArrowWidth
    boolean isHover() -> isHover
    boolean isPressed() -> isPressed
    int getXOffset() -> getXOffset
    void setXOffset(int) -> setXOffset
    int getYOffset() -> getYOffset
    void setYOffset(int) -> setYOffset
    java.awt.Color deriveBackground(java.awt.Color) -> deriveBackground
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    java.awt.Dimension getMinimumSize() -> getMinimumSize
    void paint(java.awt.Graphics) -> paint
    java.awt.Shape createArrowShape(int,boolean,float,float) -> createArrowShape
    boolean access$002(com.formdev.flatlaf.ui.FlatArrowButton,boolean) -> access$002
    boolean access$102(com.formdev.flatlaf.ui.FlatArrowButton,boolean) -> access$102
com.formdev.flatlaf.ui.FlatArrowButton$1 -> com.formdev.flatlaf.ui.FlatArrowButton$1:
    com.formdev.flatlaf.ui.FlatArrowButton this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatArrowButton) -> <init>
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
com.formdev.flatlaf.ui.FlatBorder -> com.formdev.flatlaf.ui.FlatBorder:
    int focusWidth -> focusWidth
    float innerFocusWidth -> innerFocusWidth
    float innerOutlineWidth -> innerOutlineWidth
    java.awt.Color focusColor -> focusColor
    java.awt.Color borderColor -> borderColor
    java.awt.Color disabledBorderColor -> disabledBorderColor
    java.awt.Color focusedBorderColor -> focusedBorderColor
    java.awt.Color errorBorderColor -> errorBorderColor
    java.awt.Color errorFocusedBorderColor -> errorFocusedBorderColor
    java.awt.Color warningBorderColor -> warningBorderColor
    java.awt.Color warningFocusedBorderColor -> warningFocusedBorderColor
    java.awt.Color customBorderColor -> customBorderColor
    void <init>() -> <init>
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
    java.awt.Color getOutlineColor(java.awt.Component) -> getOutlineColor
    java.awt.Color getFocusColor(java.awt.Component) -> getFocusColor
    java.awt.Paint getBorderColor(java.awt.Component) -> getBorderColor
    boolean isEnabled(java.awt.Component) -> isEnabled
    boolean isFocused(java.awt.Component) -> isFocused
    boolean isCellEditor(java.awt.Component) -> isCellEditor
    java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets) -> getBorderInsets
    int getFocusWidth(java.awt.Component) -> getFocusWidth
    int getLineWidth(java.awt.Component) -> getLineWidth
    int getBorderWidth(java.awt.Component) -> getBorderWidth
    int getArc(java.awt.Component) -> getArc
com.formdev.flatlaf.ui.FlatButtonBorder -> com.formdev.flatlaf.ui.FlatButtonBorder:
    java.awt.Color borderColor -> borderColor
    java.awt.Color endBorderColor -> endBorderColor
    java.awt.Color disabledBorderColor -> disabledBorderColor
    java.awt.Color focusedBorderColor -> focusedBorderColor
    java.awt.Color hoverBorderColor -> hoverBorderColor
    java.awt.Color defaultBorderColor -> defaultBorderColor
    java.awt.Color defaultEndBorderColor -> defaultEndBorderColor
    java.awt.Color defaultHoverBorderColor -> defaultHoverBorderColor
    java.awt.Color defaultFocusedBorderColor -> defaultFocusedBorderColor
    java.awt.Color defaultFocusColor -> defaultFocusColor
    int borderWidth -> borderWidth
    int defaultBorderWidth -> defaultBorderWidth
    java.awt.Insets toolbarMargin -> toolbarMargin
    java.awt.Insets toolbarSpacingInsets -> toolbarSpacingInsets
    int arc -> arc
    void <init>() -> <init>
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
    java.awt.Color getFocusColor(java.awt.Component) -> getFocusColor
    boolean isFocused(java.awt.Component) -> isFocused
    java.awt.Paint getBorderColor(java.awt.Component) -> getBorderColor
    java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets) -> getBorderInsets
    int getFocusWidth(java.awt.Component) -> getFocusWidth
    int getBorderWidth(java.awt.Component) -> getBorderWidth
    int getArc(java.awt.Component) -> getArc
com.formdev.flatlaf.ui.FlatButtonUI -> com.formdev.flatlaf.ui.FlatButtonUI:
    int minimumWidth -> minimumWidth
    int iconTextGap -> iconTextGap
    java.awt.Color background -> background
    java.awt.Color foreground -> foreground
    java.awt.Color startBackground -> startBackground
    java.awt.Color endBackground -> endBackground
    java.awt.Color focusedBackground -> focusedBackground
    java.awt.Color hoverBackground -> hoverBackground
    java.awt.Color pressedBackground -> pressedBackground
    java.awt.Color selectedBackground -> selectedBackground
    java.awt.Color selectedForeground -> selectedForeground
    java.awt.Color disabledBackground -> disabledBackground
    java.awt.Color disabledText -> disabledText
    java.awt.Color disabledSelectedBackground -> disabledSelectedBackground
    java.awt.Color defaultBackground -> defaultBackground
    java.awt.Color defaultEndBackground -> defaultEndBackground
    java.awt.Color defaultForeground -> defaultForeground
    java.awt.Color defaultFocusedBackground -> defaultFocusedBackground
    java.awt.Color defaultHoverBackground -> defaultHoverBackground
    java.awt.Color defaultPressedBackground -> defaultPressedBackground
    boolean defaultBoldText -> defaultBoldText
    int shadowWidth -> shadowWidth
    java.awt.Color shadowColor -> shadowColor
    java.awt.Color defaultShadowColor -> defaultShadowColor
    java.awt.Insets toolbarSpacingInsets -> toolbarSpacingInsets
    java.awt.Color toolbarHoverBackground -> toolbarHoverBackground
    java.awt.Color toolbarPressedBackground -> toolbarPressedBackground
    java.awt.Color toolbarSelectedBackground -> toolbarSelectedBackground
    javax.swing.Icon helpButtonIcon -> helpButtonIcon
    boolean defaults_initialized -> defaults_initialized
    javax.swing.plaf.ComponentUI instance -> instance
    int TYPE_OTHER -> TYPE_OTHER
    int TYPE_SQUARE -> TYPE_SQUARE
    int TYPE_ROUND_RECT -> TYPE_ROUND_RECT
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults(javax.swing.AbstractButton) -> installDefaults
    void uninstallDefaults(javax.swing.AbstractButton) -> uninstallDefaults
    javax.swing.plaf.basic.BasicButtonListener createButtonListener(javax.swing.AbstractButton) -> createButtonListener
    void propertyChange(javax.swing.AbstractButton,java.beans.PropertyChangeEvent) -> propertyChange
    boolean isContentAreaFilled(java.awt.Component) -> isContentAreaFilled
    boolean isFocusPainted(java.awt.Component) -> isFocusPainted
    boolean isDefaultButton(java.awt.Component) -> isDefaultButton
    boolean isIconOnlyOrSingleCharacterButton(java.awt.Component) -> isIconOnlyOrSingleCharacterButton
    int getButtonType(java.awt.Component) -> getButtonType
    boolean isHelpButton(java.awt.Component) -> isHelpButton
    boolean isToolBarButton(java.awt.Component) -> isToolBarButton
    void update(java.awt.Graphics,javax.swing.JComponent) -> update
    void paintBackground(java.awt.Graphics,javax.swing.JComponent) -> paintBackground
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    void paintText(java.awt.Graphics,javax.swing.AbstractButton,java.awt.Rectangle,java.lang.String) -> paintText
    void paintText(java.awt.Graphics,javax.swing.AbstractButton,java.awt.Rectangle,java.lang.String,java.awt.Color) -> paintText
    java.awt.Color getBackground(javax.swing.JComponent) -> getBackground
    java.awt.Color getBackgroundBase(javax.swing.JComponent,boolean) -> getBackgroundBase
    boolean isCustomBackground(java.awt.Color) -> isCustomBackground
    java.awt.Color buttonStateColor(java.awt.Component,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color) -> buttonStateColor
    java.awt.Color getForeground(javax.swing.JComponent) -> getForeground
    boolean isCustomForeground(java.awt.Color) -> isCustomForeground
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
com.formdev.flatlaf.ui.FlatButtonUI$FlatButtonListener -> com.formdev.flatlaf.ui.FlatButtonUI$FlatButtonListener:
    javax.swing.AbstractButton b -> b
    com.formdev.flatlaf.ui.FlatButtonUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatButtonUI,javax.swing.AbstractButton) -> <init>
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
com.formdev.flatlaf.ui.FlatCaret -> com.formdev.flatlaf.ui.FlatCaret:
    java.lang.String selectAllOnFocusPolicy -> selectAllOnFocusPolicy
    boolean wasFocused -> wasFocused
    boolean wasTemporaryLost -> wasTemporaryLost
    boolean isMousePressed -> isMousePressed
    void <init>(java.lang.String) -> <init>
    void install(javax.swing.text.JTextComponent) -> install
    void focusGained(java.awt.event.FocusEvent) -> focusGained
    void focusLost(java.awt.event.FocusEvent) -> focusLost
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void selectAllOnFocusGained() -> selectAllOnFocusGained
    void lambda$selectAllOnFocusGained$0(javax.swing.text.Document) -> lambda$selectAllOnFocusGained$0
com.formdev.flatlaf.ui.FlatCheckBoxMenuItemUI -> com.formdev.flatlaf.ui.FlatCheckBoxMenuItemUI:
    com.formdev.flatlaf.ui.FlatMenuItemRenderer renderer -> renderer
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    void uninstallDefaults() -> uninstallDefaults
    com.formdev.flatlaf.ui.FlatMenuItemRenderer createRenderer() -> createRenderer
    java.awt.Dimension getPreferredMenuItemSize(javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,int) -> getPreferredMenuItemSize
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
com.formdev.flatlaf.ui.FlatCheckBoxUI -> com.formdev.flatlaf.ui.FlatCheckBoxUI:
    javax.swing.plaf.ComponentUI instance -> instance
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    java.lang.String getPropertyPrefix() -> getPropertyPrefix
com.formdev.flatlaf.ui.FlatColorChooserUI -> com.formdev.flatlaf.ui.FlatColorChooserUI:
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
com.formdev.flatlaf.ui.FlatComboBoxUI -> com.formdev.flatlaf.ui.FlatComboBoxUI:
    int minimumWidth -> minimumWidth
    int editorColumns -> editorColumns
    java.lang.String buttonStyle -> buttonStyle
    java.lang.String arrowType -> arrowType
    boolean isIntelliJTheme -> isIntelliJTheme
    java.awt.Color borderColor -> borderColor
    java.awt.Color disabledBorderColor -> disabledBorderColor
    java.awt.Color editableBackground -> editableBackground
    java.awt.Color disabledBackground -> disabledBackground
    java.awt.Color disabledForeground -> disabledForeground
    java.awt.Color buttonBackground -> buttonBackground
    java.awt.Color buttonEditableBackground -> buttonEditableBackground
    java.awt.Color buttonArrowColor -> buttonArrowColor
    java.awt.Color buttonDisabledArrowColor -> buttonDisabledArrowColor
    java.awt.Color buttonHoverArrowColor -> buttonHoverArrowColor
    java.awt.event.MouseListener hoverListener -> hoverListener
    boolean hover -> hover
    java.lang.ref.WeakReference lastRendererComponent -> lastRendererComponent
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installListeners() -> installListeners
    void uninstallListeners() -> uninstallListeners
    void installDefaults() -> installDefaults
    void uninstallDefaults() -> uninstallDefaults
    java.awt.LayoutManager createLayoutManager() -> createLayoutManager
    java.awt.event.FocusListener createFocusListener() -> createFocusListener
    java.beans.PropertyChangeListener createPropertyChangeListener() -> createPropertyChangeListener
    javax.swing.plaf.basic.ComboPopup createPopup() -> createPopup
    javax.swing.ComboBoxEditor createEditor() -> createEditor
    void configureEditor() -> configureEditor
    void updateEditorColors() -> updateEditorColors
    javax.swing.JButton createArrowButton() -> createArrowButton
    void update(java.awt.Graphics,javax.swing.JComponent) -> update
    void paintCurrentValue(java.awt.Graphics,java.awt.Rectangle,boolean) -> paintCurrentValue
    void paintCurrentValueBackground(java.awt.Graphics,java.awt.Rectangle,boolean) -> paintCurrentValueBackground
    java.awt.Color getBackground(boolean) -> getBackground
    java.awt.Color getForeground(boolean) -> getForeground
    java.awt.Dimension getMinimumSize(javax.swing.JComponent) -> getMinimumSize
    java.awt.Dimension getDefaultSize() -> getDefaultSize
    java.awt.Dimension getDisplaySize() -> getDisplaySize
    java.awt.Dimension getSizeForComponent(java.awt.Component) -> getSizeForComponent
    java.awt.Insets getRendererComponentInsets(java.awt.Component) -> getRendererComponentInsets
    void uninstallCellPaddingBorder(java.lang.Object) -> uninstallCellPaddingBorder
    void lambda$installListeners$0(java.lang.Boolean) -> lambda$installListeners$0
    java.awt.Component access$000(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$000
    java.awt.Insets access$100(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$100
    java.awt.Component access$200(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$200
    java.awt.Insets access$300(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$300
    java.awt.Component access$400(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$400
    javax.swing.JComboBox access$500(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$500
    javax.swing.JComboBox access$600(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$600
    javax.swing.JComboBox access$700(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$700
    javax.swing.JComboBox access$800(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$800
    javax.swing.JComboBox access$900(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$900
    javax.swing.JComboBox access$1000(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$1000
    java.awt.Component access$1100(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$1100
    javax.swing.JComboBox access$1200(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$1200
    java.awt.Component access$1300(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$1300
    void access$1400(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$1400
    java.awt.Component access$1500(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$1500
    javax.swing.JComboBox access$1600(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$1600
    java.awt.Component access$1700(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$1700
    java.awt.Component access$1800(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$1800
    java.awt.Component access$1900(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$1900
    javax.swing.JComboBox access$2000(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$2000
    javax.swing.JComboBox access$2100(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$2100
    javax.swing.JComboBox access$2200(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$2200
    java.lang.ref.WeakReference access$2600(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$2600
    java.awt.Insets access$2900(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$2900
    java.lang.ref.WeakReference access$2602(com.formdev.flatlaf.ui.FlatComboBoxUI,java.lang.ref.WeakReference) -> access$2602
    javax.swing.JComboBox access$3000(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$3000
    javax.swing.JComboBox access$3100(com.formdev.flatlaf.ui.FlatComboBoxUI) -> access$3100
com.formdev.flatlaf.ui.FlatComboBoxUI$1 -> com.formdev.flatlaf.ui.FlatComboBoxUI$1:
    com.formdev.flatlaf.ui.FlatComboBoxUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatComboBoxUI) -> <init>
    void layoutContainer(java.awt.Container) -> layoutContainer
com.formdev.flatlaf.ui.FlatComboBoxUI$2 -> com.formdev.flatlaf.ui.FlatComboBoxUI$2:
    com.formdev.flatlaf.ui.FlatComboBoxUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatComboBoxUI) -> <init>
    void focusGained(java.awt.event.FocusEvent) -> focusGained
    void focusLost(java.awt.event.FocusEvent) -> focusLost
com.formdev.flatlaf.ui.FlatComboBoxUI$3 -> com.formdev.flatlaf.ui.FlatComboBoxUI$3:
    com.formdev.flatlaf.ui.FlatComboBoxUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatComboBoxUI) -> <init>
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
com.formdev.flatlaf.ui.FlatComboBoxUI$CellPaddingBorder -> com.formdev.flatlaf.ui.FlatComboBoxUI$CellPaddingBorder:
    java.awt.Insets padding -> padding
    javax.swing.border.Border rendererBorder -> rendererBorder
    void <init>(java.awt.Insets) -> <init>
    void install(javax.swing.JComponent) -> install
    void uninstall(java.lang.Object) -> uninstall
    java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets) -> getBorderInsets
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
com.formdev.flatlaf.ui.FlatComboBoxUI$EditorDelegateAction -> com.formdev.flatlaf.ui.FlatComboBoxUI$EditorDelegateAction:
    javax.swing.KeyStroke keyStroke -> keyStroke
    com.formdev.flatlaf.ui.FlatComboBoxUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatComboBoxUI,javax.swing.InputMap,javax.swing.KeyStroke) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboBoxButton -> com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboBoxButton:
    com.formdev.flatlaf.ui.FlatComboBoxUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatComboBoxUI) -> <init>
    void <init>(com.formdev.flatlaf.ui.FlatComboBoxUI,int,java.lang.String,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color) -> <init>
    boolean isHover() -> isHover
com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup -> com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup:
    com.formdev.flatlaf.ui.FlatComboBoxUI$CellPaddingBorder paddingBorder -> paddingBorder
    com.formdev.flatlaf.ui.FlatComboBoxUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatComboBoxUI,javax.swing.JComboBox) -> <init>
    java.awt.Rectangle computePopupBounds(int,int,int,int) -> computePopupBounds
    void configurePopup() -> configurePopup
    void configureList() -> configureList
    java.beans.PropertyChangeListener createPropertyChangeListener() -> createPropertyChangeListener
    javax.swing.JList access$2400(com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup) -> access$2400
    javax.swing.JComboBox access$2500(com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup) -> access$2500
    javax.swing.JComboBox access$2700(com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup) -> access$2700
    com.formdev.flatlaf.ui.FlatComboBoxUI$CellPaddingBorder access$2800(com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup) -> access$2800
    com.formdev.flatlaf.ui.FlatComboBoxUI$CellPaddingBorder access$2802(com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup,com.formdev.flatlaf.ui.FlatComboBoxUI$CellPaddingBorder) -> access$2802
com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup$1 -> com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup$1:
    com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup this$1 -> this$1
    void <init>(com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup) -> <init>
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup$PopupListCellRenderer -> com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup$PopupListCellRenderer:
    com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup this$1 -> this$1
    void <init>(com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup) -> <init>
    java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) -> getListCellRendererComponent
    void <init>(com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup,com.formdev.flatlaf.ui.FlatComboBoxUI$1) -> <init>
com.formdev.flatlaf.ui.FlatDesktopIconUI -> com.formdev.flatlaf.ui.FlatDesktopIconUI:
    java.awt.Dimension iconSize -> iconSize
    java.awt.Dimension closeSize -> closeSize
    javax.swing.JLabel dockIcon -> dockIcon
    javax.swing.JButton closeButton -> closeButton
    javax.swing.JToolTip titleTip -> titleTip
    java.awt.event.ActionListener closeListener -> closeListener
    javax.swing.event.MouseInputListener mouseInputListener -> mouseInputListener
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void uninstallUI(javax.swing.JComponent) -> uninstallUI
    void installComponents() -> installComponents
    void uninstallComponents() -> uninstallComponents
    void installDefaults() -> installDefaults
    void installListeners() -> installListeners
    void uninstallListeners() -> uninstallListeners
    javax.swing.event.MouseInputListener createMouseInputListener() -> createMouseInputListener
    void showTitleTip() -> showTitleTip
    void hideTitleTip() -> hideTitleTip
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
    java.awt.Dimension getMinimumSize(javax.swing.JComponent) -> getMinimumSize
    java.awt.Dimension getMaximumSize(javax.swing.JComponent) -> getMaximumSize
    void updateDockIcon() -> updateDockIcon
    void updateDockIconLater() -> updateDockIconLater
    void lambda$updateDockIcon$1() -> lambda$updateDockIcon$1
    void lambda$installListeners$0(java.awt.event.ActionEvent) -> lambda$installListeners$0
    javax.swing.JInternalFrame access$100(com.formdev.flatlaf.ui.FlatDesktopIconUI) -> access$100
    javax.swing.JInternalFrame$JDesktopIcon access$200(com.formdev.flatlaf.ui.FlatDesktopIconUI) -> access$200
    void access$300(com.formdev.flatlaf.ui.FlatDesktopIconUI) -> access$300
    javax.swing.JButton access$400(com.formdev.flatlaf.ui.FlatDesktopIconUI) -> access$400
    javax.swing.JInternalFrame access$500(com.formdev.flatlaf.ui.FlatDesktopIconUI) -> access$500
    void access$600(com.formdev.flatlaf.ui.FlatDesktopIconUI) -> access$600
    javax.swing.JInternalFrame access$700(com.formdev.flatlaf.ui.FlatDesktopIconUI) -> access$700
    javax.swing.JLabel access$800(com.formdev.flatlaf.ui.FlatDesktopIconUI) -> access$800
    java.awt.Dimension access$900(com.formdev.flatlaf.ui.FlatDesktopIconUI) -> access$900
com.formdev.flatlaf.ui.FlatDesktopIconUI$1 -> com.formdev.flatlaf.ui.FlatDesktopIconUI$1:
    com.formdev.flatlaf.ui.FlatDesktopIconUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatDesktopIconUI) -> <init>
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
com.formdev.flatlaf.ui.FlatDesktopIconUI$FlatDesktopIconLayout -> com.formdev.flatlaf.ui.FlatDesktopIconUI$FlatDesktopIconLayout:
    com.formdev.flatlaf.ui.FlatDesktopIconUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatDesktopIconUI) -> <init>
    void addLayoutComponent(java.lang.String,java.awt.Component) -> addLayoutComponent
    void removeLayoutComponent(java.awt.Component) -> removeLayoutComponent
    java.awt.Dimension preferredLayoutSize(java.awt.Container) -> preferredLayoutSize
    java.awt.Dimension minimumLayoutSize(java.awt.Container) -> minimumLayoutSize
    void layoutContainer(java.awt.Container) -> layoutContainer
    void <init>(com.formdev.flatlaf.ui.FlatDesktopIconUI,com.formdev.flatlaf.ui.FlatDesktopIconUI$1) -> <init>
com.formdev.flatlaf.ui.FlatDesktopPaneUI -> com.formdev.flatlaf.ui.FlatDesktopPaneUI:
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDesktopManager() -> installDesktopManager
com.formdev.flatlaf.ui.FlatDesktopPaneUI$1 -> com.formdev.flatlaf.ui.FlatDesktopPaneUI$1:
com.formdev.flatlaf.ui.FlatDesktopPaneUI$FlatDesktopManager -> com.formdev.flatlaf.ui.FlatDesktopPaneUI$FlatDesktopManager:
    com.formdev.flatlaf.ui.FlatDesktopPaneUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatDesktopPaneUI) -> <init>
    void iconifyFrame(javax.swing.JInternalFrame) -> iconifyFrame
    void <init>(com.formdev.flatlaf.ui.FlatDesktopPaneUI,com.formdev.flatlaf.ui.FlatDesktopPaneUI$1) -> <init>
com.formdev.flatlaf.ui.FlatDropShadowBorder -> com.formdev.flatlaf.ui.FlatDropShadowBorder:
    java.awt.Color shadowColor -> shadowColor
    java.awt.Insets shadowInsets -> shadowInsets
    float shadowOpacity -> shadowOpacity
    int shadowSize -> shadowSize
    java.awt.Image shadowImage -> shadowImage
    java.awt.Color lastShadowColor -> lastShadowColor
    double lastSystemScaleFactor -> lastSystemScaleFactor
    float lastUserScaleFactor -> lastUserScaleFactor
    void <init>() -> <init>
    void <init>(java.awt.Color) -> <init>
    void <init>(java.awt.Color,int,float) -> <init>
    void <init>(java.awt.Color,java.awt.Insets,float) -> <init>
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
    void paintImpl(java.awt.Graphics2D,int,int,int,int,double) -> paintImpl
    int scale(int,double) -> scale
    java.awt.image.BufferedImage createShadowImage(java.awt.Color,int,float,float) -> createShadowImage
com.formdev.flatlaf.ui.FlatEditorPaneUI -> com.formdev.flatlaf.ui.FlatEditorPaneUI:
    int minimumWidth -> minimumWidth
    boolean isIntelliJTheme -> isIntelliJTheme
    java.lang.Object oldHonorDisplayProperties -> oldHonorDisplayProperties
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    void uninstallDefaults() -> uninstallDefaults
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
    void propertyChange(javax.swing.text.JTextComponent,java.beans.PropertyChangeEvent) -> propertyChange
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
    java.awt.Dimension getMinimumSize(javax.swing.JComponent) -> getMinimumSize
    java.awt.Dimension applyMinimumWidth(javax.swing.JComponent,java.awt.Dimension,int) -> applyMinimumWidth
    void paintSafely(java.awt.Graphics) -> paintSafely
    void paintBackground(java.awt.Graphics) -> paintBackground
com.formdev.flatlaf.ui.FlatEmptyBorder -> com.formdev.flatlaf.ui.FlatEmptyBorder:
    void <init>() -> <init>
    void <init>(int,int,int,int) -> <init>
    void <init>(java.awt.Insets) -> <init>
    java.awt.Insets getBorderInsets() -> getBorderInsets
    java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets) -> getBorderInsets
    java.awt.Insets getUnscaledBorderInsets() -> getUnscaledBorderInsets
com.formdev.flatlaf.ui.FlatFileChooserUI -> com.formdev.flatlaf.ui.FlatFileChooserUI:
    com.formdev.flatlaf.ui.FlatFileChooserUI$FlatFileView fileView -> fileView
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void <init>(javax.swing.JFileChooser) -> <init>
    void installComponents(javax.swing.JFileChooser) -> installComponents
    void patchUI(javax.swing.JFileChooser) -> patchUI
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
    java.awt.Dimension getMinimumSize(javax.swing.JComponent) -> getMinimumSize
    javax.swing.filechooser.FileView getFileView(javax.swing.JFileChooser) -> getFileView
    void clearIconCache() -> clearIconCache
com.formdev.flatlaf.ui.FlatFileChooserUI$1 -> com.formdev.flatlaf.ui.FlatFileChooserUI$1:
com.formdev.flatlaf.ui.FlatFileChooserUI$FlatFileView -> com.formdev.flatlaf.ui.FlatFileChooserUI$FlatFileView:
    com.formdev.flatlaf.ui.FlatFileChooserUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatFileChooserUI) -> <init>
    javax.swing.Icon getIcon(java.io.File) -> getIcon
    void <init>(com.formdev.flatlaf.ui.FlatFileChooserUI,com.formdev.flatlaf.ui.FlatFileChooserUI$1) -> <init>
com.formdev.flatlaf.ui.FlatFormattedTextFieldUI -> com.formdev.flatlaf.ui.FlatFormattedTextFieldUI:
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    java.lang.String getPropertyPrefix() -> getPropertyPrefix
com.formdev.flatlaf.ui.FlatInternalFrameTitlePane -> com.formdev.flatlaf.ui.FlatInternalFrameTitlePane:
    javax.swing.JLabel titleLabel -> titleLabel
    javax.swing.JPanel buttonPanel -> buttonPanel
    void <init>(javax.swing.JInternalFrame) -> <init>
    void installDefaults() -> installDefaults
    java.beans.PropertyChangeListener createPropertyChangeListener() -> createPropertyChangeListener
    java.awt.LayoutManager createLayout() -> createLayout
    void createButtons() -> createButtons
    void addSubComponents() -> addSubComponents
    void updateFrameIcon() -> updateFrameIcon
    void updateColors() -> updateColors
    void updateButtonsVisibility() -> updateButtonsVisibility
    void assembleSystemMenu() -> assembleSystemMenu
    void showSystemMenu() -> showSystemMenu
    void paintComponent(java.awt.Graphics) -> paintComponent
    javax.swing.JButton access$000(com.formdev.flatlaf.ui.FlatInternalFrameTitlePane) -> access$000
    javax.swing.JButton access$100(com.formdev.flatlaf.ui.FlatInternalFrameTitlePane) -> access$100
    javax.swing.JButton access$200(com.formdev.flatlaf.ui.FlatInternalFrameTitlePane) -> access$200
    javax.swing.JButton access$300(com.formdev.flatlaf.ui.FlatInternalFrameTitlePane) -> access$300
    javax.swing.JButton access$400(com.formdev.flatlaf.ui.FlatInternalFrameTitlePane) -> access$400
    javax.swing.JButton access$500(com.formdev.flatlaf.ui.FlatInternalFrameTitlePane) -> access$500
    javax.swing.JInternalFrame access$600(com.formdev.flatlaf.ui.FlatInternalFrameTitlePane) -> access$600
    javax.swing.JLabel access$700(com.formdev.flatlaf.ui.FlatInternalFrameTitlePane) -> access$700
    void access$800(com.formdev.flatlaf.ui.FlatInternalFrameTitlePane) -> access$800
    javax.swing.JInternalFrame access$900(com.formdev.flatlaf.ui.FlatInternalFrameTitlePane) -> access$900
com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$1 -> com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$1:
    com.formdev.flatlaf.ui.FlatInternalFrameTitlePane this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatInternalFrameTitlePane) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$FlatPropertyChangeHandler -> com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$FlatPropertyChangeHandler:
    com.formdev.flatlaf.ui.FlatInternalFrameTitlePane this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatInternalFrameTitlePane) -> <init>
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
com.formdev.flatlaf.ui.FlatInternalFrameUI -> com.formdev.flatlaf.ui.FlatInternalFrameUI:
    com.formdev.flatlaf.ui.FlatWindowResizer windowResizer -> windowResizer
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void <init>(javax.swing.JInternalFrame) -> <init>
    void installUI(javax.swing.JComponent) -> installUI
    void uninstallUI(javax.swing.JComponent) -> uninstallUI
    javax.swing.JComponent createNorthPane(javax.swing.JInternalFrame) -> createNorthPane
    com.formdev.flatlaf.ui.FlatWindowResizer createWindowResizer() -> createWindowResizer
com.formdev.flatlaf.ui.FlatInternalFrameUI$FlatInternalFrameBorder -> com.formdev.flatlaf.ui.FlatInternalFrameUI$FlatInternalFrameBorder:
    java.awt.Color activeBorderColor -> activeBorderColor
    java.awt.Color inactiveBorderColor -> inactiveBorderColor
    int borderLineWidth -> borderLineWidth
    boolean dropShadowPainted -> dropShadowPainted
    com.formdev.flatlaf.ui.FlatDropShadowBorder activeDropShadowBorder -> activeDropShadowBorder
    com.formdev.flatlaf.ui.FlatDropShadowBorder inactiveDropShadowBorder -> inactiveDropShadowBorder
    void <init>() -> <init>
    java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets) -> getBorderInsets
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
com.formdev.flatlaf.ui.FlatLabelUI -> com.formdev.flatlaf.ui.FlatLabelUI:
    java.awt.Color disabledForeground -> disabledForeground
    boolean defaults_initialized -> defaults_initialized
    javax.swing.plaf.ComponentUI instance -> instance
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults(javax.swing.JLabel) -> installDefaults
    void uninstallDefaults(javax.swing.JLabel) -> uninstallDefaults
    void installComponents(javax.swing.JLabel) -> installComponents
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
    void updateHTMLRenderer(javax.swing.JComponent,java.lang.String,boolean) -> updateHTMLRenderer
    java.awt.Graphics createGraphicsHTMLTextYCorrection(java.awt.Graphics,javax.swing.JComponent) -> createGraphicsHTMLTextYCorrection
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    void paintEnabledText(javax.swing.JLabel,java.awt.Graphics,java.lang.String,int,int) -> paintEnabledText
    void paintDisabledText(javax.swing.JLabel,java.awt.Graphics,java.lang.String,int,int) -> paintDisabledText
    java.lang.String layoutCL(javax.swing.JLabel,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle) -> layoutCL
com.formdev.flatlaf.ui.FlatLineBorder -> com.formdev.flatlaf.ui.FlatLineBorder:
    java.awt.Color lineColor -> lineColor
    float lineThickness -> lineThickness
    void <init>(java.awt.Insets,java.awt.Color) -> <init>
    void <init>(java.awt.Insets,java.awt.Color,float) -> <init>
    java.awt.Color getLineColor() -> getLineColor
    float getLineThickness() -> getLineThickness
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
com.formdev.flatlaf.ui.FlatListCellBorder -> com.formdev.flatlaf.ui.FlatListCellBorder:
    boolean showCellFocusIndicator -> showCellFocusIndicator
    void <init>() -> <init>
com.formdev.flatlaf.ui.FlatListCellBorder$Default -> com.formdev.flatlaf.ui.FlatListCellBorder$Default:
    void <init>() -> <init>
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
com.formdev.flatlaf.ui.FlatListCellBorder$Focused -> com.formdev.flatlaf.ui.FlatListCellBorder$Focused:
    void <init>() -> <init>
com.formdev.flatlaf.ui.FlatListCellBorder$Selected -> com.formdev.flatlaf.ui.FlatListCellBorder$Selected:
    void <init>() -> <init>
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
com.formdev.flatlaf.ui.FlatListUI -> com.formdev.flatlaf.ui.FlatListUI:
    java.awt.Color selectionBackground -> selectionBackground
    java.awt.Color selectionForeground -> selectionForeground
    java.awt.Color selectionInactiveBackground -> selectionInactiveBackground
    java.awt.Color selectionInactiveForeground -> selectionInactiveForeground
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    void uninstallDefaults() -> uninstallDefaults
    java.awt.event.FocusListener createFocusListener() -> createFocusListener
    void toggleSelectionColors() -> toggleSelectionColors
    void access$000(com.formdev.flatlaf.ui.FlatListUI) -> access$000
com.formdev.flatlaf.ui.FlatListUI$1 -> com.formdev.flatlaf.ui.FlatListUI$1:
    com.formdev.flatlaf.ui.FlatListUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatListUI) -> <init>
    void focusGained(java.awt.event.FocusEvent) -> focusGained
    void focusLost(java.awt.event.FocusEvent) -> focusLost
    void lambda$focusLost$0() -> lambda$focusLost$0
com.formdev.flatlaf.ui.FlatMarginBorder -> com.formdev.flatlaf.ui.FlatMarginBorder:
    int left -> left
    int right -> right
    int top -> top
    int bottom -> bottom
    void <init>() -> <init>
    void <init>(java.awt.Insets) -> <init>
    java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets) -> getBorderInsets
com.formdev.flatlaf.ui.FlatMenuBarBorder -> com.formdev.flatlaf.ui.FlatMenuBarBorder:
    java.awt.Color borderColor -> borderColor
    void <init>() -> <init>
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
    java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets) -> getBorderInsets
com.formdev.flatlaf.ui.FlatMenuBarUI -> com.formdev.flatlaf.ui.FlatMenuBarUI:
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installKeyboardActions() -> installKeyboardActions
com.formdev.flatlaf.ui.FlatMenuBarUI$1 -> com.formdev.flatlaf.ui.FlatMenuBarUI$1:
com.formdev.flatlaf.ui.FlatMenuBarUI$TakeFocus -> com.formdev.flatlaf.ui.FlatMenuBarUI$TakeFocus:
    void <init>() -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void <init>(com.formdev.flatlaf.ui.FlatMenuBarUI$1) -> <init>
com.formdev.flatlaf.ui.FlatMenuItemBorder -> com.formdev.flatlaf.ui.FlatMenuItemBorder:
    java.awt.Insets menuBarItemMargins -> menuBarItemMargins
    void <init>() -> <init>
    java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets) -> getBorderInsets
com.formdev.flatlaf.ui.FlatMenuItemRenderer -> com.formdev.flatlaf.ui.FlatMenuItemRenderer:
    javax.swing.JMenuItem menuItem -> menuItem
    javax.swing.Icon checkIcon -> checkIcon
    javax.swing.Icon arrowIcon -> arrowIcon
    java.awt.Font acceleratorFont -> acceleratorFont
    java.lang.String acceleratorDelimiter -> acceleratorDelimiter
    int minimumWidth -> minimumWidth
    java.awt.Dimension minimumIconSize -> minimumIconSize
    int textAcceleratorGap -> textAcceleratorGap
    int textNoAcceleratorGap -> textNoAcceleratorGap
    int acceleratorArrowGap -> acceleratorArrowGap
    java.awt.Color checkBackground -> checkBackground
    java.awt.Insets checkMargins -> checkMargins
    java.awt.Color underlineSelectionBackground -> underlineSelectionBackground
    java.awt.Color underlineSelectionCheckBackground -> underlineSelectionCheckBackground
    java.awt.Color underlineSelectionColor -> underlineSelectionColor
    int underlineSelectionHeight -> underlineSelectionHeight
    javax.swing.KeyStroke cachedAccelerator -> cachedAccelerator
    java.lang.String cachedAcceleratorText -> cachedAcceleratorText
    boolean cachedAcceleratorLeftToRight -> cachedAcceleratorLeftToRight
    char controlGlyph -> controlGlyph
    char optionGlyph -> optionGlyph
    char shiftGlyph -> shiftGlyph
    char commandGlyph -> commandGlyph
    void <init>(javax.swing.JMenuItem,javax.swing.Icon,javax.swing.Icon,java.awt.Font,java.lang.String) -> <init>
    java.awt.Dimension getPreferredMenuItemSize() -> getPreferredMenuItemSize
    void layout(java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle) -> layout
    int centerOffset(int,int) -> centerOffset
    void paintMenuItem(java.awt.Graphics,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color) -> paintMenuItem
    void paintBackground(java.awt.Graphics,java.awt.Color) -> paintBackground
    java.awt.Color deriveBackground(java.awt.Color) -> deriveBackground
    void paintIcon(java.awt.Graphics,java.awt.Rectangle,javax.swing.Icon) -> paintIcon
    void paintText(java.awt.Graphics,java.awt.Rectangle,java.lang.String,java.awt.Color,java.awt.Color) -> paintText
    void paintAccelerator(java.awt.Graphics,java.awt.Rectangle,java.lang.String,java.awt.Color,java.awt.Color,java.awt.Color) -> paintAccelerator
    void paintArrowIcon(java.awt.Graphics,java.awt.Rectangle,javax.swing.Icon) -> paintArrowIcon
    void paintIcon(java.awt.Graphics,javax.swing.JMenuItem,javax.swing.Icon,java.awt.Rectangle) -> paintIcon
    void paintText(java.awt.Graphics,javax.swing.JMenuItem,java.awt.Rectangle,java.lang.String,int,java.awt.Font,java.awt.Color,java.awt.Color,java.awt.Color) -> paintText
    void paintHTMLText(java.awt.Graphics,javax.swing.JMenuItem,java.awt.Rectangle,javax.swing.text.View,java.awt.Color) -> paintHTMLText
    boolean isArmedOrSelected(javax.swing.JMenuItem) -> isArmedOrSelected
    boolean isTopLevelMenu(javax.swing.JMenuItem) -> isTopLevelMenu
    boolean isUnderlineSelection() -> isUnderlineSelection
    javax.swing.Icon getIconForPainting() -> getIconForPainting
    javax.swing.Icon getIconForLayout() -> getIconForLayout
    java.lang.String getAcceleratorText() -> getAcceleratorText
    java.lang.String getTextForAccelerator(javax.swing.KeyStroke) -> getTextForAccelerator
    java.lang.String getMacOSModifiersExText(int,boolean) -> getMacOSModifiersExText
com.formdev.flatlaf.ui.FlatMenuItemRenderer$GraphicsProxyWithTextColor -> com.formdev.flatlaf.ui.FlatMenuItemRenderer$GraphicsProxyWithTextColor:
    java.awt.Color textColor -> textColor
    void <init>(java.awt.Graphics2D,java.awt.Color) -> <init>
    void drawString(java.lang.String,int,int) -> drawString
    void drawString(java.lang.String,float,float) -> drawString
    void drawString(java.text.AttributedCharacterIterator,int,int) -> drawString
    void drawString(java.text.AttributedCharacterIterator,float,float) -> drawString
    void drawChars(char[],int,int,int,int) -> drawChars
com.formdev.flatlaf.ui.FlatMenuItemRenderer$MinSizeIcon -> com.formdev.flatlaf.ui.FlatMenuItemRenderer$MinSizeIcon:
    javax.swing.Icon delegate -> delegate
    com.formdev.flatlaf.ui.FlatMenuItemRenderer this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatMenuItemRenderer,javax.swing.Icon) -> <init>
    int getIconWidth() -> getIconWidth
    int getIconHeight() -> getIconHeight
    void paintIcon(java.awt.Component,java.awt.Graphics,int,int) -> paintIcon
com.formdev.flatlaf.ui.FlatMenuItemUI -> com.formdev.flatlaf.ui.FlatMenuItemUI:
    com.formdev.flatlaf.ui.FlatMenuItemRenderer renderer -> renderer
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    void uninstallDefaults() -> uninstallDefaults
    com.formdev.flatlaf.ui.FlatMenuItemRenderer createRenderer() -> createRenderer
    java.awt.Dimension getPreferredMenuItemSize(javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,int) -> getPreferredMenuItemSize
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
com.formdev.flatlaf.ui.FlatMenuUI -> com.formdev.flatlaf.ui.FlatMenuUI:
    java.awt.Color hoverBackground -> hoverBackground
    com.formdev.flatlaf.ui.FlatMenuItemRenderer renderer -> renderer
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    void uninstallDefaults() -> uninstallDefaults
    com.formdev.flatlaf.ui.FlatMenuItemRenderer createRenderer() -> createRenderer
    javax.swing.event.MouseInputListener createMouseInputListener(javax.swing.JComponent) -> createMouseInputListener
    java.awt.Dimension getMinimumSize(javax.swing.JComponent) -> getMinimumSize
    java.awt.Dimension getPreferredMenuItemSize(javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,int) -> getPreferredMenuItemSize
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    java.awt.Color access$000(com.formdev.flatlaf.ui.FlatMenuUI) -> access$000
com.formdev.flatlaf.ui.FlatMenuUI$1 -> com.formdev.flatlaf.ui.FlatMenuUI$1:
    com.formdev.flatlaf.ui.FlatMenuUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatMenuUI) -> <init>
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void rollover(java.awt.event.MouseEvent,boolean) -> rollover
com.formdev.flatlaf.ui.FlatMenuUI$FlatMenuRenderer -> com.formdev.flatlaf.ui.FlatMenuUI$FlatMenuRenderer:
    com.formdev.flatlaf.ui.FlatMenuUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatMenuUI,javax.swing.JMenuItem,javax.swing.Icon,javax.swing.Icon,java.awt.Font,java.lang.String) -> <init>
    void paintBackground(java.awt.Graphics,java.awt.Color) -> paintBackground
com.formdev.flatlaf.ui.FlatOptionPaneUI -> com.formdev.flatlaf.ui.FlatOptionPaneUI:
    int iconMessageGap -> iconMessageGap
    int messagePadding -> messagePadding
    int maxCharactersPerLine -> maxCharactersPerLine
    int focusWidth -> focusWidth
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    void installComponents() -> installComponents
    java.awt.Dimension getMinimumOptionPaneSize() -> getMinimumOptionPaneSize
    int getMaxCharactersPerLineCount() -> getMaxCharactersPerLineCount
    java.awt.Container createMessageArea() -> createMessageArea
    java.awt.Container createButtonArea() -> createButtonArea
    void addMessageComponents(java.awt.Container,java.awt.GridBagConstraints,java.lang.Object,int,boolean) -> addMessageComponents
    void updateChildPanels(java.awt.Container) -> updateChildPanels
    java.awt.Component findByName(java.awt.Container,java.lang.String) -> findByName
com.formdev.flatlaf.ui.FlatOptionPaneUI$NonUIResourceBorder -> com.formdev.flatlaf.ui.FlatOptionPaneUI$NonUIResourceBorder:
    javax.swing.border.Border delegate -> delegate
    void <init>(javax.swing.border.Border) -> <init>
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
    java.awt.Insets getBorderInsets(java.awt.Component) -> getBorderInsets
    boolean isBorderOpaque() -> isBorderOpaque
com.formdev.flatlaf.ui.FlatPanelUI -> com.formdev.flatlaf.ui.FlatPanelUI:
    javax.swing.plaf.ComponentUI instance -> instance
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
com.formdev.flatlaf.ui.FlatPasswordFieldUI -> com.formdev.flatlaf.ui.FlatPasswordFieldUI:
    int minimumWidth -> minimumWidth
    boolean isIntelliJTheme -> isIntelliJTheme
    java.awt.Color placeholderForeground -> placeholderForeground
    boolean showCapsLock -> showCapsLock
    javax.swing.Icon capsLockIcon -> capsLockIcon
    java.awt.event.FocusListener focusListener -> focusListener
    java.awt.event.KeyListener capsLockListener -> capsLockListener
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    void uninstallDefaults() -> uninstallDefaults
    void installListeners() -> installListeners
    void uninstallListeners() -> uninstallListeners
    javax.swing.text.Caret createCaret() -> createCaret
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
    void paintSafely(java.awt.Graphics) -> paintSafely
    void paintCapsLock(java.awt.Graphics) -> paintCapsLock
    void paintBackground(java.awt.Graphics) -> paintBackground
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
    java.awt.Dimension getMinimumSize(javax.swing.JComponent) -> getMinimumSize
com.formdev.flatlaf.ui.FlatPasswordFieldUI$1 -> com.formdev.flatlaf.ui.FlatPasswordFieldUI$1:
    com.formdev.flatlaf.ui.FlatPasswordFieldUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatPasswordFieldUI) -> <init>
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
    void keyReleased(java.awt.event.KeyEvent) -> keyReleased
    void repaint(java.awt.event.KeyEvent) -> repaint
com.formdev.flatlaf.ui.FlatPopupFactory -> com.formdev.flatlaf.ui.FlatPopupFactory:
    java.lang.reflect.Method java8getPopupMethod -> java8getPopupMethod
    java.lang.reflect.Method java9getPopupMethod -> java9getPopupMethod
    void <init>() -> <init>
    javax.swing.Popup getPopup(java.awt.Component,java.awt.Component,int,int) -> getPopup
    javax.swing.Popup getPopupForScreenOfOwner(java.awt.Component,java.awt.Component,int,int,boolean) -> getPopupForScreenOfOwner
    void showPopupAndFixLocation(javax.swing.Popup,java.awt.Window) -> showPopupAndFixLocation
    boolean isDropShadowPainted(java.awt.Component,java.awt.Component) -> isDropShadowPainted
    java.lang.Boolean isDropShadowPainted(java.awt.Component) -> isDropShadowPainted
    javax.swing.Popup getHeavyWeightPopup(java.awt.Component,java.awt.Component,int,int) -> getHeavyWeightPopup
    java.awt.Point fixToolTipLocation(java.awt.Component,java.awt.Component,int,int) -> fixToolTipLocation
    void access$000(javax.swing.Popup,java.awt.Window) -> access$000
    javax.swing.Popup access$100(com.formdev.flatlaf.ui.FlatPopupFactory,java.awt.Component,java.awt.Component,int,int,boolean) -> access$100
com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup -> com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup:
    java.awt.Component owner -> owner
    javax.swing.JComponent lightComp -> lightComp
    javax.swing.border.Border oldBorder -> oldBorder
    boolean oldOpaque -> oldOpaque
    boolean mediumWeightShown -> mediumWeightShown
    java.awt.Panel mediumWeightPanel -> mediumWeightPanel
    javax.swing.JPanel dropShadowPanel -> dropShadowPanel
    java.awt.event.ComponentListener mediumPanelListener -> mediumPanelListener
    javax.swing.Popup dropShadowDelegate -> dropShadowDelegate
    java.awt.Window dropShadowWindow -> dropShadowWindow
    java.awt.Color oldDropShadowWindowBackground -> oldDropShadowWindowBackground
    com.formdev.flatlaf.ui.FlatPopupFactory this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatPopupFactory,javax.swing.Popup,java.awt.Component,java.awt.Component) -> <init>
    javax.swing.border.Border createDropShadowBorder() -> createDropShadowBorder
    void show() -> show
    void hide() -> hide
    void showMediumWeightDropShadow() -> showMediumWeightDropShadow
    void hideMediumWeightDropShadow() -> hideMediumWeightDropShadow
    javax.swing.JPanel access$200(com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup) -> access$200
    java.awt.Panel access$300(com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup) -> access$300
com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup$1 -> com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup$1:
    com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup this$1 -> this$1
    void <init>(com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup) -> <init>
    void componentShown(java.awt.event.ComponentEvent) -> componentShown
    void componentHidden(java.awt.event.ComponentEvent) -> componentHidden
    void componentMoved(java.awt.event.ComponentEvent) -> componentMoved
    void componentResized(java.awt.event.ComponentEvent) -> componentResized
com.formdev.flatlaf.ui.FlatPopupFactory$NonFlashingPopup -> com.formdev.flatlaf.ui.FlatPopupFactory$NonFlashingPopup:
    javax.swing.Popup delegate -> delegate
    java.awt.Component contents -> contents
    java.awt.Window popupWindow -> popupWindow
    java.awt.Color oldPopupWindowBackground -> oldPopupWindowBackground
    com.formdev.flatlaf.ui.FlatPopupFactory this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatPopupFactory,javax.swing.Popup,java.awt.Component) -> <init>
    void show() -> show
    void hide() -> hide
com.formdev.flatlaf.ui.FlatPopupMenuBorder -> com.formdev.flatlaf.ui.FlatPopupMenuBorder:
    void <init>() -> <init>
    java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets) -> getBorderInsets
com.formdev.flatlaf.ui.FlatPopupMenuSeparatorUI -> com.formdev.flatlaf.ui.FlatPopupMenuSeparatorUI:
    javax.swing.plaf.ComponentUI instance -> instance
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    java.lang.String getPropertyPrefix() -> getPropertyPrefix
com.formdev.flatlaf.ui.FlatPopupMenuUI -> com.formdev.flatlaf.ui.FlatPopupMenuUI:
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
com.formdev.flatlaf.ui.FlatProgressBarUI -> com.formdev.flatlaf.ui.FlatProgressBarUI:
    int arc -> arc
    java.awt.Dimension horizontalSize -> horizontalSize
    java.awt.Dimension verticalSize -> verticalSize
    java.beans.PropertyChangeListener propertyChangeListener -> propertyChangeListener
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    void installListeners() -> installListeners
    void uninstallListeners() -> uninstallListeners
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
    java.awt.Dimension getPreferredInnerHorizontal() -> getPreferredInnerHorizontal
    java.awt.Dimension getPreferredInnerVertical() -> getPreferredInnerVertical
    void update(java.awt.Graphics,javax.swing.JComponent) -> update
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    void paintString(java.awt.Graphics,int,int,int,int,int,java.awt.Insets) -> paintString
    void setAnimationIndex(int) -> setAnimationIndex
    void lambda$installListeners$0(java.beans.PropertyChangeEvent) -> lambda$installListeners$0
com.formdev.flatlaf.ui.FlatRadioButtonMenuItemUI -> com.formdev.flatlaf.ui.FlatRadioButtonMenuItemUI:
    com.formdev.flatlaf.ui.FlatMenuItemRenderer renderer -> renderer
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    void uninstallDefaults() -> uninstallDefaults
    com.formdev.flatlaf.ui.FlatMenuItemRenderer createRenderer() -> createRenderer
    java.awt.Dimension getPreferredMenuItemSize(javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,int) -> getPreferredMenuItemSize
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
com.formdev.flatlaf.ui.FlatRadioButtonUI -> com.formdev.flatlaf.ui.FlatRadioButtonUI:
    int iconTextGap -> iconTextGap
    java.awt.Color disabledText -> disabledText
    boolean defaults_initialized -> defaults_initialized
    javax.swing.plaf.ComponentUI instance -> instance
    java.awt.Insets tempInsets -> tempInsets
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults(javax.swing.AbstractButton) -> installDefaults
    void uninstallDefaults(javax.swing.AbstractButton) -> uninstallDefaults
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    void paintText(java.awt.Graphics,javax.swing.AbstractButton,java.awt.Rectangle,java.lang.String) -> paintText
    int getIconFocusWidth(javax.swing.JComponent) -> getIconFocusWidth
    void <clinit>() -> <clinit>
com.formdev.flatlaf.ui.FlatRootPaneUI -> com.formdev.flatlaf.ui.FlatRootPaneUI:
    boolean canUseJBRCustomDecorations -> canUseJBRCustomDecorations
    javax.swing.JRootPane rootPane -> rootPane
    com.formdev.flatlaf.ui.FlatTitlePane titlePane -> titlePane
    com.formdev.flatlaf.ui.FlatWindowResizer windowResizer -> windowResizer
    java.awt.LayoutManager oldLayout -> oldLayout
    java.lang.Integer TITLE_PANE_LAYER -> TITLE_PANE_LAYER
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installUI(javax.swing.JComponent) -> installUI
    void uninstallUI(javax.swing.JComponent) -> uninstallUI
    void installDefaults(javax.swing.JRootPane) -> installDefaults
    void installClientDecorations() -> installClientDecorations
    void uninstallClientDecorations() -> uninstallClientDecorations
    com.formdev.flatlaf.ui.FlatRootPaneUI$FlatRootLayout createRootLayout() -> createRootLayout
    com.formdev.flatlaf.ui.FlatWindowResizer createWindowResizer() -> createWindowResizer
    com.formdev.flatlaf.ui.FlatTitlePane createTitlePane() -> createTitlePane
    void setTitlePane(com.formdev.flatlaf.ui.FlatTitlePane) -> setTitlePane
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
    void <clinit>() -> <clinit>
com.formdev.flatlaf.ui.FlatRootPaneUI$FlatRootLayout -> com.formdev.flatlaf.ui.FlatRootPaneUI$FlatRootLayout:
    com.formdev.flatlaf.ui.FlatRootPaneUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatRootPaneUI) -> <init>
    void addLayoutComponent(java.lang.String,java.awt.Component) -> addLayoutComponent
    void addLayoutComponent(java.awt.Component,java.lang.Object) -> addLayoutComponent
    void removeLayoutComponent(java.awt.Component) -> removeLayoutComponent
    java.awt.Dimension preferredLayoutSize(java.awt.Container) -> preferredLayoutSize
    java.awt.Dimension minimumLayoutSize(java.awt.Container) -> minimumLayoutSize
    java.awt.Dimension maximumLayoutSize(java.awt.Container) -> maximumLayoutSize
    java.awt.Dimension computeLayoutSize(java.awt.Container,java.util.function.Function) -> computeLayoutSize
    void layoutContainer(java.awt.Container) -> layoutContainer
    void invalidateLayout(java.awt.Container) -> invalidateLayout
    float getLayoutAlignmentX(java.awt.Container) -> getLayoutAlignmentX
    float getLayoutAlignmentY(java.awt.Container) -> getLayoutAlignmentY
    java.awt.Dimension lambda$minimumLayoutSize$1(java.awt.Component) -> lambda$minimumLayoutSize$1
    java.awt.Dimension lambda$preferredLayoutSize$0(java.awt.Component) -> lambda$preferredLayoutSize$0
com.formdev.flatlaf.ui.FlatRootPaneUI$FlatWindowBorder -> com.formdev.flatlaf.ui.FlatRootPaneUI$FlatWindowBorder:
    java.awt.Color activeBorderColor -> activeBorderColor
    java.awt.Color inactiveBorderColor -> inactiveBorderColor
    java.awt.Color baseBorderColor -> baseBorderColor
    void <init>() -> <init>
    java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets) -> getBorderInsets
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
    void paintImpl(java.awt.Graphics2D,int,int,int,int,double) -> paintImpl
    boolean isWindowMaximized(java.awt.Component) -> isWindowMaximized
com.formdev.flatlaf.ui.FlatRoundBorder -> com.formdev.flatlaf.ui.FlatRoundBorder:
    int arc -> arc
    void <init>() -> <init>
    int getArc(java.awt.Component) -> getArc
com.formdev.flatlaf.ui.FlatScrollBarUI -> com.formdev.flatlaf.ui.FlatScrollBarUI:
    java.awt.Insets trackInsets -> trackInsets
    java.awt.Insets thumbInsets -> thumbInsets
    int trackArc -> trackArc
    int thumbArc -> thumbArc
    java.awt.Color hoverTrackColor -> hoverTrackColor
    java.awt.Color hoverThumbColor -> hoverThumbColor
    boolean hoverThumbWithTrack -> hoverThumbWithTrack
    java.awt.Color pressedTrackColor -> pressedTrackColor
    java.awt.Color pressedThumbColor -> pressedThumbColor
    boolean pressedThumbWithTrack -> pressedThumbWithTrack
    boolean showButtons -> showButtons
    java.lang.String arrowType -> arrowType
    java.awt.Color buttonArrowColor -> buttonArrowColor
    java.awt.Color buttonDisabledArrowColor -> buttonDisabledArrowColor
    java.awt.Color hoverButtonBackground -> hoverButtonBackground
    java.awt.Color pressedButtonBackground -> pressedButtonBackground
    java.awt.event.MouseAdapter hoverListener -> hoverListener
    boolean hoverTrack -> hoverTrack
    boolean hoverThumb -> hoverThumb
    boolean isPressed -> isPressed
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installListeners() -> installListeners
    void uninstallListeners() -> uninstallListeners
    void installDefaults() -> installDefaults
    void uninstallDefaults() -> uninstallDefaults
    java.beans.PropertyChangeListener createPropertyChangeListener() -> createPropertyChangeListener
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
    javax.swing.JButton createDecreaseButton(int) -> createDecreaseButton
    javax.swing.JButton createIncreaseButton(int) -> createIncreaseButton
    boolean isShowButtons() -> isShowButtons
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    void paintTrack(java.awt.Graphics,javax.swing.JComponent,java.awt.Rectangle) -> paintTrack
    void paintThumb(java.awt.Graphics,javax.swing.JComponent,java.awt.Rectangle) -> paintThumb
    void paintTrackOrThumb(java.awt.Graphics,javax.swing.JComponent,java.awt.Rectangle,java.awt.Insets,int) -> paintTrackOrThumb
    void paintDecreaseHighlight(java.awt.Graphics) -> paintDecreaseHighlight
    void paintIncreaseHighlight(java.awt.Graphics) -> paintIncreaseHighlight
    java.awt.Color getTrackColor(javax.swing.JComponent,boolean,boolean) -> getTrackColor
    java.awt.Color getThumbColor(javax.swing.JComponent,boolean,boolean) -> getThumbColor
    java.awt.Dimension getMinimumThumbSize() -> getMinimumThumbSize
    java.awt.Dimension getMaximumThumbSize() -> getMaximumThumbSize
    javax.swing.JScrollBar access$100(com.formdev.flatlaf.ui.FlatScrollBarUI) -> access$100
    javax.swing.JScrollBar access$200(com.formdev.flatlaf.ui.FlatScrollBarUI) -> access$200
    javax.swing.JScrollBar access$300(com.formdev.flatlaf.ui.FlatScrollBarUI) -> access$300
    javax.swing.JScrollBar access$400(com.formdev.flatlaf.ui.FlatScrollBarUI) -> access$400
    boolean access$500() -> access$500
    boolean access$502(boolean) -> access$502
    java.awt.Rectangle access$600(com.formdev.flatlaf.ui.FlatScrollBarUI) -> access$600
    java.awt.Rectangle access$700(com.formdev.flatlaf.ui.FlatScrollBarUI) -> access$700
    javax.swing.JScrollBar access$800(com.formdev.flatlaf.ui.FlatScrollBarUI) -> access$800
    javax.swing.JScrollBar access$900(com.formdev.flatlaf.ui.FlatScrollBarUI) -> access$900
    javax.swing.JScrollBar access$1000(com.formdev.flatlaf.ui.FlatScrollBarUI) -> access$1000
    int access$1100(com.formdev.flatlaf.ui.FlatScrollBarUI) -> access$1100
com.formdev.flatlaf.ui.FlatScrollBarUI$1 -> com.formdev.flatlaf.ui.FlatScrollBarUI$1:
    com.formdev.flatlaf.ui.FlatScrollBarUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatScrollBarUI) -> <init>
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton -> com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton:
    com.formdev.flatlaf.ui.FlatScrollBarUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatScrollBarUI,int) -> <init>
    void <init>(com.formdev.flatlaf.ui.FlatScrollBarUI,int,java.lang.String,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color) -> <init>
    java.awt.Color deriveBackground(java.awt.Color) -> deriveBackground
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    java.awt.Dimension getMinimumSize() -> getMinimumSize
    java.awt.Dimension getMaximumSize() -> getMaximumSize
com.formdev.flatlaf.ui.FlatScrollBarUI$ScrollBarHoverListener -> com.formdev.flatlaf.ui.FlatScrollBarUI$ScrollBarHoverListener:
    com.formdev.flatlaf.ui.FlatScrollBarUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatScrollBarUI) -> <init>
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void update(int,int) -> update
    void repaint() -> repaint
    void <init>(com.formdev.flatlaf.ui.FlatScrollBarUI,com.formdev.flatlaf.ui.FlatScrollBarUI$1) -> <init>
com.formdev.flatlaf.ui.FlatScrollPaneUI -> com.formdev.flatlaf.ui.FlatScrollPaneUI:
    com.formdev.flatlaf.ui.FlatScrollPaneUI$Handler handler -> handler
    double EPSILON -> EPSILON
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installUI(javax.swing.JComponent) -> installUI
    void uninstallUI(javax.swing.JComponent) -> uninstallUI
    void installListeners(javax.swing.JScrollPane) -> installListeners
    void uninstallListeners(javax.swing.JComponent) -> uninstallListeners
    java.awt.event.MouseWheelListener createMouseWheelListener() -> createMouseWheelListener
    boolean isSmoothScrollingEnabled() -> isSmoothScrollingEnabled
    void mouseWheelMovedSmooth(java.awt.event.MouseWheelEvent) -> mouseWheelMovedSmooth
    java.beans.PropertyChangeListener createPropertyChangeListener() -> createPropertyChangeListener
    com.formdev.flatlaf.ui.FlatScrollPaneUI$Handler getHandler() -> getHandler
    void updateViewport(java.beans.PropertyChangeEvent) -> updateViewport
    void addViewportListeners(javax.swing.JViewport) -> addViewportListeners
    void removeViewportListeners(javax.swing.JViewport) -> removeViewportListeners
    void update(java.awt.Graphics,javax.swing.JComponent) -> update
    javax.swing.JScrollPane access$000(com.formdev.flatlaf.ui.FlatScrollPaneUI) -> access$000
    void access$100(com.formdev.flatlaf.ui.FlatScrollPaneUI,java.awt.event.MouseWheelEvent) -> access$100
    javax.swing.JScrollPane access$200(com.formdev.flatlaf.ui.FlatScrollPaneUI) -> access$200
    javax.swing.JScrollPane access$300(com.formdev.flatlaf.ui.FlatScrollPaneUI) -> access$300
    javax.swing.JScrollPane access$400(com.formdev.flatlaf.ui.FlatScrollPaneUI) -> access$400
    javax.swing.JScrollPane access$500(com.formdev.flatlaf.ui.FlatScrollPaneUI) -> access$500
    javax.swing.JScrollPane access$700(com.formdev.flatlaf.ui.FlatScrollPaneUI) -> access$700
    javax.swing.JScrollPane access$800(com.formdev.flatlaf.ui.FlatScrollPaneUI) -> access$800
com.formdev.flatlaf.ui.FlatScrollPaneUI$1 -> com.formdev.flatlaf.ui.FlatScrollPaneUI$1:
    com.formdev.flatlaf.ui.FlatScrollPaneUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatScrollPaneUI) -> <init>
    void mouseWheelMoved(java.awt.event.MouseWheelEvent) -> mouseWheelMoved
com.formdev.flatlaf.ui.FlatScrollPaneUI$2 -> com.formdev.flatlaf.ui.FlatScrollPaneUI$2:
    com.formdev.flatlaf.ui.FlatScrollPaneUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatScrollPaneUI) -> <init>
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
com.formdev.flatlaf.ui.FlatScrollPaneUI$Handler -> com.formdev.flatlaf.ui.FlatScrollPaneUI$Handler:
    com.formdev.flatlaf.ui.FlatScrollPaneUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatScrollPaneUI) -> <init>
    void componentAdded(java.awt.event.ContainerEvent) -> componentAdded
    void componentRemoved(java.awt.event.ContainerEvent) -> componentRemoved
    void focusGained(java.awt.event.FocusEvent) -> focusGained
    void focusLost(java.awt.event.FocusEvent) -> focusLost
    void <init>(com.formdev.flatlaf.ui.FlatScrollPaneUI,com.formdev.flatlaf.ui.FlatScrollPaneUI$1) -> <init>
com.formdev.flatlaf.ui.FlatSeparatorUI -> com.formdev.flatlaf.ui.FlatSeparatorUI:
    int height -> height
    int stripeWidth -> stripeWidth
    int stripeIndent -> stripeIndent
    boolean defaults_initialized -> defaults_initialized
    javax.swing.plaf.ComponentUI instance -> instance
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults(javax.swing.JSeparator) -> installDefaults
    void uninstallDefaults(javax.swing.JSeparator) -> uninstallDefaults
    java.lang.String getPropertyPrefix() -> getPropertyPrefix
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
com.formdev.flatlaf.ui.FlatSliderUI -> com.formdev.flatlaf.ui.FlatSliderUI:
    int trackWidth -> trackWidth
    int thumbWidth -> thumbWidth
    java.awt.Color trackColor -> trackColor
    java.awt.Color thumbColor -> thumbColor
    java.awt.Color focusColor -> focusColor
    java.awt.Color hoverColor -> hoverColor
    java.awt.Color disabledForeground -> disabledForeground
    java.awt.event.MouseListener hoverListener -> hoverListener
    boolean hover -> hover
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void <init>() -> <init>
    void installListeners(javax.swing.JSlider) -> installListeners
    void uninstallListeners(javax.swing.JSlider) -> uninstallListeners
    void installDefaults(javax.swing.JSlider) -> installDefaults
    void uninstallDefaults(javax.swing.JSlider) -> uninstallDefaults
    java.awt.Dimension getPreferredHorizontalSize() -> getPreferredHorizontalSize
    java.awt.Dimension getPreferredVerticalSize() -> getPreferredVerticalSize
    java.awt.Dimension getMinimumHorizontalSize() -> getMinimumHorizontalSize
    java.awt.Dimension getMinimumVerticalSize() -> getMinimumVerticalSize
    int getTickLength() -> getTickLength
    java.awt.Dimension getThumbSize() -> getThumbSize
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    void paintFocus(java.awt.Graphics) -> paintFocus
    void paintTrack(java.awt.Graphics) -> paintTrack
    void paintThumb(java.awt.Graphics) -> paintThumb
    boolean isRoundThumb() -> isRoundThumb
    void lambda$installListeners$0(java.lang.Boolean) -> lambda$installListeners$0
com.formdev.flatlaf.ui.FlatSpinnerUI -> com.formdev.flatlaf.ui.FlatSpinnerUI:
    com.formdev.flatlaf.ui.FlatSpinnerUI$Handler handler -> handler
    int minimumWidth -> minimumWidth
    java.lang.String buttonStyle -> buttonStyle
    java.lang.String arrowType -> arrowType
    boolean isIntelliJTheme -> isIntelliJTheme
    java.awt.Color borderColor -> borderColor
    java.awt.Color disabledBorderColor -> disabledBorderColor
    java.awt.Color disabledBackground -> disabledBackground
    java.awt.Color disabledForeground -> disabledForeground
    java.awt.Color buttonBackground -> buttonBackground
    java.awt.Color buttonArrowColor -> buttonArrowColor
    java.awt.Color buttonDisabledArrowColor -> buttonDisabledArrowColor
    java.awt.Color buttonHoverArrowColor -> buttonHoverArrowColor
    java.awt.Insets padding -> padding
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    void uninstallDefaults() -> uninstallDefaults
    void installListeners() -> installListeners
    void uninstallListeners() -> uninstallListeners
    com.formdev.flatlaf.ui.FlatSpinnerUI$Handler getHandler() -> getHandler
    javax.swing.JComponent createEditor() -> createEditor
    void replaceEditor(javax.swing.JComponent,javax.swing.JComponent) -> replaceEditor
    void addEditorFocusListener(javax.swing.JComponent) -> addEditorFocusListener
    void removeEditorFocusListener(javax.swing.JComponent) -> removeEditorFocusListener
    void updateEditorColors() -> updateEditorColors
    javax.swing.JTextField getEditorTextField(javax.swing.JComponent) -> getEditorTextField
    java.awt.Color getBackground(boolean) -> getBackground
    java.awt.Color getForeground(boolean) -> getForeground
    java.awt.LayoutManager createLayout() -> createLayout
    java.awt.Component createNextButton() -> createNextButton
    java.awt.Component createPreviousButton() -> createPreviousButton
    java.awt.Component createArrowButton(int,java.lang.String) -> createArrowButton
    void update(java.awt.Graphics,javax.swing.JComponent) -> update
    javax.swing.JSpinner access$200(com.formdev.flatlaf.ui.FlatSpinnerUI) -> access$200
    javax.swing.JSpinner access$300(com.formdev.flatlaf.ui.FlatSpinnerUI) -> access$300
    javax.swing.JSpinner access$400(com.formdev.flatlaf.ui.FlatSpinnerUI) -> access$400
    javax.swing.JSpinner access$500(com.formdev.flatlaf.ui.FlatSpinnerUI) -> access$500
    javax.swing.JSpinner access$600(com.formdev.flatlaf.ui.FlatSpinnerUI) -> access$600
    javax.swing.JTextField access$700(javax.swing.JComponent) -> access$700
    javax.swing.JSpinner access$800(com.formdev.flatlaf.ui.FlatSpinnerUI) -> access$800
    void access$900(com.formdev.flatlaf.ui.FlatSpinnerUI) -> access$900
    javax.swing.JSpinner access$1000(com.formdev.flatlaf.ui.FlatSpinnerUI) -> access$1000
    javax.swing.JSpinner access$1100(com.formdev.flatlaf.ui.FlatSpinnerUI) -> access$1100
com.formdev.flatlaf.ui.FlatSpinnerUI$1 -> com.formdev.flatlaf.ui.FlatSpinnerUI$1:
com.formdev.flatlaf.ui.FlatSpinnerUI$Handler -> com.formdev.flatlaf.ui.FlatSpinnerUI$Handler:
    java.awt.Component editor -> editor
    java.awt.Component nextButton -> nextButton
    java.awt.Component previousButton -> previousButton
    com.formdev.flatlaf.ui.FlatSpinnerUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatSpinnerUI) -> <init>
    void addLayoutComponent(java.lang.String,java.awt.Component) -> addLayoutComponent
    void removeLayoutComponent(java.awt.Component) -> removeLayoutComponent
    java.awt.Dimension preferredLayoutSize(java.awt.Container) -> preferredLayoutSize
    java.awt.Dimension minimumLayoutSize(java.awt.Container) -> minimumLayoutSize
    void layoutContainer(java.awt.Container) -> layoutContainer
    void focusGained(java.awt.event.FocusEvent) -> focusGained
    void focusLost(java.awt.event.FocusEvent) -> focusLost
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
    void <init>(com.formdev.flatlaf.ui.FlatSpinnerUI,com.formdev.flatlaf.ui.FlatSpinnerUI$1) -> <init>
    java.awt.Component access$100(com.formdev.flatlaf.ui.FlatSpinnerUI$Handler) -> access$100
com.formdev.flatlaf.ui.FlatSplitPaneUI -> com.formdev.flatlaf.ui.FlatSplitPaneUI:
    java.lang.String arrowType -> arrowType
    java.lang.Boolean continuousLayout -> continuousLayout
    java.awt.Color oneTouchArrowColor -> oneTouchArrowColor
    java.awt.Color oneTouchHoverArrowColor -> oneTouchHoverArrowColor
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    boolean isContinuousLayout() -> isContinuousLayout
    javax.swing.plaf.basic.BasicSplitPaneDivider createDefaultDivider() -> createDefaultDivider
    java.awt.Color access$000(com.formdev.flatlaf.ui.FlatSplitPaneUI) -> access$000
    java.awt.Color access$100(com.formdev.flatlaf.ui.FlatSplitPaneUI) -> access$100
com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider -> com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider:
    com.formdev.flatlaf.ui.FlatSplitPaneUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatSplitPaneUI,javax.swing.plaf.basic.BasicSplitPaneUI) -> <init>
    void setDividerSize(int) -> setDividerSize
    javax.swing.JButton createLeftOneTouchButton() -> createLeftOneTouchButton
    javax.swing.JButton createRightOneTouchButton() -> createRightOneTouchButton
    int access$200(com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider) -> access$200
com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider$FlatOneTouchButton -> com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider$FlatOneTouchButton:
    boolean left -> left
    com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider this$1 -> this$1
    void <init>(com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider,boolean) -> <init>
    int getDirection() -> getDirection
com.formdev.flatlaf.ui.FlatTabbedPaneUI -> com.formdev.flatlaf.ui.FlatTabbedPaneUI:
    java.util.Set focusForwardTraversalKeys -> focusForwardTraversalKeys
    java.util.Set focusBackwardTraversalKeys -> focusBackwardTraversalKeys
    java.awt.Color disabledForeground -> disabledForeground
    java.awt.Color selectedBackground -> selectedBackground
    java.awt.Color selectedForeground -> selectedForeground
    java.awt.Color underlineColor -> underlineColor
    java.awt.Color disabledUnderlineColor -> disabledUnderlineColor
    java.awt.Color hoverColor -> hoverColor
    java.awt.Color focusColor -> focusColor
    java.awt.Color tabSeparatorColor -> tabSeparatorColor
    java.awt.Color contentAreaColor -> contentAreaColor
    int tabHeight -> tabHeight
    int tabSelectionHeight -> tabSelectionHeight
    int contentSeparatorHeight -> contentSeparatorHeight
    boolean showTabSeparators -> showTabSeparators
    boolean tabSeparatorsFullHeight -> tabSeparatorsFullHeight
    boolean hasFullBorder -> hasFullBorder
    boolean tabsOverlapBorder -> tabsOverlapBorder
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    void uninstallDefaults() -> uninstallDefaults
    java.beans.PropertyChangeListener createPropertyChangeListener() -> createPropertyChangeListener
    javax.swing.JButton createScrollButton(int) -> createScrollButton
    void setRolloverTab(int) -> setRolloverTab
    void repaintTab(int) -> repaintTab
    int calculateTabWidth(int,int,java.awt.FontMetrics) -> calculateTabWidth
    int calculateTabHeight(int,int,int) -> calculateTabHeight
    java.awt.Insets getContentBorderInsets(int) -> getContentBorderInsets
    int getTabLabelShiftX(int,int,boolean) -> getTabLabelShiftX
    int getTabLabelShiftY(int,int,boolean) -> getTabLabelShiftY
    void update(java.awt.Graphics,javax.swing.JComponent) -> update
    void paintText(java.awt.Graphics,int,java.awt.Font,java.awt.FontMetrics,int,java.lang.String,java.awt.Rectangle,boolean) -> paintText
    void paintTabBackground(java.awt.Graphics,int,int,int,int,int,int,boolean) -> paintTabBackground
    void paintTabBorder(java.awt.Graphics,int,int,int,int,int,int,boolean) -> paintTabBorder
    void paintTabSeparator(java.awt.Graphics,int,int,int,int,int) -> paintTabSeparator
    void paintTabSelection(java.awt.Graphics,int,int,int,int,int) -> paintTabSelection
    void paintContentBorder(java.awt.Graphics,int,int) -> paintContentBorder
    void paintFocusIndicator(java.awt.Graphics,int,java.awt.Rectangle[],int,java.awt.Rectangle,java.awt.Rectangle,boolean) -> paintFocusIndicator
    boolean isLastInRun(int) -> isLastInRun
    boolean isScrollTabLayout() -> isScrollTabLayout
    java.awt.Component findComponentByClassName(java.awt.Container,java.lang.String) -> findComponentByClassName
    javax.swing.JTabbedPane access$000(com.formdev.flatlaf.ui.FlatTabbedPaneUI) -> access$000
    javax.swing.JTabbedPane access$100(com.formdev.flatlaf.ui.FlatTabbedPaneUI) -> access$100
com.formdev.flatlaf.ui.FlatTabbedPaneUI$1 -> com.formdev.flatlaf.ui.FlatTabbedPaneUI$1:
    com.formdev.flatlaf.ui.FlatTabbedPaneUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatTabbedPaneUI) -> <init>
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
com.formdev.flatlaf.ui.FlatTableCellBorder -> com.formdev.flatlaf.ui.FlatTableCellBorder:
    boolean showCellFocusIndicator -> showCellFocusIndicator
    void <init>() -> <init>
com.formdev.flatlaf.ui.FlatTableCellBorder$Default -> com.formdev.flatlaf.ui.FlatTableCellBorder$Default:
    void <init>() -> <init>
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
com.formdev.flatlaf.ui.FlatTableCellBorder$Focused -> com.formdev.flatlaf.ui.FlatTableCellBorder$Focused:
    void <init>() -> <init>
com.formdev.flatlaf.ui.FlatTableCellBorder$Selected -> com.formdev.flatlaf.ui.FlatTableCellBorder$Selected:
    void <init>() -> <init>
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
    boolean isSelectionEditable(javax.swing.JTable) -> isSelectionEditable
com.formdev.flatlaf.ui.FlatTableHeaderUI -> com.formdev.flatlaf.ui.FlatTableHeaderUI:
    java.awt.Color separatorColor -> separatorColor
    java.awt.Color bottomSeparatorColor -> bottomSeparatorColor
    int height -> height
    int sortIconPosition -> sortIconPosition
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    void uninstallDefaults() -> uninstallDefaults
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    boolean isSystemDefaultRenderer(java.lang.Object) -> isSystemDefaultRenderer
    void paintColumnBorders(java.awt.Graphics,javax.swing.JComponent) -> paintColumnBorders
    void paintDraggedColumnBorders(java.awt.Graphics,javax.swing.JComponent) -> paintDraggedColumnBorders
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
    boolean isVerticalScrollBarVisible() -> isVerticalScrollBarVisible
    javax.swing.JScrollPane getScrollPane() -> getScrollPane
com.formdev.flatlaf.ui.FlatTableHeaderUI$FlatTableCellHeaderRenderer -> com.formdev.flatlaf.ui.FlatTableHeaderUI$FlatTableCellHeaderRenderer:
    javax.swing.table.TableCellRenderer delegate -> delegate
    javax.swing.JLabel l -> l
    int oldHorizontalTextPosition -> oldHorizontalTextPosition
    javax.swing.border.Border origBorder -> origBorder
    javax.swing.Icon sortIcon -> sortIcon
    com.formdev.flatlaf.ui.FlatTableHeaderUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatTableHeaderUI,javax.swing.table.TableCellRenderer) -> <init>
    java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) -> getTableCellRendererComponent
    void reset() -> reset
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
    java.awt.Insets getBorderInsets(java.awt.Component) -> getBorderInsets
    boolean isBorderOpaque() -> isBorderOpaque
    javax.swing.table.TableCellRenderer access$000(com.formdev.flatlaf.ui.FlatTableHeaderUI$FlatTableCellHeaderRenderer) -> access$000
com.formdev.flatlaf.ui.FlatTableUI -> com.formdev.flatlaf.ui.FlatTableUI:
    boolean showHorizontalLines -> showHorizontalLines
    boolean showVerticalLines -> showVerticalLines
    java.awt.Dimension intercellSpacing -> intercellSpacing
    java.awt.Color selectionBackground -> selectionBackground
    java.awt.Color selectionForeground -> selectionForeground
    java.awt.Color selectionInactiveBackground -> selectionInactiveBackground
    java.awt.Color selectionInactiveForeground -> selectionInactiveForeground
    boolean oldShowHorizontalLines -> oldShowHorizontalLines
    boolean oldShowVerticalLines -> oldShowVerticalLines
    java.awt.Dimension oldIntercellSpacing -> oldIntercellSpacing
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    void uninstallDefaults() -> uninstallDefaults
    java.awt.event.FocusListener createFocusListener() -> createFocusListener
    void toggleSelectionColors() -> toggleSelectionColors
    void access$000(com.formdev.flatlaf.ui.FlatTableUI) -> access$000
com.formdev.flatlaf.ui.FlatTableUI$1 -> com.formdev.flatlaf.ui.FlatTableUI$1:
    com.formdev.flatlaf.ui.FlatTableUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatTableUI) -> <init>
    void focusGained(java.awt.event.FocusEvent) -> focusGained
    void focusLost(java.awt.event.FocusEvent) -> focusLost
    void lambda$focusLost$0() -> lambda$focusLost$0
com.formdev.flatlaf.ui.FlatTextAreaUI -> com.formdev.flatlaf.ui.FlatTextAreaUI:
    int minimumWidth -> minimumWidth
    boolean isIntelliJTheme -> isIntelliJTheme
    java.awt.Color background -> background
    java.awt.Color disabledBackground -> disabledBackground
    java.awt.Color inactiveBackground -> inactiveBackground
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installUI(javax.swing.JComponent) -> installUI
    void installDefaults() -> installDefaults
    void uninstallDefaults() -> uninstallDefaults
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
    void updateBackground() -> updateBackground
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
    java.awt.Dimension getMinimumSize(javax.swing.JComponent) -> getMinimumSize
    java.awt.Dimension applyMinimumWidth(javax.swing.JComponent,java.awt.Dimension) -> applyMinimumWidth
    void paintSafely(java.awt.Graphics) -> paintSafely
    void paintBackground(java.awt.Graphics) -> paintBackground
com.formdev.flatlaf.ui.FlatTextBorder -> com.formdev.flatlaf.ui.FlatTextBorder:
    int arc -> arc
    void <init>() -> <init>
    int getArc(java.awt.Component) -> getArc
com.formdev.flatlaf.ui.FlatTextFieldUI -> com.formdev.flatlaf.ui.FlatTextFieldUI:
    int minimumWidth -> minimumWidth
    boolean isIntelliJTheme -> isIntelliJTheme
    java.awt.Color placeholderForeground -> placeholderForeground
    java.awt.event.FocusListener focusListener -> focusListener
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    void uninstallDefaults() -> uninstallDefaults
    void installListeners() -> installListeners
    void uninstallListeners() -> uninstallListeners
    javax.swing.text.Caret createCaret() -> createCaret
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
    void propertyChange(javax.swing.text.JTextComponent,java.beans.PropertyChangeEvent) -> propertyChange
    void paintSafely(java.awt.Graphics) -> paintSafely
    void paintBackground(java.awt.Graphics) -> paintBackground
    void paintBackground(java.awt.Graphics,javax.swing.text.JTextComponent,boolean) -> paintBackground
    void paintPlaceholder(java.awt.Graphics,javax.swing.text.JTextComponent,java.awt.Color) -> paintPlaceholder
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
    java.awt.Dimension getMinimumSize(javax.swing.JComponent) -> getMinimumSize
    java.awt.Dimension applyMinimumWidth(javax.swing.JComponent,java.awt.Dimension,int) -> applyMinimumWidth
com.formdev.flatlaf.ui.FlatTextPaneUI -> com.formdev.flatlaf.ui.FlatTextPaneUI:
    int minimumWidth -> minimumWidth
    boolean isIntelliJTheme -> isIntelliJTheme
    java.lang.Object oldHonorDisplayProperties -> oldHonorDisplayProperties
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    void uninstallDefaults() -> uninstallDefaults
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
    java.awt.Dimension getMinimumSize(javax.swing.JComponent) -> getMinimumSize
    void paintSafely(java.awt.Graphics) -> paintSafely
    void paintBackground(java.awt.Graphics) -> paintBackground
com.formdev.flatlaf.ui.FlatTitlePane -> com.formdev.flatlaf.ui.FlatTitlePane:
    java.awt.Color activeBackground -> activeBackground
    java.awt.Color inactiveBackground -> inactiveBackground
    java.awt.Color activeForeground -> activeForeground
    java.awt.Color inactiveForeground -> inactiveForeground
    java.awt.Color embeddedForeground -> embeddedForeground
    java.awt.Insets menuBarMargins -> menuBarMargins
    java.awt.Dimension iconSize -> iconSize
    int buttonMaximizedHeight -> buttonMaximizedHeight
    javax.swing.JRootPane rootPane -> rootPane
    javax.swing.JPanel leftPanel -> leftPanel
    javax.swing.JLabel iconLabel -> iconLabel
    javax.swing.JComponent menuBarPlaceholder -> menuBarPlaceholder
    javax.swing.JLabel titleLabel -> titleLabel
    javax.swing.JPanel buttonPanel -> buttonPanel
    javax.swing.JButton iconifyButton -> iconifyButton
    javax.swing.JButton maximizeButton -> maximizeButton
    javax.swing.JButton restoreButton -> restoreButton
    javax.swing.JButton closeButton -> closeButton
    java.awt.Window window -> window
    com.formdev.flatlaf.ui.FlatTitlePane$Handler handler -> handler
    void <init>(javax.swing.JRootPane) -> <init>
    com.formdev.flatlaf.ui.FlatTitlePane$FlatTitlePaneBorder createTitlePaneBorder() -> createTitlePaneBorder
    com.formdev.flatlaf.ui.FlatTitlePane$Handler createHandler() -> createHandler
    void addSubComponents() -> addSubComponents
    void createButtons() -> createButtons
    javax.swing.JButton createButton(java.lang.String,java.lang.String,java.awt.event.ActionListener) -> createButton
    void activeChanged(boolean) -> activeChanged
    void frameStateChanged() -> frameStateChanged
    void updateIcon() -> updateIcon
    void addNotify() -> addNotify
    void removeNotify() -> removeNotify
    java.lang.String getWindowTitle() -> getWindowTitle
    void installWindowListeners() -> installWindowListeners
    void uninstallWindowListeners() -> uninstallWindowListeners
    boolean isMenuBarEmbedded() -> isMenuBarEmbedded
    java.awt.Rectangle getMenuBarBounds() -> getMenuBarBounds
    java.awt.Insets getMenuBarMargins() -> getMenuBarMargins
    void menuBarChanged() -> menuBarChanged
    void menuBarLayouted() -> menuBarLayouted
    void paintComponent(java.awt.Graphics) -> paintComponent
    void repaintWindowBorder() -> repaintWindowBorder
    void iconify() -> iconify
    void maximize() -> maximize
    void updateMaximizedBounds() -> updateMaximizedBounds
    boolean isMaximizedBoundsFixed() -> isMaximizedBoundsFixed
    void restore() -> restore
    void close() -> close
    boolean hasJBRCustomDecoration() -> hasJBRCustomDecoration
    void updateJBRHitTestSpotsAndTitleBarHeightLater() -> updateJBRHitTestSpotsAndTitleBarHeightLater
    void updateJBRHitTestSpotsAndTitleBarHeight() -> updateJBRHitTestSpotsAndTitleBarHeight
    void addJBRHitTestSpot(javax.swing.JComponent,boolean,java.util.List) -> addJBRHitTestSpot
    void lambda$updateJBRHitTestSpotsAndTitleBarHeightLater$5() -> lambda$updateJBRHitTestSpotsAndTitleBarHeightLater$5
    void lambda$menuBarChanged$4() -> lambda$menuBarChanged$4
    void lambda$createButtons$3(java.awt.event.ActionEvent) -> lambda$createButtons$3
    void lambda$createButtons$2(java.awt.event.ActionEvent) -> lambda$createButtons$2
    void lambda$createButtons$1(java.awt.event.ActionEvent) -> lambda$createButtons$1
    void lambda$createButtons$0(java.awt.event.ActionEvent) -> lambda$createButtons$0
com.formdev.flatlaf.ui.FlatTitlePane$1 -> com.formdev.flatlaf.ui.FlatTitlePane$1:
    com.formdev.flatlaf.ui.FlatTitlePane this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatTitlePane) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.formdev.flatlaf.ui.FlatTitlePane$2 -> com.formdev.flatlaf.ui.FlatTitlePane$2:
    com.formdev.flatlaf.ui.FlatTitlePane this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatTitlePane) -> <init>
    void layoutContainer(java.awt.Container) -> layoutContainer
com.formdev.flatlaf.ui.FlatTitlePane$3 -> com.formdev.flatlaf.ui.FlatTitlePane$3:
    com.formdev.flatlaf.ui.FlatTitlePane this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatTitlePane) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.formdev.flatlaf.ui.FlatTitlePane$FlatTitlePaneBorder -> com.formdev.flatlaf.ui.FlatTitlePane$FlatTitlePaneBorder:
    com.formdev.flatlaf.ui.FlatTitlePane this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatTitlePane) -> <init>
    java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets) -> getBorderInsets
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
    javax.swing.border.Border getMenuBarBorder() -> getMenuBarBorder
com.formdev.flatlaf.ui.FlatTitlePane$Handler -> com.formdev.flatlaf.ui.FlatTitlePane$Handler:
    java.awt.Point dragOffset -> dragOffset
    com.formdev.flatlaf.ui.FlatTitlePane this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatTitlePane) -> <init>
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
    void windowActivated(java.awt.event.WindowEvent) -> windowActivated
    void windowDeactivated(java.awt.event.WindowEvent) -> windowDeactivated
    void windowStateChanged(java.awt.event.WindowEvent) -> windowStateChanged
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    void componentResized(java.awt.event.ComponentEvent) -> componentResized
    void componentShown(java.awt.event.ComponentEvent) -> componentShown
    void componentMoved(java.awt.event.ComponentEvent) -> componentMoved
    void componentHidden(java.awt.event.ComponentEvent) -> componentHidden
com.formdev.flatlaf.ui.FlatTitlePaneIcon -> com.formdev.flatlaf.ui.FlatTitlePaneIcon:
    java.util.List images -> images
    javax.swing.Icon create(java.util.List,java.awt.Dimension) -> create
    void <init>(java.util.List,java.awt.Dimension) -> <init>
    java.awt.Image getResolutionVariant(int,int) -> getResolutionVariant
    int lambda$create$0(java.awt.Image,java.awt.Image) -> lambda$create$0
com.formdev.flatlaf.ui.FlatToggleButtonUI -> com.formdev.flatlaf.ui.FlatToggleButtonUI:
    int tabUnderlineHeight -> tabUnderlineHeight
    java.awt.Color tabUnderlineColor -> tabUnderlineColor
    java.awt.Color tabDisabledUnderlineColor -> tabDisabledUnderlineColor
    java.awt.Color tabSelectedBackground -> tabSelectedBackground
    java.awt.Color tabHoverBackground -> tabHoverBackground
    java.awt.Color tabFocusBackground -> tabFocusBackground
    boolean defaults_initialized -> defaults_initialized
    javax.swing.plaf.ComponentUI instance -> instance
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    java.lang.String getPropertyPrefix() -> getPropertyPrefix
    void installDefaults(javax.swing.AbstractButton) -> installDefaults
    void uninstallDefaults(javax.swing.AbstractButton) -> uninstallDefaults
    void propertyChange(javax.swing.AbstractButton,java.beans.PropertyChangeEvent) -> propertyChange
    boolean isTabButton(java.awt.Component) -> isTabButton
    void paintBackground(java.awt.Graphics,javax.swing.JComponent) -> paintBackground
com.formdev.flatlaf.ui.FlatToolBarBorder -> com.formdev.flatlaf.ui.FlatToolBarBorder:
    int DOT_COUNT -> DOT_COUNT
    int DOT_SIZE -> DOT_SIZE
    int GRIP_WIDTH -> GRIP_WIDTH
    java.awt.Color gripColor -> gripColor
    void <init>() -> <init>
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
    void paintGrip(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintGrip
    java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets) -> getBorderInsets
com.formdev.flatlaf.ui.FlatToolBarSeparatorUI -> com.formdev.flatlaf.ui.FlatToolBarSeparatorUI:
    int LINE_WIDTH -> LINE_WIDTH
    int separatorWidth -> separatorWidth
    java.awt.Color separatorColor -> separatorColor
    boolean defaults_initialized -> defaults_initialized
    javax.swing.plaf.ComponentUI instance -> instance
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults(javax.swing.JSeparator) -> installDefaults
    void uninstallDefaults(javax.swing.JSeparator) -> uninstallDefaults
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
    java.awt.Dimension getMaximumSize(javax.swing.JComponent) -> getMaximumSize
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    boolean isVertical(javax.swing.JComponent) -> isVertical
com.formdev.flatlaf.ui.FlatToolBarUI -> com.formdev.flatlaf.ui.FlatToolBarUI:
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    java.awt.event.ContainerListener createToolBarContListener() -> createToolBarContListener
    void setBorderToRollover(java.awt.Component) -> setBorderToRollover
    void setBorderToNonRollover(java.awt.Component) -> setBorderToNonRollover
    void setBorderToNormal(java.awt.Component) -> setBorderToNormal
    void installRolloverBorders(javax.swing.JComponent) -> installRolloverBorders
    void installNonRolloverBorders(javax.swing.JComponent) -> installNonRolloverBorders
    void installNormalBorders(javax.swing.JComponent) -> installNormalBorders
    javax.swing.border.Border createRolloverBorder() -> createRolloverBorder
    javax.swing.border.Border createNonRolloverBorder() -> createNonRolloverBorder
    void setOrientation(int) -> setOrientation
com.formdev.flatlaf.ui.FlatToolBarUI$1 -> com.formdev.flatlaf.ui.FlatToolBarUI$1:
    com.formdev.flatlaf.ui.FlatToolBarUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatToolBarUI) -> <init>
    void componentAdded(java.awt.event.ContainerEvent) -> componentAdded
    void componentRemoved(java.awt.event.ContainerEvent) -> componentRemoved
com.formdev.flatlaf.ui.FlatToolTipUI -> com.formdev.flatlaf.ui.FlatToolTipUI:
    java.beans.PropertyChangeListener sharedPropertyChangedListener -> sharedPropertyChangedListener
    javax.swing.plaf.ComponentUI instance -> instance
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installUI(javax.swing.JComponent) -> installUI
    void installListeners(javax.swing.JComponent) -> installListeners
    void uninstallListeners(javax.swing.JComponent) -> uninstallListeners
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    boolean isMultiLine(javax.swing.JComponent) -> isMultiLine
    void lambda$installListeners$0(java.beans.PropertyChangeEvent) -> lambda$installListeners$0
com.formdev.flatlaf.ui.FlatTreeUI -> com.formdev.flatlaf.ui.FlatTreeUI:
    java.awt.Color selectionBackground -> selectionBackground
    java.awt.Color selectionForeground -> selectionForeground
    java.awt.Color selectionInactiveBackground -> selectionInactiveBackground
    java.awt.Color selectionInactiveForeground -> selectionInactiveForeground
    java.awt.Color selectionBorderColor -> selectionBorderColor
    boolean wideSelection -> wideSelection
    boolean showCellFocusIndicator -> showCellFocusIndicator
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    void uninstallDefaults() -> uninstallDefaults
    java.awt.event.MouseListener createMouseListener() -> createMouseListener
    java.beans.PropertyChangeListener createPropertyChangeListener() -> createPropertyChangeListener
    void paintRow(java.awt.Graphics,java.awt.Rectangle,java.awt.Insets,java.awt.Rectangle,javax.swing.tree.TreePath,int,boolean,boolean,boolean) -> paintRow
    boolean isDropRow(int) -> isDropRow
    java.awt.Rectangle getDropLineRect(javax.swing.JTree$DropLocation) -> getDropLineRect
    javax.swing.JTree access$000(com.formdev.flatlaf.ui.FlatTreeUI) -> access$000
    javax.swing.JTree access$100(com.formdev.flatlaf.ui.FlatTreeUI) -> access$100
    boolean access$200(com.formdev.flatlaf.ui.FlatTreeUI,javax.swing.tree.TreePath,int,int) -> access$200
    javax.swing.JTree access$300(com.formdev.flatlaf.ui.FlatTreeUI) -> access$300
    javax.swing.JTree access$400(com.formdev.flatlaf.ui.FlatTreeUI) -> access$400
    javax.swing.JTree access$500(com.formdev.flatlaf.ui.FlatTreeUI) -> access$500
    boolean access$600(com.formdev.flatlaf.ui.FlatTreeUI,javax.swing.JTree$DropLocation) -> access$600
    javax.swing.JTree access$700(com.formdev.flatlaf.ui.FlatTreeUI) -> access$700
    javax.swing.JTree access$800(com.formdev.flatlaf.ui.FlatTreeUI) -> access$800
    javax.swing.JTree access$900(com.formdev.flatlaf.ui.FlatTreeUI) -> access$900
com.formdev.flatlaf.ui.FlatTreeUI$1 -> com.formdev.flatlaf.ui.FlatTreeUI$1:
    com.formdev.flatlaf.ui.FlatTreeUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatTreeUI) -> <init>
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    java.awt.event.MouseEvent handleWideMouseEvent(java.awt.event.MouseEvent) -> handleWideMouseEvent
com.formdev.flatlaf.ui.FlatTreeUI$2 -> com.formdev.flatlaf.ui.FlatTreeUI$2:
    com.formdev.flatlaf.ui.FlatTreeUI this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatTreeUI) -> <init>
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
    void repaintWideDropLocation(javax.swing.JTree$DropLocation) -> repaintWideDropLocation
com.formdev.flatlaf.ui.FlatUIUtils -> com.formdev.flatlaf.ui.FlatUIUtils:
    boolean MAC_USE_QUARTZ -> MAC_USE_QUARTZ
    void <init>() -> <init>
    java.awt.Rectangle addInsets(java.awt.Rectangle,java.awt.Insets) -> addInsets
    java.awt.Rectangle subtractInsets(java.awt.Rectangle,java.awt.Insets) -> subtractInsets
    java.awt.Dimension addInsets(java.awt.Dimension,java.awt.Insets) -> addInsets
    java.awt.Insets addInsets(java.awt.Insets,java.awt.Insets) -> addInsets
    void setInsets(java.awt.Insets,java.awt.Insets) -> setInsets
    java.awt.Color getUIColor(java.lang.String,int) -> getUIColor
    java.awt.Color getUIColor(java.lang.String,java.awt.Color) -> getUIColor
    java.awt.Color getUIColor(java.lang.String,java.lang.String) -> getUIColor
    int getUIInt(java.lang.String,int) -> getUIInt
    float getUIFloat(java.lang.String,float) -> getUIFloat
    java.awt.Color nonUIResource(java.awt.Color) -> nonUIResource
    java.awt.Font nonUIResource(java.awt.Font) -> nonUIResource
    int minimumWidth(javax.swing.JComponent,int) -> minimumWidth
    int minimumHeight(javax.swing.JComponent,int) -> minimumHeight
    boolean isCellEditor(java.awt.Component) -> isCellEditor
    boolean isPermanentFocusOwner(java.awt.Component) -> isPermanentFocusOwner
    java.lang.Boolean isRoundRect(java.awt.Component) -> isRoundRect
    float getBorderFocusWidth(javax.swing.JComponent) -> getBorderFocusWidth
    float getBorderArc(javax.swing.JComponent) -> getBorderArc
    boolean hasRoundBorder(javax.swing.JComponent) -> hasRoundBorder
    com.formdev.flatlaf.ui.FlatBorder getOutsideFlatBorder(javax.swing.JComponent) -> getOutsideFlatBorder
    void setRenderingHints(java.awt.Graphics2D) -> setRenderingHints
    java.awt.Color deriveColor(java.awt.Color,java.awt.Color) -> deriveColor
    void paintComponentOuterBorder(java.awt.Graphics2D,int,int,int,int,float,float,float) -> paintComponentOuterBorder
    void paintComponentOuterBorderImpl(java.awt.Graphics2D,int,int,int,int,float,float,float) -> paintComponentOuterBorderImpl
    void paintComponentBorder(java.awt.Graphics2D,int,int,int,int,float,float,float) -> paintComponentBorder
    void paintComponentBorderImpl(java.awt.Graphics2D,int,int,int,int,float,float,float) -> paintComponentBorderImpl
    void paintComponentBackground(java.awt.Graphics2D,int,int,int,int,float,float) -> paintComponentBackground
    void paintComponentBackgroundImpl(java.awt.Graphics2D,int,int,int,int,float,float) -> paintComponentBackgroundImpl
    java.awt.Shape createComponentRectangle(float,float,float,float,float) -> createComponentRectangle
    void paintParentBackground(java.awt.Graphics,javax.swing.JComponent) -> paintParentBackground
    java.awt.Color getParentBackground(javax.swing.JComponent) -> getParentBackground
    java.awt.Container findOpaqueParent(java.awt.Container) -> findOpaqueParent
    java.awt.geom.Path2D createRectangle(float,float,float,float,float) -> createRectangle
    java.awt.geom.Path2D createRoundRectangle(float,float,float,float,float,float,float,float,float) -> createRoundRectangle
    java.awt.Shape createRoundRectanglePath(float,float,float,float,float,float,float,float) -> createRoundRectanglePath
    java.awt.geom.Path2D createPath(double[]) -> createPath
    java.awt.geom.Path2D createPath(boolean,double[]) -> createPath
    void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int) -> drawString
    void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int) -> drawStringUnderlineCharAt
    boolean hasOpaqueBeenExplicitlySet(javax.swing.JComponent) -> hasOpaqueBeenExplicitlySet
    void lambda$paintComponentBackground$2(float,float,java.awt.Graphics2D,int,int,int,int,double) -> lambda$paintComponentBackground$2
    void lambda$paintComponentBorder$1(float,float,float,java.awt.Graphics2D,int,int,int,int,double) -> lambda$paintComponentBorder$1
    void lambda$paintComponentOuterBorder$0(float,float,float,java.awt.Graphics2D,int,int,int,int,double) -> lambda$paintComponentOuterBorder$0
    void <clinit>() -> <clinit>
com.formdev.flatlaf.ui.FlatUIUtils$1 -> com.formdev.flatlaf.ui.FlatUIUtils$1:
    void <init>(java.awt.Graphics2D) -> <init>
    void fillRect(int,int,int,int) -> fillRect
com.formdev.flatlaf.ui.FlatUIUtils$HoverListener -> com.formdev.flatlaf.ui.FlatUIUtils$HoverListener:
    java.awt.Component repaintComponent -> repaintComponent
    java.util.function.Consumer hoverChanged -> hoverChanged
    void <init>(java.awt.Component,java.util.function.Consumer) -> <init>
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void repaint() -> repaint
com.formdev.flatlaf.ui.FlatUIUtils$RepaintFocusListener -> com.formdev.flatlaf.ui.FlatUIUtils$RepaintFocusListener:
    java.awt.Component repaintComponent -> repaintComponent
    void <init>(java.awt.Component) -> <init>
    void focusGained(java.awt.event.FocusEvent) -> focusGained
    void focusLost(java.awt.event.FocusEvent) -> focusLost
com.formdev.flatlaf.ui.FlatViewportUI -> com.formdev.flatlaf.ui.FlatViewportUI:
    javax.swing.plaf.ComponentUI instance -> instance
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void update(java.awt.Graphics,javax.swing.JComponent) -> update
com.formdev.flatlaf.ui.FlatWindowResizer -> com.formdev.flatlaf.ui.FlatWindowResizer:
    java.lang.Integer WINDOW_RESIZER_LAYER -> WINDOW_RESIZER_LAYER
    javax.swing.JComponent resizeComp -> resizeComp
    int borderDragThickness -> borderDragThickness
    int cornerDragWidth -> cornerDragWidth
    boolean honorFrameMinimumSizeOnResize -> honorFrameMinimumSizeOnResize
    boolean honorDialogMinimumSizeOnResize -> honorDialogMinimumSizeOnResize
    com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent topDragComp -> topDragComp
    com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent bottomDragComp -> bottomDragComp
    com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent leftDragComp -> leftDragComp
    com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent rightDragComp -> rightDragComp
    void <init>(javax.swing.JComponent) -> <init>
    com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent createDragBorderComponent(int,int,int) -> createDragBorderComponent
    void uninstall() -> uninstall
    void doLayout() -> doLayout
    java.awt.Insets getResizeInsets() -> getResizeInsets
    void addNotify() -> addNotify
    void removeNotify() -> removeNotify
    void updateVisibility() -> updateVisibility
    boolean isDialog() -> isDialog
    boolean isWindowResizable() -> isWindowResizable
    java.awt.Rectangle getWindowBounds() -> getWindowBounds
    void setWindowBounds(java.awt.Rectangle) -> setWindowBounds
    boolean honorMinimumSizeOnResize() -> honorMinimumSizeOnResize
    java.awt.Dimension getWindowMinimumSize() -> getWindowMinimumSize
    void beginResizing(int) -> beginResizing
    void endResizing() -> endResizing
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
    void componentResized(java.awt.event.ComponentEvent) -> componentResized
    void componentMoved(java.awt.event.ComponentEvent) -> componentMoved
    void componentShown(java.awt.event.ComponentEvent) -> componentShown
    void componentHidden(java.awt.event.ComponentEvent) -> componentHidden
    void <clinit>() -> <clinit>
com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent -> com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent:
    int leadingResizeDir -> leadingResizeDir
    int centerResizeDir -> centerResizeDir
    int trailingResizeDir -> trailingResizeDir
    int resizeDir -> resizeDir
    int leadingCornerDragWidth -> leadingCornerDragWidth
    int trailingCornerDragWidth -> trailingCornerDragWidth
    int dragLeftOffset -> dragLeftOffset
    int dragRightOffset -> dragRightOffset
    int dragTopOffset -> dragTopOffset
    int dragBottomOffset -> dragBottomOffset
    com.formdev.flatlaf.ui.FlatWindowResizer this$0 -> this$0
    void <init>(com.formdev.flatlaf.ui.FlatWindowResizer,int,int,int) -> <init>
    void setCornerDragWidths(int,int) -> setCornerDragWidths
    void setResizeDir(int) -> setResizeDir
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void paintComponent(java.awt.Graphics) -> paintComponent
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
com.formdev.flatlaf.ui.FlatWindowResizer$InternalFrameResizer -> com.formdev.flatlaf.ui.FlatWindowResizer$InternalFrameResizer:
    java.util.function.Supplier desktopManager -> desktopManager
    void <init>(javax.swing.JInternalFrame,java.util.function.Supplier) -> <init>
    void uninstall() -> uninstall
    javax.swing.JInternalFrame getFrame() -> getFrame
    java.awt.Insets getResizeInsets() -> getResizeInsets
    boolean isWindowResizable() -> isWindowResizable
    java.awt.Rectangle getWindowBounds() -> getWindowBounds
    void setWindowBounds(java.awt.Rectangle) -> setWindowBounds
    boolean honorMinimumSizeOnResize() -> honorMinimumSizeOnResize
    java.awt.Dimension getWindowMinimumSize() -> getWindowMinimumSize
    void beginResizing(int) -> beginResizing
    void endResizing() -> endResizing
com.formdev.flatlaf.ui.FlatWindowResizer$WindowResizer -> com.formdev.flatlaf.ui.FlatWindowResizer$WindowResizer:
    java.awt.Window window -> window
    void <init>(javax.swing.JRootPane) -> <init>
    void addNotify() -> addNotify
    void removeNotify() -> removeNotify
    boolean isWindowResizable() -> isWindowResizable
    java.awt.Rectangle getWindowBounds() -> getWindowBounds
    void setWindowBounds(java.awt.Rectangle) -> setWindowBounds
    boolean honorMinimumSizeOnResize() -> honorMinimumSizeOnResize
    java.awt.Dimension getWindowMinimumSize() -> getWindowMinimumSize
    boolean isDialog() -> isDialog
    void windowStateChanged(java.awt.event.WindowEvent) -> windowStateChanged
com.formdev.flatlaf.ui.JBRCustomDecorations -> com.formdev.flatlaf.ui.JBRCustomDecorations:
    boolean initialized -> initialized
    java.lang.reflect.Method Window_hasCustomDecoration -> Window_hasCustomDecoration
    java.lang.reflect.Method Window_setHasCustomDecoration -> Window_setHasCustomDecoration
    java.lang.reflect.Method WWindowPeer_setCustomDecorationHitTestSpots -> WWindowPeer_setCustomDecorationHitTestSpots
    java.lang.reflect.Method WWindowPeer_setCustomDecorationTitleBarHeight -> WWindowPeer_setCustomDecorationTitleBarHeight
    java.lang.reflect.Method AWTAccessor_getComponentAccessor -> AWTAccessor_getComponentAccessor
    java.lang.reflect.Method AWTAccessor_ComponentAccessor_getPeer -> AWTAccessor_ComponentAccessor_getPeer
    void <init>() -> <init>
    boolean isSupported() -> isSupported
    void install(javax.swing.JRootPane) -> install
    void install(java.awt.Window) -> install
    boolean hasCustomDecoration(java.awt.Window) -> hasCustomDecoration
    void setHasCustomDecoration(java.awt.Window) -> setHasCustomDecoration
    void setHitTestSpotsAndTitleBarHeight(java.awt.Window,java.util.List,int) -> setHitTestSpotsAndTitleBarHeight
    void initialize() -> initialize
com.formdev.flatlaf.ui.JBRCustomDecorations$1 -> com.formdev.flatlaf.ui.JBRCustomDecorations$1:
    javax.swing.JRootPane val$rootPane -> val$rootPane
    void <init>(javax.swing.JRootPane) -> <init>
    void hierarchyChanged(java.awt.event.HierarchyEvent) -> hierarchyChanged
    void lambda$hierarchyChanged$0(javax.swing.JRootPane) -> lambda$hierarchyChanged$0
com.formdev.flatlaf.ui.JBRCustomDecorations$JBRWindowTopBorder -> com.formdev.flatlaf.ui.JBRCustomDecorations$JBRWindowTopBorder:
    com.formdev.flatlaf.ui.JBRCustomDecorations$JBRWindowTopBorder instance -> instance
    java.awt.Color defaultActiveBorder -> defaultActiveBorder
    java.awt.Color inactiveLightColor -> inactiveLightColor
    java.awt.Color inactiveDarkColor -> inactiveDarkColor
    boolean colorizationAffectsBorders -> colorizationAffectsBorders
    java.awt.Color activeColor -> activeColor
    com.formdev.flatlaf.ui.JBRCustomDecorations$JBRWindowTopBorder getInstance() -> getInstance
    void <init>() -> <init>
    boolean calculateAffectsBorders() -> calculateAffectsBorders
    java.awt.Color calculateActiveBorderColor() -> calculateActiveBorderColor
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
    void paintImpl(java.awt.Graphics2D,int,int,int,int,double) -> paintImpl
    void repaintBorder(java.awt.Component) -> repaintBorder
    void lambda$new$1(java.beans.PropertyChangeEvent) -> lambda$new$1
    void lambda$new$0(java.beans.PropertyChangeEvent) -> lambda$new$0
com.formdev.flatlaf.ui.MigLayoutVisualPadding -> com.formdev.flatlaf.ui.MigLayoutVisualPadding:
    java.lang.String VISUAL_PADDING_PROPERTY -> VISUAL_PADDING_PROPERTY
    com.formdev.flatlaf.ui.MigLayoutVisualPadding$FlatMigInsets ZERO -> ZERO
    boolean migLayoutAvailable -> migLayoutAvailable
    void <init>() -> <init>
    void install(javax.swing.JComponent,java.awt.Insets) -> install
    void install(javax.swing.JComponent) -> install
    void install(javax.swing.JComponent,java.util.function.Function,java.lang.String[]) -> install
    void setVisualPadding(javax.swing.JComponent,java.awt.Insets) -> setVisualPadding
    void uninstall(javax.swing.JComponent) -> uninstall
    void lambda$install$1(java.lang.String[],javax.swing.JComponent,java.util.function.Function,java.beans.PropertyChangeEvent) -> lambda$install$1
    java.awt.Insets lambda$install$0(javax.swing.JComponent) -> lambda$install$0
    void <clinit>() -> <clinit>
com.formdev.flatlaf.ui.MigLayoutVisualPadding$FlatMigInsets -> com.formdev.flatlaf.ui.MigLayoutVisualPadding$FlatMigInsets:
    void <init>(int,int,int,int) -> <init>
com.formdev.flatlaf.ui.MigLayoutVisualPadding$FlatMigListener -> com.formdev.flatlaf.ui.MigLayoutVisualPadding$FlatMigListener:
com.formdev.flatlaf.util.Animator -> com.formdev.flatlaf.util.Animator:
    int duration -> duration
    int resolution -> resolution
    com.formdev.flatlaf.util.Animator$Interpolator interpolator -> interpolator
    java.util.ArrayList targets -> targets
    java.lang.Runnable endRunnable -> endRunnable
    boolean running -> running
    boolean hasBegun -> hasBegun
    boolean timeToStop -> timeToStop
    long startTime -> startTime
    javax.swing.Timer timer -> timer
    void <init>(int) -> <init>
    void <init>(int,com.formdev.flatlaf.util.Animator$TimingTarget) -> <init>
    void <init>(int,com.formdev.flatlaf.util.Animator$TimingTarget,java.lang.Runnable) -> <init>
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    int getResolution() -> getResolution
    void setResolution(int) -> setResolution
    com.formdev.flatlaf.util.Animator$Interpolator getInterpolator() -> getInterpolator
    void setInterpolator(com.formdev.flatlaf.util.Animator$Interpolator) -> setInterpolator
    void addTarget(com.formdev.flatlaf.util.Animator$TimingTarget) -> addTarget
    void removeTarget(com.formdev.flatlaf.util.Animator$TimingTarget) -> removeTarget
    void start() -> start
    void stop() -> stop
    void cancel() -> cancel
    void stop(boolean) -> stop
    boolean isRunning() -> isRunning
    float getTimingFraction() -> getTimingFraction
    float clampFraction(float) -> clampFraction
    void timingEvent(float) -> timingEvent
    void begin() -> begin
    void end() -> end
    void throwExceptionIfRunning() -> throwExceptionIfRunning
    void lambda$start$0(java.awt.event.ActionEvent) -> lambda$start$0
com.formdev.flatlaf.util.Animator$Interpolator -> com.formdev.flatlaf.util.Animator$Interpolator:
    float interpolate(float) -> interpolate
com.formdev.flatlaf.util.Animator$TimingTarget -> com.formdev.flatlaf.util.Animator$TimingTarget:
    void timingEvent(float) -> timingEvent
    void begin() -> begin
    void end() -> end
com.formdev.flatlaf.util.ColorFunctions -> com.formdev.flatlaf.util.ColorFunctions:
    void <init>() -> <init>
    java.awt.Color applyFunctions(java.awt.Color,com.formdev.flatlaf.util.ColorFunctions$ColorFunction[]) -> applyFunctions
    float clamp(float) -> clamp
com.formdev.flatlaf.util.ColorFunctions$ColorFunction -> com.formdev.flatlaf.util.ColorFunctions$ColorFunction:
    void apply(float[]) -> apply
com.formdev.flatlaf.util.ColorFunctions$HSLIncreaseDecrease -> com.formdev.flatlaf.util.ColorFunctions$HSLIncreaseDecrease:
    int hslIndex -> hslIndex
    boolean increase -> increase
    float amount -> amount
    boolean relative -> relative
    boolean autoInverse -> autoInverse
    void <init>(int,boolean,float,boolean,boolean) -> <init>
    void apply(float[]) -> apply
    boolean shouldInverse(float[]) -> shouldInverse
com.formdev.flatlaf.util.CubicBezierEasing -> com.formdev.flatlaf.util.CubicBezierEasing:
    com.formdev.flatlaf.util.CubicBezierEasing EASE -> EASE
    com.formdev.flatlaf.util.CubicBezierEasing EASE_IN -> EASE_IN
    com.formdev.flatlaf.util.CubicBezierEasing EASE_IN_OUT -> EASE_IN_OUT
    com.formdev.flatlaf.util.CubicBezierEasing EASE_OUT -> EASE_OUT
    float x1 -> x1
    float y1 -> y1
    float x2 -> x2
    float y2 -> y2
    void <init>(float,float,float,float) -> <init>
    float interpolate(float) -> interpolate
    float cubicBezier(float,float,float) -> cubicBezier
    void <clinit>() -> <clinit>
com.formdev.flatlaf.util.DerivedColor -> com.formdev.flatlaf.util.DerivedColor:
    com.formdev.flatlaf.util.ColorFunctions$ColorFunction[] functions -> functions
    boolean hasBaseOfDefaultColor -> hasBaseOfDefaultColor
    int baseOfDefaultColorRGB -> baseOfDefaultColorRGB
    void <init>(java.awt.Color,com.formdev.flatlaf.util.ColorFunctions$ColorFunction[]) -> <init>
    java.awt.Color derive(java.awt.Color) -> derive
    com.formdev.flatlaf.util.ColorFunctions$ColorFunction[] getFunctions() -> getFunctions
com.formdev.flatlaf.util.Graphics2DProxy -> com.formdev.flatlaf.util.Graphics2DProxy:
    java.awt.Graphics2D delegate -> delegate
    void <init>(java.awt.Graphics2D) -> <init>
    java.awt.Graphics create() -> create
    java.awt.Graphics create(int,int,int,int) -> create
    java.awt.Color getColor() -> getColor
    void setColor(java.awt.Color) -> setColor
    void setPaintMode() -> setPaintMode
    void setXORMode(java.awt.Color) -> setXORMode
    java.awt.Font getFont() -> getFont
    void setFont(java.awt.Font) -> setFont
    java.awt.FontMetrics getFontMetrics() -> getFontMetrics
    java.awt.FontMetrics getFontMetrics(java.awt.Font) -> getFontMetrics
    java.awt.Rectangle getClipBounds() -> getClipBounds
    void clipRect(int,int,int,int) -> clipRect
    void setClip(int,int,int,int) -> setClip
    java.awt.Shape getClip() -> getClip
    void setClip(java.awt.Shape) -> setClip
    void copyArea(int,int,int,int,int,int) -> copyArea
    void drawLine(int,int,int,int) -> drawLine
    void fillRect(int,int,int,int) -> fillRect
    void drawRect(int,int,int,int) -> drawRect
    void clearRect(int,int,int,int) -> clearRect
    void drawRoundRect(int,int,int,int,int,int) -> drawRoundRect
    void fillRoundRect(int,int,int,int,int,int) -> fillRoundRect
    void drawOval(int,int,int,int) -> drawOval
    void fillOval(int,int,int,int) -> fillOval
    void drawArc(int,int,int,int,int,int) -> drawArc
    void fillArc(int,int,int,int,int,int) -> fillArc
    void drawPolyline(int[],int[],int) -> drawPolyline
    void drawPolygon(int[],int[],int) -> drawPolygon
    void drawPolygon(java.awt.Polygon) -> drawPolygon
    void fillPolygon(int[],int[],int) -> fillPolygon
    void fillPolygon(java.awt.Polygon) -> fillPolygon
    void drawChars(char[],int,int,int,int) -> drawChars
    void drawBytes(byte[],int,int,int,int) -> drawBytes
    boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver) -> drawImage
    boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver) -> drawImage
    boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver) -> drawImage
    boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver) -> drawImage
    boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver) -> drawImage
    boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver) -> drawImage
    void dispose() -> dispose
    void finalize() -> finalize
    java.lang.String toString() -> toString
    java.awt.Rectangle getClipRect() -> getClipRect
    boolean hitClip(int,int,int,int) -> hitClip
    java.awt.Rectangle getClipBounds(java.awt.Rectangle) -> getClipBounds
    void draw3DRect(int,int,int,int,boolean) -> draw3DRect
    void fill3DRect(int,int,int,int,boolean) -> fill3DRect
    void draw(java.awt.Shape) -> draw
    boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver) -> drawImage
    void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int) -> drawImage
    void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform) -> drawRenderedImage
    void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform) -> drawRenderableImage
    void drawString(java.lang.String,int,int) -> drawString
    void drawString(java.lang.String,float,float) -> drawString
    void drawString(java.text.AttributedCharacterIterator,int,int) -> drawString
    void drawString(java.text.AttributedCharacterIterator,float,float) -> drawString
    void drawGlyphVector(java.awt.font.GlyphVector,float,float) -> drawGlyphVector
    void fill(java.awt.Shape) -> fill
    boolean hit(java.awt.Rectangle,java.awt.Shape,boolean) -> hit
    java.awt.GraphicsConfiguration getDeviceConfiguration() -> getDeviceConfiguration
    void setComposite(java.awt.Composite) -> setComposite
    void setPaint(java.awt.Paint) -> setPaint
    void setStroke(java.awt.Stroke) -> setStroke
    void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object) -> setRenderingHint
    java.lang.Object getRenderingHint(java.awt.RenderingHints$Key) -> getRenderingHint
    void setRenderingHints(java.util.Map) -> setRenderingHints
    void addRenderingHints(java.util.Map) -> addRenderingHints
    java.awt.RenderingHints getRenderingHints() -> getRenderingHints
    void translate(int,int) -> translate
    void translate(double,double) -> translate
    void rotate(double) -> rotate
    void rotate(double,double,double) -> rotate
    void scale(double,double) -> scale
    void shear(double,double) -> shear
    void transform(java.awt.geom.AffineTransform) -> transform
    void setTransform(java.awt.geom.AffineTransform) -> setTransform
    java.awt.geom.AffineTransform getTransform() -> getTransform
    java.awt.Paint getPaint() -> getPaint
    java.awt.Composite getComposite() -> getComposite
    void setBackground(java.awt.Color) -> setBackground
    java.awt.Color getBackground() -> getBackground
    java.awt.Stroke getStroke() -> getStroke
    void clip(java.awt.Shape) -> clip
    java.awt.font.FontRenderContext getFontRenderContext() -> getFontRenderContext
com.formdev.flatlaf.util.GrayFilter -> com.formdev.flatlaf.util.GrayFilter:
    float brightness -> brightness
    float contrast -> contrast
    int alpha -> alpha
    int origContrast -> origContrast
    int origBrightness -> origBrightness
    com.formdev.flatlaf.util.GrayFilter createDisabledIconFilter(boolean) -> createDisabledIconFilter
    void <init>(int,int,int) -> <init>
    void <init>() -> <init>
    int getBrightness() -> getBrightness
    int getContrast() -> getContrast
    int getAlpha() -> getAlpha
    int filterRGB(int,int,int) -> filterRGB
com.formdev.flatlaf.util.HSLColor -> com.formdev.flatlaf.util.HSLColor:
    java.awt.Color rgb -> rgb
    float[] hsl -> hsl
    float alpha -> alpha
    void <init>(java.awt.Color) -> <init>
    void <init>(float,float,float) -> <init>
    void <init>(float,float,float,float) -> <init>
    void <init>(float[]) -> <init>
    void <init>(float[],float) -> <init>
    java.awt.Color adjustHue(float) -> adjustHue
    java.awt.Color adjustLuminance(float) -> adjustLuminance
    java.awt.Color adjustSaturation(float) -> adjustSaturation
    java.awt.Color adjustShade(float) -> adjustShade
    java.awt.Color adjustTone(float) -> adjustTone
    float getAlpha() -> getAlpha
    java.awt.Color getComplementary() -> getComplementary
    float getHue() -> getHue
    float[] getHSL() -> getHSL
    float getLuminance() -> getLuminance
    java.awt.Color getRGB() -> getRGB
    float getSaturation() -> getSaturation
    java.lang.String toString() -> toString
    float[] fromRGB(java.awt.Color) -> fromRGB
    java.awt.Color toRGB(float[]) -> toRGB
    java.awt.Color toRGB(float[],float) -> toRGB
    java.awt.Color toRGB(float,float,float) -> toRGB
    java.awt.Color toRGB(float,float,float,float) -> toRGB
    float HueToRGB(float,float,float) -> HueToRGB
com.formdev.flatlaf.util.HiDPIUtils -> com.formdev.flatlaf.util.HiDPIUtils:
    java.lang.Boolean useTextYCorrection -> useTextYCorrection
    void <init>() -> <init>
    void paintAtScale1x(java.awt.Graphics2D,javax.swing.JComponent,com.formdev.flatlaf.util.HiDPIUtils$Painter) -> paintAtScale1x
    void paintAtScale1x(java.awt.Graphics2D,int,int,int,int,com.formdev.flatlaf.util.HiDPIUtils$Painter) -> paintAtScale1x
    java.awt.geom.Rectangle2D$Double scale(java.awt.geom.AffineTransform,int,int,int,int) -> scale
    double normalize(double) -> normalize
    boolean useTextYCorrection() -> useTextYCorrection
    float computeTextYCorrection(java.awt.Graphics2D) -> computeTextYCorrection
    void drawStringWithYCorrection(javax.swing.JComponent,java.awt.Graphics2D,java.lang.String,int,int) -> drawStringWithYCorrection
    void drawStringUnderlineCharAtWithYCorrection(javax.swing.JComponent,java.awt.Graphics2D,java.lang.String,int,int,int) -> drawStringUnderlineCharAtWithYCorrection
    java.awt.Graphics2D createGraphicsTextYCorrection(java.awt.Graphics2D) -> createGraphicsTextYCorrection
com.formdev.flatlaf.util.HiDPIUtils$1 -> com.formdev.flatlaf.util.HiDPIUtils$1:
    float val$yCorrection -> val$yCorrection
    void <init>(java.awt.Graphics2D,float) -> <init>
    void drawString(java.lang.String,int,int) -> drawString
    void drawString(java.lang.String,float,float) -> drawString
    void drawString(java.text.AttributedCharacterIterator,int,int) -> drawString
    void drawString(java.text.AttributedCharacterIterator,float,float) -> drawString
    void drawChars(char[],int,int,int,int) -> drawChars
    void drawBytes(byte[],int,int,int,int) -> drawBytes
    void drawGlyphVector(java.awt.font.GlyphVector,float,float) -> drawGlyphVector
com.formdev.flatlaf.util.HiDPIUtils$Painter -> com.formdev.flatlaf.util.HiDPIUtils$Painter:
    void paint(java.awt.Graphics2D,int,int,int,int,double) -> paint
com.formdev.flatlaf.util.JavaCompatibility -> com.formdev.flatlaf.util.JavaCompatibility:
    java.lang.reflect.Method drawStringUnderlineCharAtMethod -> drawStringUnderlineCharAtMethod
    void <init>() -> <init>
    void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int) -> drawStringUnderlineCharAt
com.formdev.flatlaf.util.MultiResolutionImageSupport -> com.formdev.flatlaf.util.MultiResolutionImageSupport:
    void <init>() -> <init>
    boolean isAvailable() -> isAvailable
    boolean isMultiResolutionImage(java.awt.Image) -> isMultiResolutionImage
    java.awt.Image create(int,java.awt.Image[]) -> create
    java.awt.Image map(java.awt.Image,java.util.function.Function) -> map
    java.awt.Image getResolutionVariant(java.awt.Image,int,int) -> getResolutionVariant
    java.util.List getResolutionVariants(java.awt.Image) -> getResolutionVariants
com.formdev.flatlaf.util.ScaledEmptyBorder -> com.formdev.flatlaf.util.ScaledEmptyBorder:
    void <init>(int,int,int,int) -> <init>
    void <init>(java.awt.Insets) -> <init>
    java.awt.Insets getBorderInsets() -> getBorderInsets
    java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets) -> getBorderInsets
com.formdev.flatlaf.util.ScaledImageIcon -> com.formdev.flatlaf.util.ScaledImageIcon:
    javax.swing.ImageIcon imageIcon -> imageIcon
    int iconWidth -> iconWidth
    int iconHeight -> iconHeight
    double lastSystemScaleFactor -> lastSystemScaleFactor
    float lastUserScaleFactor -> lastUserScaleFactor
    java.awt.Image lastImage -> lastImage
    void <init>(javax.swing.ImageIcon) -> <init>
    void <init>(javax.swing.ImageIcon,int,int) -> <init>
    int getIconWidth() -> getIconWidth
    int getIconHeight() -> getIconHeight
    void paintIcon(java.awt.Component,java.awt.Graphics,int,int) -> paintIcon
    java.awt.Image getResolutionVariant(int,int) -> getResolutionVariant
    void paintLastImage(java.awt.Graphics,int,int) -> paintLastImage
    java.awt.image.BufferedImage scaleImage(java.awt.image.BufferedImage,int,int,java.lang.Object) -> scaleImage
    java.awt.image.BufferedImage image2bufferedImage(java.awt.Image) -> image2bufferedImage
    void lambda$paintLastImage$0(java.awt.Graphics2D,int,int,int,int,double) -> lambda$paintLastImage$0
com.formdev.flatlaf.util.StringUtils -> com.formdev.flatlaf.util.StringUtils:
    void <init>() -> <init>
    java.lang.String removeLeading(java.lang.String,java.lang.String) -> removeLeading
    java.lang.String removeTrailing(java.lang.String,java.lang.String) -> removeTrailing
    java.util.List split(java.lang.String,char) -> split
com.formdev.flatlaf.util.SystemInfo -> com.formdev.flatlaf.util.SystemInfo:
    boolean isWindows -> isWindows
    boolean isMacOS -> isMacOS
    boolean isLinux -> isLinux
    long osVersion -> osVersion
    boolean isWindows_10_orLater -> isWindows_10_orLater
    boolean isMacOS_10_11_ElCapitan_orLater -> isMacOS_10_11_ElCapitan_orLater
    boolean isMacOS_10_14_Mojave_orLater -> isMacOS_10_14_Mojave_orLater
    boolean isMacOS_10_15_Catalina_orLater -> isMacOS_10_15_Catalina_orLater
    long javaVersion -> javaVersion
    boolean isJava_9_orLater -> isJava_9_orLater
    boolean isJava_11_orLater -> isJava_11_orLater
    boolean isJava_15_orLater -> isJava_15_orLater
    boolean isJetBrainsJVM -> isJetBrainsJVM
    boolean isJetBrainsJVM_11_orLater -> isJetBrainsJVM_11_orLater
    boolean isKDE -> isKDE
    void <init>() -> <init>
    long scanVersion(java.lang.String) -> scanVersion
    long toVersion(int,int,int,int) -> toVersion
    void <clinit>() -> <clinit>
com.formdev.flatlaf.util.UIScale -> com.formdev.flatlaf.util.UIScale:
    boolean DEBUG -> DEBUG
    java.beans.PropertyChangeSupport changeSupport -> changeSupport
    java.lang.Boolean jreHiDPI -> jreHiDPI
    float scaleFactor -> scaleFactor
    boolean initialized -> initialized
    void <init>() -> <init>
    void addPropertyChangeListener(java.beans.PropertyChangeListener) -> addPropertyChangeListener
    void removePropertyChangeListener(java.beans.PropertyChangeListener) -> removePropertyChangeListener
    boolean isSystemScalingEnabled() -> isSystemScalingEnabled
    double getSystemScaleFactor(java.awt.Graphics2D) -> getSystemScaleFactor
    double getSystemScaleFactor(java.awt.GraphicsConfiguration) -> getSystemScaleFactor
    void initialize() -> initialize
    void updateScaleFactor() -> updateScaleFactor
    float computeScaleFactor(java.awt.Font) -> computeScaleFactor
    boolean isUserScalingEnabled() -> isUserScalingEnabled
    javax.swing.plaf.FontUIResource applyCustomScaleFactor(javax.swing.plaf.FontUIResource) -> applyCustomScaleFactor
    float parseScaleFactor(java.lang.String) -> parseScaleFactor
    float getUserScaleFactor() -> getUserScaleFactor
    void setUserScaleFactor(float) -> setUserScaleFactor
    float scale(float) -> scale
    int scale(int) -> scale
    int scale2(int) -> scale2
    float unscale(float) -> unscale
    int unscale(int) -> unscale
    void scaleGraphics(java.awt.Graphics2D) -> scaleGraphics
    java.awt.Dimension scale(java.awt.Dimension) -> scale
    java.awt.Insets scale(java.awt.Insets) -> scale
    void access$000() -> access$000
    void <clinit>() -> <clinit>
com.formdev.flatlaf.util.UIScale$1 -> com.formdev.flatlaf.util.UIScale$1:
    void <init>() -> <init>
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
net.miginfocom.layout.AC -> net.miginfocom.layout.AC:
    java.util.ArrayList cList -> cList
    int curIx -> curIx
    void <init>() -> <init>
    net.miginfocom.layout.DimConstraint[] getConstaints() -> getConstaints
    void setConstaints(net.miginfocom.layout.DimConstraint[]) -> setConstaints
    int getCount() -> getCount
    net.miginfocom.layout.AC count(int) -> count
    net.miginfocom.layout.AC noGrid() -> noGrid
    net.miginfocom.layout.AC noGrid(int[]) -> noGrid
    net.miginfocom.layout.AC index(int) -> index
    net.miginfocom.layout.AC fill() -> fill
    net.miginfocom.layout.AC fill(int[]) -> fill
    net.miginfocom.layout.AC sizeGroup() -> sizeGroup
    net.miginfocom.layout.AC sizeGroup(java.lang.String) -> sizeGroup
    net.miginfocom.layout.AC sizeGroup(java.lang.String,int[]) -> sizeGroup
    net.miginfocom.layout.AC size(java.lang.String) -> size
    net.miginfocom.layout.AC size(java.lang.String,int[]) -> size
    net.miginfocom.layout.AC gap() -> gap
    net.miginfocom.layout.AC gap(java.lang.String) -> gap
    net.miginfocom.layout.AC gap(java.lang.String,int[]) -> gap
    net.miginfocom.layout.AC align(java.lang.String) -> align
    net.miginfocom.layout.AC align(java.lang.String,int[]) -> align
    net.miginfocom.layout.AC growPrio(int) -> growPrio
    net.miginfocom.layout.AC growPrio(int,int[]) -> growPrio
    net.miginfocom.layout.AC grow() -> grow
    net.miginfocom.layout.AC grow(float) -> grow
    net.miginfocom.layout.AC grow(float,int[]) -> grow
    net.miginfocom.layout.AC shrinkPrio(int) -> shrinkPrio
    net.miginfocom.layout.AC shrinkPrio(int,int[]) -> shrinkPrio
    net.miginfocom.layout.AC shrink() -> shrink
    net.miginfocom.layout.AC shrink(float) -> shrink
    net.miginfocom.layout.AC shrink(float,int[]) -> shrink
    net.miginfocom.layout.AC shrinkWeight(float) -> shrinkWeight
    net.miginfocom.layout.AC shrinkWeight(float,int[]) -> shrinkWeight
    void makeSize(int) -> makeSize
    java.lang.Object readResolve() -> readResolve
    void readExternal(java.io.ObjectInput) -> readExternal
    void writeExternal(java.io.ObjectOutput) -> writeExternal
net.miginfocom.layout.AnimSpec -> net.miginfocom.layout.AnimSpec:
    net.miginfocom.layout.AnimSpec DEF -> DEF
    int prio -> prio
    int durMillis -> durMillis
    float easeIn -> easeIn
    float easeOut -> easeOut
    void <init>(int,int,float,float) -> <init>
    int getPriority() -> getPriority
    int getDurationMillis(int) -> getDurationMillis
    int getDurationMillis() -> getDurationMillis
    float getEaseIn() -> getEaseIn
    float getEaseOut() -> getEaseOut
    void <clinit>() -> <clinit>
net.miginfocom.layout.BoundSize -> net.miginfocom.layout.BoundSize:
    net.miginfocom.layout.BoundSize NULL_SIZE -> NULL_SIZE
    net.miginfocom.layout.BoundSize ZERO_PIXEL -> ZERO_PIXEL
    net.miginfocom.layout.UnitValue min -> min
    net.miginfocom.layout.UnitValue pref -> pref
    net.miginfocom.layout.UnitValue max -> max
    boolean gapPush -> gapPush
    long serialVersionUID -> serialVersionUID
    void <init>(net.miginfocom.layout.UnitValue,java.lang.String) -> <init>
    void <init>(net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,java.lang.String) -> <init>
    void <init>(net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,boolean,java.lang.String) -> <init>
    net.miginfocom.layout.UnitValue getMin() -> getMin
    net.miginfocom.layout.UnitValue getPreferred() -> getPreferred
    net.miginfocom.layout.UnitValue getMax() -> getMax
    boolean getGapPush() -> getGapPush
    boolean isUnset() -> isUnset
    int constrain(int,float,net.miginfocom.layout.ContainerWrapper) -> constrain
    net.miginfocom.layout.UnitValue getSize(int) -> getSize
    int[] getPixelSizes(float,net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.ComponentWrapper) -> getPixelSizes
    java.lang.String getConstraintString() -> getConstraintString
    void checkNotLinked() -> checkNotLinked
    boolean isLinked() -> isLinked
    boolean isAbsolute() -> isAbsolute
    java.lang.String toString() -> toString
    java.lang.Object readResolve() -> readResolve
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    void <clinit>() -> <clinit>
net.miginfocom.layout.BoundSize$1 -> net.miginfocom.layout.BoundSize$1:
    void <init>() -> <init>
    java.beans.Expression instantiate(java.lang.Object,java.beans.Encoder) -> instantiate
net.miginfocom.layout.CC -> net.miginfocom.layout.CC:
    net.miginfocom.layout.BoundSize DEF_GAP -> DEF_GAP
    java.lang.String[] DOCK_SIDES -> DOCK_SIDES
    int dock -> dock
    net.miginfocom.layout.UnitValue[] pos -> pos
    net.miginfocom.layout.UnitValue[] padding -> padding
    net.miginfocom.layout.UnitValue[] visualPadding -> visualPadding
    java.lang.Boolean flowX -> flowX
    int skip -> skip
    int split -> split
    int spanX -> spanX
    int spanY -> spanY
    int cellX -> cellX
    int cellY -> cellY
    java.lang.String tag -> tag
    java.lang.String id -> id
    int hideMode -> hideMode
    net.miginfocom.layout.DimConstraint hor -> hor
    net.miginfocom.layout.DimConstraint ver -> ver
    net.miginfocom.layout.BoundSize newline -> newline
    net.miginfocom.layout.BoundSize wrap -> wrap
    boolean boundsInGrid -> boundsInGrid
    boolean external -> external
    java.lang.Float pushX -> pushX
    java.lang.Float pushY -> pushY
    net.miginfocom.layout.AnimSpec animSpec -> animSpec
    java.lang.String[] EMPTY_ARR -> EMPTY_ARR
    java.lang.String[] linkTargets -> linkTargets
    void <init>() -> <init>
    java.lang.String[] getLinkTargets() -> getLinkTargets
    void addLinkTargetIDs(java.util.ArrayList,net.miginfocom.layout.UnitValue) -> addLinkTargetIDs
    net.miginfocom.layout.CC endGroupX(java.lang.String) -> endGroupX
    net.miginfocom.layout.CC sizeGroupX(java.lang.String) -> sizeGroupX
    net.miginfocom.layout.CC minWidth(java.lang.String) -> minWidth
    net.miginfocom.layout.CC width(java.lang.String) -> width
    net.miginfocom.layout.CC maxWidth(java.lang.String) -> maxWidth
    net.miginfocom.layout.CC gapX(java.lang.String,java.lang.String) -> gapX
    net.miginfocom.layout.CC alignX(java.lang.String) -> alignX
    net.miginfocom.layout.CC growPrioX(int) -> growPrioX
    net.miginfocom.layout.CC growPrio(int[]) -> growPrio
    net.miginfocom.layout.CC growX() -> growX
    net.miginfocom.layout.CC growX(float) -> growX
    net.miginfocom.layout.CC grow(float[]) -> grow
    net.miginfocom.layout.CC shrinkPrioX(int) -> shrinkPrioX
    net.miginfocom.layout.CC shrinkPrio(int[]) -> shrinkPrio
    net.miginfocom.layout.CC shrinkX(float) -> shrinkX
    net.miginfocom.layout.CC shrink(float[]) -> shrink
    net.miginfocom.layout.CC endGroupY(java.lang.String) -> endGroupY
    net.miginfocom.layout.CC endGroup(java.lang.String[]) -> endGroup
    net.miginfocom.layout.CC sizeGroupY(java.lang.String) -> sizeGroupY
    net.miginfocom.layout.CC sizeGroup(java.lang.String[]) -> sizeGroup
    net.miginfocom.layout.CC minHeight(java.lang.String) -> minHeight
    net.miginfocom.layout.CC height(java.lang.String) -> height
    net.miginfocom.layout.CC maxHeight(java.lang.String) -> maxHeight
    net.miginfocom.layout.CC gapY(java.lang.String,java.lang.String) -> gapY
    net.miginfocom.layout.CC alignY(java.lang.String) -> alignY
    net.miginfocom.layout.CC growPrioY(int) -> growPrioY
    net.miginfocom.layout.CC growY() -> growY
    net.miginfocom.layout.CC growY(float) -> growY
    net.miginfocom.layout.CC growY(java.lang.Float) -> growY
    net.miginfocom.layout.CC shrinkPrioY(int) -> shrinkPrioY
    net.miginfocom.layout.CC shrinkY(float) -> shrinkY
    net.miginfocom.layout.CC hideMode(int) -> hideMode
    net.miginfocom.layout.CC id(java.lang.String) -> id
    net.miginfocom.layout.CC tag(java.lang.String) -> tag
    net.miginfocom.layout.CC cell(int[]) -> cell
    net.miginfocom.layout.CC span(int[]) -> span
    net.miginfocom.layout.CC gap(java.lang.String[]) -> gap
    net.miginfocom.layout.CC gapBefore(java.lang.String) -> gapBefore
    net.miginfocom.layout.CC gapAfter(java.lang.String) -> gapAfter
    net.miginfocom.layout.CC gapTop(java.lang.String) -> gapTop
    net.miginfocom.layout.CC gapLeft(java.lang.String) -> gapLeft
    net.miginfocom.layout.CC gapBottom(java.lang.String) -> gapBottom
    net.miginfocom.layout.CC gapRight(java.lang.String) -> gapRight
    net.miginfocom.layout.CC spanY() -> spanY
    net.miginfocom.layout.CC spanY(int) -> spanY
    net.miginfocom.layout.CC spanX() -> spanX
    net.miginfocom.layout.CC spanX(int) -> spanX
    net.miginfocom.layout.CC push() -> push
    net.miginfocom.layout.CC push(java.lang.Float,java.lang.Float) -> push
    net.miginfocom.layout.CC pushY() -> pushY
    net.miginfocom.layout.CC pushY(java.lang.Float) -> pushY
    net.miginfocom.layout.CC pushX() -> pushX
    net.miginfocom.layout.CC pushX(java.lang.Float) -> pushX
    net.miginfocom.layout.CC split(int) -> split
    net.miginfocom.layout.CC split() -> split
    net.miginfocom.layout.CC skip(int) -> skip
    net.miginfocom.layout.CC skip() -> skip
    net.miginfocom.layout.CC external() -> external
    net.miginfocom.layout.CC flowX() -> flowX
    net.miginfocom.layout.CC flowY() -> flowY
    net.miginfocom.layout.CC grow() -> grow
    net.miginfocom.layout.CC newline() -> newline
    net.miginfocom.layout.CC newline(java.lang.String) -> newline
    net.miginfocom.layout.CC wrap() -> wrap
    net.miginfocom.layout.CC wrap(java.lang.String) -> wrap
    net.miginfocom.layout.CC dockNorth() -> dockNorth
    net.miginfocom.layout.CC dockWest() -> dockWest
    net.miginfocom.layout.CC dockSouth() -> dockSouth
    net.miginfocom.layout.CC dockEast() -> dockEast
    net.miginfocom.layout.CC x(java.lang.String) -> x
    net.miginfocom.layout.CC y(java.lang.String) -> y
    net.miginfocom.layout.CC x2(java.lang.String) -> x2
    net.miginfocom.layout.CC y2(java.lang.String) -> y2
    net.miginfocom.layout.CC corrPos(java.lang.String,int) -> corrPos
    net.miginfocom.layout.CC pos(java.lang.String,java.lang.String) -> pos
    net.miginfocom.layout.CC pos(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> pos
    net.miginfocom.layout.CC pad(int,int,int,int) -> pad
    net.miginfocom.layout.CC pad(java.lang.String) -> pad
    net.miginfocom.layout.DimConstraint getHorizontal() -> getHorizontal
    void setHorizontal(net.miginfocom.layout.DimConstraint) -> setHorizontal
    net.miginfocom.layout.DimConstraint getVertical() -> getVertical
    void setVertical(net.miginfocom.layout.DimConstraint) -> setVertical
    net.miginfocom.layout.DimConstraint getDimConstraint(boolean) -> getDimConstraint
    net.miginfocom.layout.UnitValue[] getPos() -> getPos
    void setPos(net.miginfocom.layout.UnitValue[]) -> setPos
    boolean isBoundsInGrid() -> isBoundsInGrid
    void setBoundsInGrid(boolean) -> setBoundsInGrid
    int getCellX() -> getCellX
    void setCellX(int) -> setCellX
    int getCellY() -> getCellY
    void setCellY(int) -> setCellY
    int getDockSide() -> getDockSide
    void setDockSide(int) -> setDockSide
    boolean isExternal() -> isExternal
    void setExternal(boolean) -> setExternal
    java.lang.Boolean getFlowX() -> getFlowX
    void setFlowX(java.lang.Boolean) -> setFlowX
    int getHideMode() -> getHideMode
    void setHideMode(int) -> setHideMode
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    net.miginfocom.layout.UnitValue[] getPadding() -> getPadding
    void setPadding(net.miginfocom.layout.UnitValue[]) -> setPadding
    net.miginfocom.layout.UnitValue[] getVisualPadding() -> getVisualPadding
    void setVisualPadding(net.miginfocom.layout.UnitValue[]) -> setVisualPadding
    int getSkip() -> getSkip
    void setSkip(int) -> setSkip
    int getSpanX() -> getSpanX
    void setSpanX(int) -> setSpanX
    int getSpanY() -> getSpanY
    void setSpanY(int) -> setSpanY
    java.lang.Float getPushX() -> getPushX
    void setPushX(java.lang.Float) -> setPushX
    java.lang.Float getPushY() -> getPushY
    void setPushY(java.lang.Float) -> setPushY
    int getSplit() -> getSplit
    void setSplit(int) -> setSplit
    java.lang.String getTag() -> getTag
    void setTag(java.lang.String) -> setTag
    boolean isWrap() -> isWrap
    void setWrap(boolean) -> setWrap
    net.miginfocom.layout.BoundSize getWrapGapSize() -> getWrapGapSize
    void setWrapGapSize(net.miginfocom.layout.BoundSize) -> setWrapGapSize
    boolean isNewline() -> isNewline
    void setNewline(boolean) -> setNewline
    net.miginfocom.layout.BoundSize getNewlineGapSize() -> getNewlineGapSize
    void setNewlineGapSize(net.miginfocom.layout.BoundSize) -> setNewlineGapSize
    net.miginfocom.layout.AnimSpec getAnimSpec() -> getAnimSpec
    java.lang.Object readResolve() -> readResolve
    void readExternal(java.io.ObjectInput) -> readExternal
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void <clinit>() -> <clinit>
net.miginfocom.layout.ComponentWrapper -> net.miginfocom.layout.ComponentWrapper:
    int TYPE_UNSET -> TYPE_UNSET
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_CONTAINER -> TYPE_CONTAINER
    int TYPE_LABEL -> TYPE_LABEL
    int TYPE_TEXT_FIELD -> TYPE_TEXT_FIELD
    int TYPE_TEXT_AREA -> TYPE_TEXT_AREA
    int TYPE_BUTTON -> TYPE_BUTTON
    int TYPE_LIST -> TYPE_LIST
    int TYPE_TABLE -> TYPE_TABLE
    int TYPE_SCROLL_PANE -> TYPE_SCROLL_PANE
    int TYPE_IMAGE -> TYPE_IMAGE
    int TYPE_PANEL -> TYPE_PANEL
    int TYPE_COMBO_BOX -> TYPE_COMBO_BOX
    int TYPE_SLIDER -> TYPE_SLIDER
    int TYPE_SPINNER -> TYPE_SPINNER
    int TYPE_PROGRESS_BAR -> TYPE_PROGRESS_BAR
    int TYPE_TREE -> TYPE_TREE
    int TYPE_CHECK_BOX -> TYPE_CHECK_BOX
    int TYPE_SCROLL_BAR -> TYPE_SCROLL_BAR
    int TYPE_SEPARATOR -> TYPE_SEPARATOR
    int TYPE_TABBED_PANE -> TYPE_TABBED_PANE
    java.lang.Object getComponent() -> getComponent
    int getX() -> getX
    int getY() -> getY
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getScreenLocationX() -> getScreenLocationX
    int getScreenLocationY() -> getScreenLocationY
    int getMinimumWidth(int) -> getMinimumWidth
    int getMinimumHeight(int) -> getMinimumHeight
    int getPreferredWidth(int) -> getPreferredWidth
    int getPreferredHeight(int) -> getPreferredHeight
    int getMaximumWidth(int) -> getMaximumWidth
    int getMaximumHeight(int) -> getMaximumHeight
    void setBounds(int,int,int,int) -> setBounds
    boolean isVisible() -> isVisible
    int getBaseline(int,int) -> getBaseline
    boolean hasBaseline() -> hasBaseline
    net.miginfocom.layout.ContainerWrapper getParent() -> getParent
    float getPixelUnitFactor(boolean) -> getPixelUnitFactor
    int getHorizontalScreenDPI() -> getHorizontalScreenDPI
    int getVerticalScreenDPI() -> getVerticalScreenDPI
    int getScreenWidth() -> getScreenWidth
    int getScreenHeight() -> getScreenHeight
    java.lang.String getLinkId() -> getLinkId
    int getLayoutHashCode() -> getLayoutHashCode
    int[] getVisualPadding() -> getVisualPadding
    void paintDebugOutline(boolean) -> paintDebugOutline
    int getComponentType(boolean) -> getComponentType
    int getContentBias() -> getContentBias
net.miginfocom.layout.ConstraintParser -> net.miginfocom.layout.ConstraintParser:
    void <init>() -> <init>
    net.miginfocom.layout.LC parseLayoutConstraint(java.lang.String) -> parseLayoutConstraint
    net.miginfocom.layout.AC parseRowConstraints(java.lang.String) -> parseRowConstraints
    net.miginfocom.layout.AC parseColumnConstraints(java.lang.String) -> parseColumnConstraints
    net.miginfocom.layout.AC parseAxisConstraint(java.lang.String,boolean) -> parseAxisConstraint
    net.miginfocom.layout.DimConstraint parseDimConstraint(java.lang.String,net.miginfocom.layout.BoundSize,net.miginfocom.layout.BoundSize,boolean) -> parseDimConstraint
    java.util.Map parseComponentConstraints(java.util.Map) -> parseComponentConstraints
    net.miginfocom.layout.CC parseComponentConstraint(java.lang.String) -> parseComponentConstraint
    net.miginfocom.layout.UnitValue[] parseInsets(java.lang.String,boolean) -> parseInsets
    net.miginfocom.layout.BoundSize[] parseGaps(java.lang.String) -> parseGaps
    int parseSpan(java.lang.String) -> parseSpan
    java.lang.Float parseFloat(java.lang.String,java.lang.Float) -> parseFloat
    net.miginfocom.layout.BoundSize parseBoundSize(java.lang.String,boolean,boolean) -> parseBoundSize
    net.miginfocom.layout.UnitValue parseUnitValueOrAlign(java.lang.String,boolean,net.miginfocom.layout.UnitValue) -> parseUnitValueOrAlign
    net.miginfocom.layout.UnitValue parseUnitValue(java.lang.String,boolean) -> parseUnitValue
    net.miginfocom.layout.UnitValue parseUnitValue(java.lang.String,net.miginfocom.layout.UnitValue,boolean) -> parseUnitValue
    net.miginfocom.layout.UnitValue parseAlignKeywords(java.lang.String,boolean) -> parseAlignKeywords
    java.lang.String[] getNumTextParts(java.lang.String) -> getNumTextParts
    int getOper(java.lang.String) -> getOper
    int startsWithLenient(java.lang.String,java.lang.String[],int[],boolean) -> startsWithLenient
    int startsWithLenient(java.lang.String,java.lang.String,int,boolean) -> startsWithLenient
    java.lang.String[] toTrimmedTokens(java.lang.String,char) -> toTrimmedTokens
    java.util.ArrayList getRowColAndGapsTrimmed(java.lang.String) -> getRowColAndGapsTrimmed
    java.lang.String prepare(java.lang.String) -> prepare
net.miginfocom.layout.ContainerWrapper -> net.miginfocom.layout.ContainerWrapper:
    net.miginfocom.layout.ComponentWrapper[] getComponents() -> getComponents
    int getComponentCount() -> getComponentCount
    java.lang.Object getLayout() -> getLayout
    boolean isLeftToRight() -> isLeftToRight
    void paintDebugCell(int,int,int,int) -> paintDebugCell
net.miginfocom.layout.DimConstraint -> net.miginfocom.layout.DimConstraint:
    net.miginfocom.layout.ResizeConstraint resize -> resize
    java.lang.String sizeGroup -> sizeGroup
    net.miginfocom.layout.BoundSize size -> size
    net.miginfocom.layout.BoundSize gapBefore -> gapBefore
    net.miginfocom.layout.BoundSize gapAfter -> gapAfter
    net.miginfocom.layout.UnitValue align -> align
    java.lang.String endGroup -> endGroup
    boolean fill -> fill
    boolean noGrid -> noGrid
    void <init>() -> <init>
    int getGrowPriority() -> getGrowPriority
    void setGrowPriority(int) -> setGrowPriority
    java.lang.Float getGrow() -> getGrow
    void setGrow(java.lang.Float) -> setGrow
    int getShrinkPriority() -> getShrinkPriority
    void setShrinkPriority(int) -> setShrinkPriority
    java.lang.Float getShrink() -> getShrink
    void setShrink(java.lang.Float) -> setShrink
    net.miginfocom.layout.UnitValue getAlignOrDefault(boolean) -> getAlignOrDefault
    net.miginfocom.layout.UnitValue getAlign() -> getAlign
    void setAlign(net.miginfocom.layout.UnitValue) -> setAlign
    net.miginfocom.layout.BoundSize getGapAfter() -> getGapAfter
    void setGapAfter(net.miginfocom.layout.BoundSize) -> setGapAfter
    boolean hasGapAfter() -> hasGapAfter
    boolean isGapAfterPush() -> isGapAfterPush
    net.miginfocom.layout.BoundSize getGapBefore() -> getGapBefore
    void setGapBefore(net.miginfocom.layout.BoundSize) -> setGapBefore
    boolean hasGapBefore() -> hasGapBefore
    boolean isGapBeforePush() -> isGapBeforePush
    net.miginfocom.layout.BoundSize getSize() -> getSize
    void setSize(net.miginfocom.layout.BoundSize) -> setSize
    java.lang.String getSizeGroup() -> getSizeGroup
    void setSizeGroup(java.lang.String) -> setSizeGroup
    java.lang.String getEndGroup() -> getEndGroup
    void setEndGroup(java.lang.String) -> setEndGroup
    boolean isFill() -> isFill
    void setFill(boolean) -> setFill
    boolean isNoGrid() -> isNoGrid
    void setNoGrid(boolean) -> setNoGrid
    int[] getRowGaps(net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.BoundSize,int,boolean) -> getRowGaps
    int[] getComponentGaps(net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.BoundSize,net.miginfocom.layout.ComponentWrapper,java.lang.String,int,int,boolean) -> getComponentGaps
    java.lang.Object readResolve() -> readResolve
    void readExternal(java.io.ObjectInput) -> readExternal
    void writeExternal(java.io.ObjectOutput) -> writeExternal
net.miginfocom.layout.Grid -> net.miginfocom.layout.Grid:
    boolean TEST_GAPS -> TEST_GAPS
    java.lang.Float[] GROW_100 -> GROW_100
    net.miginfocom.layout.DimConstraint DOCK_DIM_CONSTRAINT -> DOCK_DIM_CONSTRAINT
    int MAX_GRID -> MAX_GRID
    int MAX_DOCK_GRID -> MAX_DOCK_GRID
    net.miginfocom.layout.ResizeConstraint GAP_RC_CONST -> GAP_RC_CONST
    net.miginfocom.layout.ResizeConstraint GAP_RC_CONST_PUSH -> GAP_RC_CONST_PUSH
    net.miginfocom.layout.CC DEF_CC -> DEF_CC
    net.miginfocom.layout.LC lc -> lc
    net.miginfocom.layout.ContainerWrapper container -> container
    java.util.LinkedHashMap grid -> grid
    java.util.HashMap wrapGapMap -> wrapGapMap
    java.util.TreeSet rowIndexes -> rowIndexes
    java.util.TreeSet colIndexes -> colIndexes
    net.miginfocom.layout.AC rowConstr -> rowConstr
    net.miginfocom.layout.AC colConstr -> colConstr
    net.miginfocom.layout.Grid$FlowSizeSpec colFlowSpecs -> colFlowSpecs
    net.miginfocom.layout.Grid$FlowSizeSpec rowFlowSpecs -> rowFlowSpecs
    java.util.ArrayList[] colGroupLists -> colGroupLists
    java.util.ArrayList[] rowGroupLists -> rowGroupLists
    int[] width -> width
    int[] height -> height
    java.util.ArrayList debugRects -> debugRects
    java.util.HashMap linkTargetIDs -> linkTargetIDs
    int dockOffY -> dockOffY
    int dockOffX -> dockOffX
    java.lang.Float[] pushXs -> pushXs
    java.lang.Float[] pushYs -> pushYs
    java.util.ArrayList callbackList -> callbackList
    int lastRefWidth -> lastRefWidth
    int lastRefHeight -> lastRefHeight
    java.util.WeakHashMap[] PARENT_ROWCOL_SIZES_MAP -> PARENT_ROWCOL_SIZES_MAP
    java.util.WeakHashMap PARENT_GRIDPOS_MAP -> PARENT_GRIDPOS_MAP
    void <init>(net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.LC,net.miginfocom.layout.AC,net.miginfocom.layout.AC,java.util.Map,java.util.ArrayList) -> <init>
    void ensureIndexSizes(int,int) -> ensureIndexSizes
    net.miginfocom.layout.CC getCC(net.miginfocom.layout.ComponentWrapper,java.util.Map) -> getCC
    void addLinkIDs(net.miginfocom.layout.CC) -> addLinkIDs
    void invalidateContainerSize() -> invalidateContainerSize
    void invalidateComponentSizes() -> invalidateComponentSizes
    boolean layout(int[],net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,boolean,boolean) -> layout
    boolean layout(int[],net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,boolean) -> layout
    boolean layoutImpl(int[],net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,boolean,boolean) -> layoutImpl
    void paintDebug() -> paintDebug
    net.miginfocom.layout.ContainerWrapper getContainer() -> getContainer
    int[] getWidth() -> getWidth
    int[] getWidth(int) -> getWidth
    int[] getHeight() -> getHeight
    int[] getHeight(int) -> getHeight
    void checkSizeCalcs(int,int) -> checkSizeCalcs
    void calcGridSizes(int,int) -> calcGridSizes
    net.miginfocom.layout.UnitValue[] getPos(net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.CC) -> getPos
    net.miginfocom.layout.BoundSize[] getCallbackSize(net.miginfocom.layout.ComponentWrapper) -> getCallbackSize
    int getDockInsets(java.util.TreeSet) -> getDockInsets
    boolean setLinkedBounds(net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.CC,int,int,int,int,boolean) -> setLinkedBounds
    int increase(int[],int) -> increase
    void wrap(int[],net.miginfocom.layout.BoundSize) -> wrap
    void sortCellsByPlatform(java.util.Collection,net.miginfocom.layout.ContainerWrapper) -> sortCellsByPlatform
    java.lang.Float[] getDefaultPushWeights(boolean) -> getDefaultPushWeights
    void clearGroupLinkBounds() -> clearGroupLinkBounds
    void resetLinkValues(boolean,boolean) -> resetLinkValues
    net.miginfocom.layout.Grid$LinkedDimGroup getGroupContaining(java.util.ArrayList[],net.miginfocom.layout.Grid$CompWrap) -> getGroupContaining
    boolean doAbsoluteCorrections(net.miginfocom.layout.Grid$CompWrap,int[]) -> doAbsoluteCorrections
    void adjustSizeForAbsolute(boolean) -> adjustSizeForAbsolute
    int[] getAbsoluteDimBounds(net.miginfocom.layout.Grid$CompWrap,int,boolean) -> getAbsoluteDimBounds
    void layoutInOneDim(int,net.miginfocom.layout.UnitValue,boolean,java.lang.Float[]) -> layoutInOneDim
    void addToSizeGroup(java.util.HashMap,java.lang.String,int[]) -> addToSizeGroup
    java.util.HashMap addToEndGroup(java.util.HashMap,java.lang.String,int) -> addToEndGroup
    net.miginfocom.layout.Grid$FlowSizeSpec calcRowsOrColsSizes(boolean,int) -> calcRowsOrColsSizes
    int getParentSize(net.miginfocom.layout.ComponentWrapper,boolean) -> getParentSize
    int[] getMinPrefMaxSumSize(boolean,int[][]) -> getMinPrefMaxSumSize
    net.miginfocom.layout.ResizeConstraint[] getRowResizeConstraints(net.miginfocom.layout.DimConstraint[]) -> getRowResizeConstraints
    net.miginfocom.layout.ResizeConstraint[] getComponentResizeConstraints(java.util.ArrayList,boolean) -> getComponentResizeConstraints
    boolean[] getComponentGapPush(java.util.ArrayList,boolean) -> getComponentGapPush
    int[][] getRowGaps(net.miginfocom.layout.DimConstraint[],int,boolean,boolean[]) -> getRowGaps
    int[][] getGaps(java.util.ArrayList,boolean) -> getGaps
    boolean hasDocks() -> hasDocks
    void adjustMinPrefForSpanningComps(net.miginfocom.layout.DimConstraint[],java.lang.Float[],net.miginfocom.layout.Grid$FlowSizeSpec,java.util.ArrayList[]) -> adjustMinPrefForSpanningComps
    java.util.ArrayList[] divideIntoLinkedGroups(boolean) -> divideIntoLinkedGroups
    int convertSpanToSparseGrid(int,int,java.util.TreeSet) -> convertSpanToSparseGrid
    boolean isCellFree(int,int,java.util.ArrayList) -> isCellFree
    net.miginfocom.layout.Grid$Cell getCell(int,int) -> getCell
    void setCell(int,int,net.miginfocom.layout.Grid$Cell) -> setCell
    void addDockingCell(int[],int,net.miginfocom.layout.Grid$CompWrap) -> addDockingCell
    void layoutBaseline(net.miginfocom.layout.ContainerWrapper,java.util.ArrayList,net.miginfocom.layout.DimConstraint,int,int,int,int) -> layoutBaseline
    void layoutSerial(net.miginfocom.layout.ContainerWrapper,java.util.ArrayList,net.miginfocom.layout.DimConstraint,int,int,boolean,int,boolean) -> layoutSerial
    void setCompWrapBounds(net.miginfocom.layout.ContainerWrapper,int[],java.util.ArrayList,net.miginfocom.layout.UnitValue,int,int,boolean,boolean) -> setCompWrapBounds
    void layoutParallel(net.miginfocom.layout.ContainerWrapper,java.util.ArrayList,net.miginfocom.layout.DimConstraint,int,int,boolean,boolean) -> layoutParallel
    void setCompWrapBounds(net.miginfocom.layout.ContainerWrapper,int[][],java.util.ArrayList,net.miginfocom.layout.UnitValue,int,int,boolean,boolean) -> setCompWrapBounds
    net.miginfocom.layout.UnitValue correctAlign(net.miginfocom.layout.CC,net.miginfocom.layout.UnitValue,boolean,boolean) -> correctAlign
    net.miginfocom.layout.Grid$AboveBelow getBaselineAboveBelow(java.util.ArrayList,int,boolean) -> getBaselineAboveBelow
    int getTotalSizeParallel(java.util.ArrayList,int,boolean) -> getTotalSizeParallel
    int getTotalSizeSerial(java.util.ArrayList,int,boolean) -> getTotalSizeSerial
    int getTotalGroupsSizeParallel(java.util.ArrayList,int,boolean) -> getTotalGroupsSizeParallel
    int[][] getComponentSizes(java.util.ArrayList,boolean) -> getComponentSizes
    net.miginfocom.layout.Grid$FlowSizeSpec mergeSizesGapsAndResConstrs(net.miginfocom.layout.ResizeConstraint[],boolean[],int[][],int[][]) -> mergeSizesGapsAndResConstrs
    int[] mergeSizes(int[],int[]) -> mergeSizes
    int mergeSizes(int,int,boolean) -> mergeSizes
    int constrainSize(int) -> constrainSize
    void correctMinMax(int[]) -> correctMinMax
    java.lang.Float[] extractSubArray(net.miginfocom.layout.DimConstraint[],java.lang.Float[],int,int) -> extractSubArray
    void putSizesAndIndexes(java.lang.Object,int[],int[],boolean) -> putSizesAndIndexes
    int[][] getSizesAndIndexes(java.lang.Object,boolean) -> getSizesAndIndexes
    void saveGrid(net.miginfocom.layout.ComponentWrapper,java.util.LinkedHashMap) -> saveGrid
    java.util.HashMap getGridPositions(java.lang.Object) -> getGridPositions
    void access$4100(net.miginfocom.layout.ContainerWrapper,java.util.ArrayList,net.miginfocom.layout.DimConstraint,int,int,boolean,boolean) -> access$4100
    void access$4200(net.miginfocom.layout.ContainerWrapper,java.util.ArrayList,net.miginfocom.layout.DimConstraint,int,int,int,int) -> access$4200
    void access$4300(net.miginfocom.layout.ContainerWrapper,java.util.ArrayList,net.miginfocom.layout.DimConstraint,int,int,boolean,int,boolean) -> access$4300
    int access$4400(java.util.ArrayList,int,boolean) -> access$4400
    net.miginfocom.layout.Grid$AboveBelow access$4500(java.util.ArrayList,int,boolean) -> access$4500
    int access$4600(java.util.ArrayList,int,boolean) -> access$4600
    net.miginfocom.layout.BoundSize[] access$4700(net.miginfocom.layout.Grid,net.miginfocom.layout.ComponentWrapper) -> access$4700
    void access$4800(int[]) -> access$4800
    int access$4900(int) -> access$4900
    java.lang.Float[] access$5500(net.miginfocom.layout.DimConstraint[],java.lang.Float[],int,int) -> access$5500
    void <clinit>() -> <clinit>
net.miginfocom.layout.Grid$1 -> net.miginfocom.layout.Grid$1:
net.miginfocom.layout.Grid$AboveBelow -> net.miginfocom.layout.Grid$AboveBelow:
    int maxAbove -> maxAbove
    int maxBelow -> maxBelow
    void <init>(int,int) -> <init>
    int sum() -> sum
net.miginfocom.layout.Grid$Cell -> net.miginfocom.layout.Grid$Cell:
    int spanx -> spanx
    int spany -> spany
    boolean flowx -> flowx
    java.util.ArrayList compWraps -> compWraps
    boolean hasTagged -> hasTagged
    void <init>(net.miginfocom.layout.Grid$CompWrap) -> <init>
    void <init>(int,int,boolean) -> <init>
    void <init>(net.miginfocom.layout.Grid$CompWrap,int,int,boolean) -> <init>
    void <init>(net.miginfocom.layout.Grid$CompWrap,net.miginfocom.layout.Grid$1) -> <init>
    java.util.ArrayList access$200(net.miginfocom.layout.Grid$Cell) -> access$200
    void <init>(int,int,boolean,net.miginfocom.layout.Grid$1) -> <init>
    boolean access$400(net.miginfocom.layout.Grid$Cell) -> access$400
    boolean access$402(net.miginfocom.layout.Grid$Cell,boolean) -> access$402
    int access$500(net.miginfocom.layout.Grid$Cell) -> access$500
    int access$600(net.miginfocom.layout.Grid$Cell) -> access$600
    boolean access$1100(net.miginfocom.layout.Grid$Cell) -> access$1100
    void <init>(net.miginfocom.layout.Grid$CompWrap,int,int,boolean,net.miginfocom.layout.Grid$1) -> <init>
net.miginfocom.layout.Grid$CompWrap -> net.miginfocom.layout.Grid$CompWrap:
    net.miginfocom.layout.ComponentWrapper comp -> comp
    net.miginfocom.layout.CC cc -> cc
    int eHideMode -> eHideMode
    boolean useVisualPadding -> useVisualPadding
    boolean sizesOk -> sizesOk
    boolean isAbsolute -> isAbsolute
    int[][] gaps -> gaps
    int[] horSizes -> horSizes
    int[] verSizes -> verSizes
    int x -> x
    int y -> y
    int w -> w
    int h -> h
    int forcedPushGaps -> forcedPushGaps
    net.miginfocom.layout.Grid this$0 -> this$0
    void <init>(net.miginfocom.layout.Grid,net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.CC,int,boolean) -> <init>
    int[] getSizes(boolean) -> getSizes
    void validateSize() -> validateSize
    int getSize(net.miginfocom.layout.BoundSize,int,boolean,boolean,int) -> getSize
    void calcGaps(net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.CC,net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.CC,java.lang.String,boolean,boolean) -> calcGaps
    void setDimBounds(int,int,boolean) -> setDimBounds
    void invalidateSizes() -> invalidateSizes
    boolean isPushGap(boolean,boolean) -> isPushGap
    void transferBounds(boolean) -> transferBounds
    void setForcedSizes(int[],boolean) -> setForcedSizes
    void setGaps(int[],int) -> setGaps
    void mergeGapSizes(int[],boolean,boolean) -> mergeGapSizes
    int getGapIx(boolean,boolean) -> getGapIx
    int getSizeInclGaps(int,boolean) -> getSizeInclGaps
    int getSize(int,boolean) -> getSize
    int getGapBefore(int,boolean) -> getGapBefore
    int getGapAfter(int,boolean) -> getGapAfter
    int[] getGaps(boolean,boolean) -> getGaps
    int filter(int,int) -> filter
    boolean isBaselineAlign(boolean) -> isBaselineAlign
    int getBaseline(int) -> getBaseline
    void adjustMinHorSizeUp(int) -> adjustMinHorSizeUp
    void <init>(net.miginfocom.layout.Grid,net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.CC,int,boolean,net.miginfocom.layout.Grid$1) -> <init>
    net.miginfocom.layout.CC access$700(net.miginfocom.layout.Grid$CompWrap) -> access$700
    int[] access$800(net.miginfocom.layout.Grid$CompWrap,boolean) -> access$800
    void access$900(net.miginfocom.layout.Grid$CompWrap,int[],boolean) -> access$900
    net.miginfocom.layout.ComponentWrapper access$1000(net.miginfocom.layout.Grid$CompWrap) -> access$1000
    void access$1200(net.miginfocom.layout.Grid$CompWrap,net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.CC,net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.CC,java.lang.String,boolean,boolean) -> access$1200
    int access$1300(net.miginfocom.layout.Grid$CompWrap) -> access$1300
    int access$1400(net.miginfocom.layout.Grid$CompWrap) -> access$1400
    int access$1500(net.miginfocom.layout.Grid$CompWrap) -> access$1500
    int access$1600(net.miginfocom.layout.Grid$CompWrap) -> access$1600
    int access$1402(net.miginfocom.layout.Grid$CompWrap,int) -> access$1402
    int access$1602(net.miginfocom.layout.Grid$CompWrap,int) -> access$1602
    int access$1302(net.miginfocom.layout.Grid$CompWrap,int) -> access$1302
    int access$1502(net.miginfocom.layout.Grid$CompWrap,int) -> access$1502
    void access$1700(net.miginfocom.layout.Grid$CompWrap,boolean) -> access$1700
    void access$2200(net.miginfocom.layout.Grid$CompWrap,int[],boolean,boolean) -> access$2200
    int access$2302(net.miginfocom.layout.Grid$CompWrap,int) -> access$2302
    int access$2300(net.miginfocom.layout.Grid$CompWrap) -> access$2300
    void access$2400(net.miginfocom.layout.Grid$CompWrap,int[],int) -> access$2400
    void access$2600(net.miginfocom.layout.Grid$CompWrap,int,int,boolean) -> access$2600
    int access$2700(net.miginfocom.layout.Grid$CompWrap,int,boolean) -> access$2700
    boolean access$3100(net.miginfocom.layout.Grid$CompWrap,boolean,boolean) -> access$3100
    int[] access$3200(net.miginfocom.layout.Grid$CompWrap,boolean,boolean) -> access$3200
    boolean access$3700(net.miginfocom.layout.Grid$CompWrap,boolean) -> access$3700
    int access$5000(net.miginfocom.layout.Grid$CompWrap,int) -> access$5000
    int access$5100(net.miginfocom.layout.Grid$CompWrap,int,boolean) -> access$5100
    int access$5200(net.miginfocom.layout.Grid$CompWrap,int,boolean) -> access$5200
    int access$5300(net.miginfocom.layout.Grid$CompWrap,int,boolean) -> access$5300
net.miginfocom.layout.Grid$FlowSizeSpec -> net.miginfocom.layout.Grid$FlowSizeSpec:
    int[][] sizes -> sizes
    net.miginfocom.layout.ResizeConstraint[] resConstsInclGaps -> resConstsInclGaps
    void <init>(int[][],net.miginfocom.layout.ResizeConstraint[]) -> <init>
    int expandSizes(net.miginfocom.layout.DimConstraint[],java.lang.Float[],int,int,int,int,int) -> expandSizes
    int[][] access$2100(net.miginfocom.layout.Grid$FlowSizeSpec) -> access$2100
    net.miginfocom.layout.ResizeConstraint[] access$2800(net.miginfocom.layout.Grid$FlowSizeSpec) -> access$2800
    int access$3400(net.miginfocom.layout.Grid$FlowSizeSpec,net.miginfocom.layout.DimConstraint[],java.lang.Float[],int,int,int,int,int) -> access$3400
    void <init>(int[][],net.miginfocom.layout.ResizeConstraint[],net.miginfocom.layout.Grid$1) -> <init>
net.miginfocom.layout.Grid$LinkedDimGroup -> net.miginfocom.layout.Grid$LinkedDimGroup:
    int TYPE_SERIAL -> TYPE_SERIAL
    int TYPE_PARALLEL -> TYPE_PARALLEL
    int TYPE_BASELINE -> TYPE_BASELINE
    java.lang.String linkCtx -> linkCtx
    int span -> span
    int linkType -> linkType
    boolean isHor -> isHor
    boolean fromEnd -> fromEnd
    java.util.ArrayList _compWraps -> _compWraps
    int lStart -> lStart
    int lSize -> lSize
    void <init>(java.lang.String,int,int,boolean,boolean) -> <init>
    void addCompWrap(net.miginfocom.layout.Grid$CompWrap) -> addCompWrap
    void setCompWraps(java.util.ArrayList) -> setCompWraps
    void layout(net.miginfocom.layout.DimConstraint,int,int,int) -> layout
    int[] getMinPrefMax() -> getMinPrefMax
    int access$1800(net.miginfocom.layout.Grid$LinkedDimGroup) -> access$1800
    boolean access$1900(net.miginfocom.layout.Grid$LinkedDimGroup) -> access$1900
    int access$2000(net.miginfocom.layout.Grid$LinkedDimGroup) -> access$2000
    java.util.ArrayList access$2500(net.miginfocom.layout.Grid$LinkedDimGroup) -> access$2500
    int access$2900(net.miginfocom.layout.Grid$LinkedDimGroup) -> access$2900
    void access$3000(net.miginfocom.layout.Grid$LinkedDimGroup,net.miginfocom.layout.DimConstraint,int,int,int) -> access$3000
    int[] access$3300(net.miginfocom.layout.Grid$LinkedDimGroup) -> access$3300
    void <init>(java.lang.String,int,int,boolean,boolean,net.miginfocom.layout.Grid$1) -> <init>
    void access$3600(net.miginfocom.layout.Grid$LinkedDimGroup,java.util.ArrayList) -> access$3600
    java.lang.String access$3800(net.miginfocom.layout.Grid$LinkedDimGroup) -> access$3800
    void access$3900(net.miginfocom.layout.Grid$LinkedDimGroup,net.miginfocom.layout.Grid$CompWrap) -> access$3900
net.miginfocom.layout.Grid$WeakCell -> net.miginfocom.layout.Grid$WeakCell:
    java.lang.ref.WeakReference componentRef -> componentRef
    int x -> x
    int y -> y
    int spanX -> spanX
    int spanY -> spanY
    void <init>(java.lang.Object,int,int,int,int) -> <init>
    void <init>(java.lang.Object,int,int,int,int,net.miginfocom.layout.Grid$1) -> <init>
    java.lang.ref.WeakReference access$5700(net.miginfocom.layout.Grid$WeakCell) -> access$5700
    int access$5800(net.miginfocom.layout.Grid$WeakCell) -> access$5800
    int access$5900(net.miginfocom.layout.Grid$WeakCell) -> access$5900
    int access$6000(net.miginfocom.layout.Grid$WeakCell) -> access$6000
    int access$6100(net.miginfocom.layout.Grid$WeakCell) -> access$6100
net.miginfocom.layout.InCellGapProvider -> net.miginfocom.layout.InCellGapProvider:
    net.miginfocom.layout.BoundSize getDefaultGap(net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.ComponentWrapper,int,java.lang.String,boolean) -> getDefaultGap
net.miginfocom.layout.LC -> net.miginfocom.layout.LC:
    int wrapAfter -> wrapAfter
    java.lang.Boolean leftToRight -> leftToRight
    net.miginfocom.layout.UnitValue[] insets -> insets
    net.miginfocom.layout.UnitValue alignX -> alignX
    net.miginfocom.layout.UnitValue alignY -> alignY
    net.miginfocom.layout.BoundSize gridGapX -> gridGapX
    net.miginfocom.layout.BoundSize gridGapY -> gridGapY
    net.miginfocom.layout.BoundSize width -> width
    net.miginfocom.layout.BoundSize height -> height
    net.miginfocom.layout.BoundSize packW -> packW
    net.miginfocom.layout.BoundSize packH -> packH
    float pwAlign -> pwAlign
    float phAlign -> phAlign
    int debugMillis -> debugMillis
    int hideMode -> hideMode
    boolean noCache -> noCache
    boolean flowX -> flowX
    boolean fillX -> fillX
    boolean fillY -> fillY
    boolean topToBottom -> topToBottom
    boolean noGrid -> noGrid
    boolean visualPadding -> visualPadding
    void <init>() -> <init>
    boolean isNoCache() -> isNoCache
    void setNoCache(boolean) -> setNoCache
    net.miginfocom.layout.UnitValue getAlignX() -> getAlignX
    void setAlignX(net.miginfocom.layout.UnitValue) -> setAlignX
    net.miginfocom.layout.UnitValue getAlignY() -> getAlignY
    void setAlignY(net.miginfocom.layout.UnitValue) -> setAlignY
    int getDebugMillis() -> getDebugMillis
    void setDebugMillis(int) -> setDebugMillis
    boolean isFillX() -> isFillX
    void setFillX(boolean) -> setFillX
    boolean isFillY() -> isFillY
    void setFillY(boolean) -> setFillY
    boolean isFlowX() -> isFlowX
    void setFlowX(boolean) -> setFlowX
    net.miginfocom.layout.BoundSize getGridGapX() -> getGridGapX
    void setGridGapX(net.miginfocom.layout.BoundSize) -> setGridGapX
    net.miginfocom.layout.BoundSize getGridGapY() -> getGridGapY
    void setGridGapY(net.miginfocom.layout.BoundSize) -> setGridGapY
    int getHideMode() -> getHideMode
    void setHideMode(int) -> setHideMode
    net.miginfocom.layout.UnitValue[] getInsets() -> getInsets
    void setInsets(net.miginfocom.layout.UnitValue[]) -> setInsets
    java.lang.Boolean getLeftToRight() -> getLeftToRight
    void setLeftToRight(java.lang.Boolean) -> setLeftToRight
    boolean isNoGrid() -> isNoGrid
    void setNoGrid(boolean) -> setNoGrid
    boolean isTopToBottom() -> isTopToBottom
    void setTopToBottom(boolean) -> setTopToBottom
    boolean isVisualPadding() -> isVisualPadding
    void setVisualPadding(boolean) -> setVisualPadding
    int getWrapAfter() -> getWrapAfter
    void setWrapAfter(int) -> setWrapAfter
    net.miginfocom.layout.BoundSize getPackWidth() -> getPackWidth
    void setPackWidth(net.miginfocom.layout.BoundSize) -> setPackWidth
    net.miginfocom.layout.BoundSize getPackHeight() -> getPackHeight
    void setPackHeight(net.miginfocom.layout.BoundSize) -> setPackHeight
    float getPackHeightAlign() -> getPackHeightAlign
    void setPackHeightAlign(float) -> setPackHeightAlign
    float getPackWidthAlign() -> getPackWidthAlign
    void setPackWidthAlign(float) -> setPackWidthAlign
    net.miginfocom.layout.BoundSize getWidth() -> getWidth
    void setWidth(net.miginfocom.layout.BoundSize) -> setWidth
    net.miginfocom.layout.BoundSize getHeight() -> getHeight
    void setHeight(net.miginfocom.layout.BoundSize) -> setHeight
    net.miginfocom.layout.LC pack() -> pack
    net.miginfocom.layout.LC pack(java.lang.String,java.lang.String) -> pack
    net.miginfocom.layout.LC packAlign(float,float) -> packAlign
    net.miginfocom.layout.LC wrap() -> wrap
    net.miginfocom.layout.LC wrapAfter(int) -> wrapAfter
    net.miginfocom.layout.LC noCache() -> noCache
    net.miginfocom.layout.LC flowY() -> flowY
    net.miginfocom.layout.LC flowX() -> flowX
    net.miginfocom.layout.LC fill() -> fill
    net.miginfocom.layout.LC fillX() -> fillX
    net.miginfocom.layout.LC fillY() -> fillY
    net.miginfocom.layout.LC leftToRight(boolean) -> leftToRight
    net.miginfocom.layout.LC rightToLeft() -> rightToLeft
    net.miginfocom.layout.LC bottomToTop() -> bottomToTop
    net.miginfocom.layout.LC topToBottom() -> topToBottom
    net.miginfocom.layout.LC noGrid() -> noGrid
    net.miginfocom.layout.LC noVisualPadding() -> noVisualPadding
    net.miginfocom.layout.LC insetsAll(java.lang.String) -> insetsAll
    net.miginfocom.layout.LC insets(java.lang.String) -> insets
    net.miginfocom.layout.LC insets(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> insets
    net.miginfocom.layout.LC alignX(java.lang.String) -> alignX
    net.miginfocom.layout.LC alignY(java.lang.String) -> alignY
    net.miginfocom.layout.LC align(java.lang.String,java.lang.String) -> align
    net.miginfocom.layout.LC gridGapX(java.lang.String) -> gridGapX
    net.miginfocom.layout.LC gridGapY(java.lang.String) -> gridGapY
    net.miginfocom.layout.LC gridGap(java.lang.String,java.lang.String) -> gridGap
    net.miginfocom.layout.LC debug() -> debug
    net.miginfocom.layout.LC debug(int) -> debug
    net.miginfocom.layout.LC hideMode(int) -> hideMode
    net.miginfocom.layout.LC minWidth(java.lang.String) -> minWidth
    net.miginfocom.layout.LC width(java.lang.String) -> width
    net.miginfocom.layout.LC maxWidth(java.lang.String) -> maxWidth
    net.miginfocom.layout.LC minHeight(java.lang.String) -> minHeight
    net.miginfocom.layout.LC height(java.lang.String) -> height
    net.miginfocom.layout.LC maxHeight(java.lang.String) -> maxHeight
    java.lang.Object readResolve() -> readResolve
    void readExternal(java.io.ObjectInput) -> readExternal
    void writeExternal(java.io.ObjectOutput) -> writeExternal
net.miginfocom.layout.LayoutCallback -> net.miginfocom.layout.LayoutCallback:
    void <init>() -> <init>
    net.miginfocom.layout.UnitValue[] getPosition(net.miginfocom.layout.ComponentWrapper) -> getPosition
    net.miginfocom.layout.BoundSize[] getSize(net.miginfocom.layout.ComponentWrapper) -> getSize
    void correctBounds(net.miginfocom.layout.ComponentWrapper) -> correctBounds
net.miginfocom.layout.LayoutUtil -> net.miginfocom.layout.LayoutUtil:
    int INF -> INF
    int NOT_SET -> NOT_SET
    int MIN -> MIN
    int PREF -> PREF
    int MAX -> MAX
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    java.util.WeakHashMap CR_MAP -> CR_MAP
    java.util.WeakHashMap DT_MAP -> DT_MAP
    int eSz -> eSz
    int globalDebugMillis -> globalDebugMillis
    boolean HAS_BEANS -> HAS_BEANS
    java.io.ByteArrayOutputStream writeOutputStream -> writeOutputStream
    byte[] readBuf -> readBuf
    java.util.IdentityHashMap SER_MAP -> SER_MAP
    boolean hasBeans() -> hasBeans
    void <init>() -> <init>
    java.lang.String getVersion() -> getVersion
    int getGlobalDebugMillis() -> getGlobalDebugMillis
    void setGlobalDebugMillis(int) -> setGlobalDebugMillis
    void setDesignTime(net.miginfocom.layout.ContainerWrapper,boolean) -> setDesignTime
    boolean isDesignTime(net.miginfocom.layout.ContainerWrapper) -> isDesignTime
    int getDesignTimeEmptySize() -> getDesignTimeEmptySize
    void setDesignTimeEmptySize(int) -> setDesignTimeEmptySize
    void putCCString(java.lang.Object,java.lang.String) -> putCCString
    void setDelegate(java.lang.Class,java.beans.PersistenceDelegate) -> setDelegate
    java.lang.String getCCString(java.lang.Object) -> getCCString
    void throwCC() -> throwCC
    int[] calculateSerial(int[][],net.miginfocom.layout.ResizeConstraint[],java.lang.Float[],int,int) -> calculateSerial
    java.lang.Object getIndexSafe(java.lang.Object[],int) -> getIndexSafe
    int getBrokenBoundary(float,int,int) -> getBrokenBoundary
    int sum(int[],int,int) -> sum
    int sum(int[]) -> sum
    float clamp(float,float,float) -> clamp
    int clamp(int,int,int) -> clamp
    int getSizeSafe(int[],int) -> getSizeSafe
    net.miginfocom.layout.BoundSize derive(net.miginfocom.layout.BoundSize,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue) -> derive
    boolean isLeftToRight(net.miginfocom.layout.LC,net.miginfocom.layout.ContainerWrapper) -> isLeftToRight
    int[] roundSizes(float[]) -> roundSizes
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    net.miginfocom.layout.UnitValue getInsets(net.miginfocom.layout.LC,int,boolean) -> getInsets
    void writeXMLObject(java.io.OutputStream,java.lang.Object,java.beans.ExceptionListener) -> writeXMLObject
    void writeAsXML(java.io.ObjectOutput,java.lang.Object) -> writeAsXML
    java.lang.Object readAsXML(java.io.ObjectInput) -> readAsXML
    void setSerializedObject(java.lang.Object,java.lang.Object) -> setSerializedObject
    java.lang.Object getSerializedObject(java.lang.Object) -> getSerializedObject
    void <clinit>() -> <clinit>
net.miginfocom.layout.LayoutUtil$1 -> net.miginfocom.layout.LayoutUtil$1:
    void <init>() -> <init>
    void exceptionThrown(java.lang.Exception) -> exceptionThrown
net.miginfocom.layout.LinkHandler -> net.miginfocom.layout.LinkHandler:
    int X -> X
    int Y -> Y
    int WIDTH -> WIDTH
    int HEIGHT -> HEIGHT
    int X2 -> X2
    int Y2 -> Y2
    int VALUES -> VALUES
    int VALUES_TEMP -> VALUES_TEMP
    java.util.WeakHashMap LAYOUTS -> LAYOUTS
    void <init>() -> <init>
    java.lang.Integer getValue(java.lang.Object,java.lang.String,int) -> getValue
    boolean setBounds(java.lang.Object,java.lang.String,int,int,int,int) -> setBounds
    boolean setBounds(java.lang.Object,java.lang.String,int,int,int,int,boolean,boolean) -> setBounds
    void clearWeakReferencesNow() -> clearWeakReferencesNow
    boolean clearBounds(java.lang.Object,java.lang.String) -> clearBounds
    void clearTemporaryBounds(java.lang.Object) -> clearTemporaryBounds
    void <clinit>() -> <clinit>
net.miginfocom.layout.PlatformDefaults -> net.miginfocom.layout.PlatformDefaults:
    java.lang.String VISUAL_PADDING_PROPERTY -> VISUAL_PADDING_PROPERTY
    int DEF_H_UNIT -> DEF_H_UNIT
    int DEF_V_UNIT -> DEF_V_UNIT
    net.miginfocom.layout.InCellGapProvider GAP_PROVIDER -> GAP_PROVIDER
    int MOD_COUNT -> MOD_COUNT
    net.miginfocom.layout.UnitValue LPX6 -> LPX6
    net.miginfocom.layout.UnitValue LPX7 -> LPX7
    net.miginfocom.layout.UnitValue LPX11 -> LPX11
    net.miginfocom.layout.UnitValue LPX12 -> LPX12
    net.miginfocom.layout.UnitValue LPX16 -> LPX16
    net.miginfocom.layout.UnitValue LPX18 -> LPX18
    net.miginfocom.layout.UnitValue LPX20 -> LPX20
    net.miginfocom.layout.UnitValue LPY6 -> LPY6
    net.miginfocom.layout.UnitValue LPY7 -> LPY7
    net.miginfocom.layout.UnitValue LPY11 -> LPY11
    net.miginfocom.layout.UnitValue LPY12 -> LPY12
    net.miginfocom.layout.UnitValue LPY16 -> LPY16
    net.miginfocom.layout.UnitValue LPY18 -> LPY18
    net.miginfocom.layout.UnitValue LPY20 -> LPY20
    int WINDOWS_XP -> WINDOWS_XP
    int MAC_OSX -> MAC_OSX
    int GNOME -> GNOME
    int CUR_PLAF -> CUR_PLAF
    net.miginfocom.layout.UnitValue[] PANEL_INS -> PANEL_INS
    net.miginfocom.layout.UnitValue[] DIALOG_INS -> DIALOG_INS
    java.lang.String BUTTON_FORMAT -> BUTTON_FORMAT
    java.util.HashMap HOR_DEFS -> HOR_DEFS
    java.util.HashMap VER_DEFS -> VER_DEFS
    net.miginfocom.layout.BoundSize DEF_VGAP -> DEF_VGAP
    net.miginfocom.layout.BoundSize DEF_HGAP -> DEF_HGAP
    net.miginfocom.layout.BoundSize RELATED_X -> RELATED_X
    net.miginfocom.layout.BoundSize RELATED_Y -> RELATED_Y
    net.miginfocom.layout.BoundSize UNRELATED_X -> UNRELATED_X
    net.miginfocom.layout.BoundSize UNRELATED_Y -> UNRELATED_Y
    net.miginfocom.layout.UnitValue BUTT_WIDTH -> BUTT_WIDTH
    net.miginfocom.layout.UnitValue BUTT_PADDING -> BUTT_PADDING
    java.lang.Float horScale -> horScale
    java.lang.Float verScale -> verScale
    int BASE_FONT_SIZE -> BASE_FONT_SIZE
    int BASE_SCALE_FACTOR -> BASE_SCALE_FACTOR
    int BASE_REAL_PIXEL -> BASE_REAL_PIXEL
    int LP_BASE -> LP_BASE
    java.lang.Integer BASE_DPI_FORCED -> BASE_DPI_FORCED
    int BASE_DPI -> BASE_DPI
    boolean dra -> dra
    java.util.HashMap VISUAL_BOUNDS -> VISUAL_BOUNDS
    int getCurrentPlatform() -> getCurrentPlatform
    void <init>() -> <init>
    void setPlatform(int) -> setPlatform
    void setDefaultVisualPadding(java.lang.String,int[]) -> setDefaultVisualPadding
    int[] getDefaultVisualPadding(java.lang.String) -> getDefaultVisualPadding
    int getPlatformDPI(int) -> getPlatformDPI
    int getPlatform() -> getPlatform
    int getDefaultDPI() -> getDefaultDPI
    void setDefaultDPI(java.lang.Integer) -> setDefaultDPI
    java.lang.Float getHorizontalScaleFactor() -> getHorizontalScaleFactor
    void setHorizontalScaleFactor(java.lang.Float) -> setHorizontalScaleFactor
    java.lang.Float getVerticalScaleFactor() -> getVerticalScaleFactor
    void setVerticalScaleFactor(java.lang.Float) -> setVerticalScaleFactor
    int getLogicalPixelBase() -> getLogicalPixelBase
    void setLogicalPixelBase(int) -> setLogicalPixelBase
    void setRelatedGap(net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue) -> setRelatedGap
    void setUnrelatedGap(net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue) -> setUnrelatedGap
    void setParagraphGap(net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue) -> setParagraphGap
    void setIndentGap(net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue) -> setIndentGap
    void setGridCellGap(net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue) -> setGridCellGap
    void setMinimumButtonWidth(net.miginfocom.layout.UnitValue) -> setMinimumButtonWidth
    net.miginfocom.layout.UnitValue getMinimumButtonWidth() -> getMinimumButtonWidth
    void setMinimumButtonPadding(net.miginfocom.layout.UnitValue) -> setMinimumButtonPadding
    net.miginfocom.layout.UnitValue getMinimumButtonPadding() -> getMinimumButtonPadding
    float getMinimumButtonWidthIncludingPadding(float,net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.ComponentWrapper) -> getMinimumButtonWidthIncludingPadding
    net.miginfocom.layout.UnitValue getUnitValueX(java.lang.String) -> getUnitValueX
    net.miginfocom.layout.UnitValue getUnitValueY(java.lang.String) -> getUnitValueY
    void setUnitValue(java.lang.String[],net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue) -> setUnitValue
    int convertToPixels(float,java.lang.String,boolean,float,net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.ComponentWrapper) -> convertToPixels
    java.lang.String getButtonOrder() -> getButtonOrder
    void setButtonOrder(java.lang.String) -> setButtonOrder
    java.lang.String getTagForChar(char) -> getTagForChar
    net.miginfocom.layout.BoundSize getGridGapX() -> getGridGapX
    net.miginfocom.layout.BoundSize getGridGapY() -> getGridGapY
    net.miginfocom.layout.UnitValue getDialogInsets(int) -> getDialogInsets
    void setDialogInsets(net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue) -> setDialogInsets
    net.miginfocom.layout.UnitValue getPanelInsets(int) -> getPanelInsets
    void setPanelInsets(net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue) -> setPanelInsets
    float getLabelAlignPercentage() -> getLabelAlignPercentage
    net.miginfocom.layout.BoundSize getDefaultComponentGap(net.miginfocom.layout.ComponentWrapper,net.miginfocom.layout.ComponentWrapper,int,java.lang.String,boolean) -> getDefaultComponentGap
    net.miginfocom.layout.InCellGapProvider getGapProvider() -> getGapProvider
    void setGapProvider(net.miginfocom.layout.InCellGapProvider) -> setGapProvider
    int getModCount() -> getModCount
    void invalidate() -> invalidate
    int getDefaultHorizontalUnit() -> getDefaultHorizontalUnit
    void setDefaultHorizontalUnit(int) -> setDefaultHorizontalUnit
    int getDefaultVerticalUnit() -> getDefaultVerticalUnit
    void setDefaultVerticalUnit(int) -> setDefaultVerticalUnit
    boolean getDefaultRowAlignmentBaseline() -> getDefaultRowAlignmentBaseline
    void setDefaultRowAlignmentBaseline(boolean) -> setDefaultRowAlignmentBaseline
    void <clinit>() -> <clinit>
net.miginfocom.layout.ResizeConstraint -> net.miginfocom.layout.ResizeConstraint:
    java.lang.Float WEIGHT_100 -> WEIGHT_100
    java.lang.Float grow -> grow
    int growPrio -> growPrio
    java.lang.Float shrink -> shrink
    int shrinkPrio -> shrinkPrio
    void <init>() -> <init>
    void <init>(int,java.lang.Float,int,java.lang.Float) -> <init>
    java.lang.Object readResolve() -> readResolve
    void readExternal(java.io.ObjectInput) -> readExternal
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void <clinit>() -> <clinit>
net.miginfocom.layout.UnitConverter -> net.miginfocom.layout.UnitConverter:
    int UNABLE -> UNABLE
    void <init>() -> <init>
    int convertToPixels(float,java.lang.String,boolean,float,net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.ComponentWrapper) -> convertToPixels
net.miginfocom.layout.UnitValue -> net.miginfocom.layout.UnitValue:
    java.util.HashMap UNIT_MAP -> UNIT_MAP
    java.util.ArrayList CONVERTERS -> CONVERTERS
    int STATIC -> STATIC
    int ADD -> ADD
    int SUB -> SUB
    int MUL -> MUL
    int DIV -> DIV
    int MIN -> MIN
    int MAX -> MAX
    int MID -> MID
    int PIXEL -> PIXEL
    int LPX -> LPX
    int LPY -> LPY
    int MM -> MM
    int CM -> CM
    int INCH -> INCH
    int PERCENT -> PERCENT
    int PT -> PT
    int SPX -> SPX
    int SPY -> SPY
    int ALIGN -> ALIGN
    int MIN_SIZE -> MIN_SIZE
    int PREF_SIZE -> PREF_SIZE
    int MAX_SIZE -> MAX_SIZE
    int BUTTON -> BUTTON
    int LINK_X -> LINK_X
    int LINK_Y -> LINK_Y
    int LINK_W -> LINK_W
    int LINK_H -> LINK_H
    int LINK_X2 -> LINK_X2
    int LINK_Y2 -> LINK_Y2
    int LINK_XPOS -> LINK_XPOS
    int LINK_YPOS -> LINK_YPOS
    int LOOKUP -> LOOKUP
    int LABEL_ALIGN -> LABEL_ALIGN
    int IDENTITY -> IDENTITY
    net.miginfocom.layout.UnitValue ZERO -> ZERO
    net.miginfocom.layout.UnitValue TOP -> TOP
    net.miginfocom.layout.UnitValue LEADING -> LEADING
    net.miginfocom.layout.UnitValue LEFT -> LEFT
    net.miginfocom.layout.UnitValue CENTER -> CENTER
    net.miginfocom.layout.UnitValue TRAILING -> TRAILING
    net.miginfocom.layout.UnitValue RIGHT -> RIGHT
    net.miginfocom.layout.UnitValue BOTTOM -> BOTTOM
    net.miginfocom.layout.UnitValue LABEL -> LABEL
    net.miginfocom.layout.UnitValue INF -> INF
    net.miginfocom.layout.UnitValue BASELINE_IDENTITY -> BASELINE_IDENTITY
    float value -> value
    int unit -> unit
    int oper -> oper
    java.lang.String unitStr -> unitStr
    java.lang.String linkId -> linkId
    boolean isHor -> isHor
    net.miginfocom.layout.UnitValue[] subUnits -> subUnits
    float[] SCALE -> SCALE
    long serialVersionUID -> serialVersionUID
    void <init>(float) -> <init>
    void <init>(float,int,java.lang.String) -> <init>
    void <init>(float,java.lang.String,boolean,int,java.lang.String) -> <init>
    void <init>(boolean,int,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,java.lang.String) -> <init>
    void <init>(float,java.lang.String,int,boolean,int,net.miginfocom.layout.UnitValue,net.miginfocom.layout.UnitValue,java.lang.String) -> <init>
    int getPixels(float,net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.ComponentWrapper) -> getPixels
    float getPixelsExact(float,net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.ComponentWrapper) -> getPixelsExact
    float lookup(float,net.miginfocom.layout.ContainerWrapper,net.miginfocom.layout.ComponentWrapper) -> lookup
    int parseUnitString() -> parseUnitString
    boolean isAbsolute() -> isAbsolute
    boolean isAbsoluteDeep() -> isAbsoluteDeep
    boolean isLinked() -> isLinked
    boolean isLinkedDeep() -> isLinkedDeep
    java.lang.String getLinkTargetId() -> getLinkTargetId
    net.miginfocom.layout.UnitValue getSubUnitValue(int) -> getSubUnitValue
    int getSubUnitCount() -> getSubUnitCount
    net.miginfocom.layout.UnitValue[] getSubUnits() -> getSubUnits
    int getUnit() -> getUnit
    java.lang.String getUnitString() -> getUnitString
    int getOperation() -> getOperation
    float getValue() -> getValue
    boolean isHorizontal() -> isHorizontal
    java.lang.String toString() -> toString
    java.lang.String getConstraintString() -> getConstraintString
    int hashCode() -> hashCode
    void addGlobalUnitConverter(net.miginfocom.layout.UnitConverter) -> addGlobalUnitConverter
    boolean removeGlobalUnitConverter(net.miginfocom.layout.UnitConverter) -> removeGlobalUnitConverter
    net.miginfocom.layout.UnitConverter[] getGlobalUnitConverters() -> getGlobalUnitConverters
    int getDefaultUnit() -> getDefaultUnit
    void setDefaultUnit(int) -> setDefaultUnit
    java.lang.Object readResolve() -> readResolve
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    void <clinit>() -> <clinit>
net.miginfocom.layout.UnitValue$1 -> net.miginfocom.layout.UnitValue$1:
    void <init>() -> <init>
    java.beans.Expression instantiate(java.lang.Object,java.beans.Encoder) -> instantiate
net.miginfocom.swing.MigLayout -> net.miginfocom.swing.MigLayout:
    java.util.Map scrConstrMap -> scrConstrMap
    java.lang.Object layoutConstraints -> layoutConstraints
    java.lang.Object colConstraints -> colConstraints
    java.lang.Object rowConstraints -> rowConstraints
    net.miginfocom.layout.ContainerWrapper cacheParentW -> cacheParentW
    java.util.Map ccMap -> ccMap
    javax.swing.Timer debugTimer -> debugTimer
    net.miginfocom.layout.LC lc -> lc
    net.miginfocom.layout.AC colSpecs -> colSpecs
    net.miginfocom.layout.AC rowSpecs -> rowSpecs
    net.miginfocom.layout.Grid grid -> grid
    int lastModCount -> lastModCount
    int lastHash -> lastHash
    java.awt.Dimension lastInvalidSize -> lastInvalidSize
    boolean lastWasInvalid -> lastWasInvalid
    java.awt.Dimension lastParentSize -> lastParentSize
    java.util.ArrayList callbackList -> callbackList
    boolean dirty -> dirty
    long lastSize -> lastSize
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    void <init>(net.miginfocom.layout.LC) -> <init>
    void <init>(net.miginfocom.layout.LC,net.miginfocom.layout.AC) -> <init>
    void <init>(net.miginfocom.layout.LC,net.miginfocom.layout.AC,net.miginfocom.layout.AC) -> <init>
    java.lang.Object getLayoutConstraints() -> getLayoutConstraints
    void setLayoutConstraints(java.lang.Object) -> setLayoutConstraints
    java.lang.Object getColumnConstraints() -> getColumnConstraints
    void setColumnConstraints(java.lang.Object) -> setColumnConstraints
    java.lang.Object getRowConstraints() -> getRowConstraints
    void setRowConstraints(java.lang.Object) -> setRowConstraints
    java.util.Map getConstraintMap() -> getConstraintMap
    void setConstraintMap(java.util.Map) -> setConstraintMap
    java.lang.Object getComponentConstraints(java.awt.Component) -> getComponentConstraints
    void setComponentConstraints(java.awt.Component,java.lang.Object) -> setComponentConstraints
    void setComponentConstraintsImpl(java.awt.Component,java.lang.Object,boolean) -> setComponentConstraintsImpl
    boolean isManagingComponent(java.awt.Component) -> isManagingComponent
    void addLayoutCallback(net.miginfocom.layout.LayoutCallback) -> addLayoutCallback
    void removeLayoutCallback(net.miginfocom.layout.LayoutCallback) -> removeLayoutCallback
    void setDebug(net.miginfocom.layout.ComponentWrapper,boolean) -> setDebug
    boolean getDebug() -> getDebug
    int getDebugMillis() -> getDebugMillis
    void checkCache(java.awt.Container) -> checkCache
    void cleanConstraintMaps(java.awt.Container) -> cleanConstraintMaps
    void resetLastInvalidOnParent(java.awt.Container) -> resetLastInvalidOnParent
    net.miginfocom.layout.ContainerWrapper checkParent(java.awt.Container) -> checkParent
    void layoutContainer(java.awt.Container) -> layoutContainer
    void adjustWindowSize(net.miginfocom.layout.ContainerWrapper) -> adjustWindowSize
    java.awt.Container getPackable(java.awt.Component) -> getPackable
    java.lang.Object findType(java.lang.Class,java.awt.Component) -> findType
    int constrain(net.miginfocom.layout.ContainerWrapper,int,int,net.miginfocom.layout.BoundSize) -> constrain
    java.awt.Dimension minimumLayoutSize(java.awt.Container) -> minimumLayoutSize
    java.awt.Dimension preferredLayoutSize(java.awt.Container) -> preferredLayoutSize
    java.awt.Dimension maximumLayoutSize(java.awt.Container) -> maximumLayoutSize
    java.awt.Dimension getSizeImpl(java.awt.Container,int) -> getSizeImpl
    float getLayoutAlignmentX(java.awt.Container) -> getLayoutAlignmentX
    float getLayoutAlignmentY(java.awt.Container) -> getLayoutAlignmentY
    void addLayoutComponent(java.lang.String,java.awt.Component) -> addLayoutComponent
    void addLayoutComponent(java.awt.Component,java.lang.Object) -> addLayoutComponent
    void removeLayoutComponent(java.awt.Component) -> removeLayoutComponent
    void invalidateLayout(java.awt.Container) -> invalidateLayout
    java.lang.Object readResolve() -> readResolve
    void readExternal(java.io.ObjectInput) -> readExternal
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void access$100(net.miginfocom.swing.MigLayout,net.miginfocom.layout.ContainerWrapper) -> access$100
    net.miginfocom.layout.Grid access$200(net.miginfocom.swing.MigLayout) -> access$200
    javax.swing.Timer access$300(net.miginfocom.swing.MigLayout) -> access$300
    javax.swing.Timer access$302(net.miginfocom.swing.MigLayout,javax.swing.Timer) -> access$302
net.miginfocom.swing.MigLayout$1 -> net.miginfocom.swing.MigLayout$1:
    java.awt.Component val$parent -> val$parent
    net.miginfocom.swing.MigLayout this$0 -> this$0
    void <init>(net.miginfocom.swing.MigLayout,java.awt.Component) -> <init>
    void run() -> run
net.miginfocom.swing.MigLayout$2 -> net.miginfocom.swing.MigLayout$2:
    net.miginfocom.layout.ContainerWrapper val$containerWrapper -> val$containerWrapper
    net.miginfocom.swing.MigLayout this$0 -> this$0
    void <init>(net.miginfocom.swing.MigLayout,net.miginfocom.layout.ContainerWrapper) -> <init>
    void run() -> run
net.miginfocom.swing.MigLayout$MyDebugRepaintListener -> net.miginfocom.swing.MigLayout$MyDebugRepaintListener:
    net.miginfocom.swing.MigLayout this$0 -> this$0
    void <init>(net.miginfocom.swing.MigLayout) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void <init>(net.miginfocom.swing.MigLayout,net.miginfocom.swing.MigLayout$1) -> <init>
net.miginfocom.swing.SwingComponentWrapper -> net.miginfocom.swing.SwingComponentWrapper:
    boolean maxSet -> maxSet
    boolean vp -> vp
    java.awt.Color DB_COMP_OUTLINE -> DB_COMP_OUTLINE
    java.lang.String VISUAL_PADDING_PROPERTY -> VISUAL_PADDING_PROPERTY
    java.awt.Component c -> c
    int compType -> compType
    java.lang.Boolean bl -> bl
    boolean prefCalled -> prefCalled
    java.util.IdentityHashMap FM_MAP -> FM_MAP
    java.awt.Font SUBST_FONT -> SUBST_FONT
    boolean isJava9orLater -> isJava9orLater
    void <init>(java.awt.Component) -> <init>
    int getBaseline(int,int) -> getBaseline
    java.lang.Object getComponent() -> getComponent
    float getPixelUnitFactor(boolean) -> getPixelUnitFactor
    int getX() -> getX
    int getY() -> getY
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    int getScreenLocationX() -> getScreenLocationX
    int getScreenLocationY() -> getScreenLocationY
    int getMinimumHeight(int) -> getMinimumHeight
    int getMinimumWidth(int) -> getMinimumWidth
    int getPreferredHeight(int) -> getPreferredHeight
    int getPreferredWidth(int) -> getPreferredWidth
    int getMaximumHeight(int) -> getMaximumHeight
    int getMaximumWidth(int) -> getMaximumWidth
    boolean isMaxSet(java.awt.Component) -> isMaxSet
    net.miginfocom.layout.ContainerWrapper getParent() -> getParent
    int getHorizontalScreenDPI() -> getHorizontalScreenDPI
    int getVerticalScreenDPI() -> getVerticalScreenDPI
    int getScreenWidth() -> getScreenWidth
    int getScreenHeight() -> getScreenHeight
    boolean hasBaseline() -> hasBaseline
    java.lang.String getLinkId() -> getLinkId
    void setBounds(int,int,int,int) -> setBounds
    boolean isVisible() -> isVisible
    int[] getVisualPadding() -> getVisualPadding
    boolean isMaxSizeSetOn1_4() -> isMaxSizeSetOn1_4
    void setMaxSizeSetOn1_4(boolean) -> setMaxSizeSetOn1_4
    boolean isVisualPaddingEnabled() -> isVisualPaddingEnabled
    void setVisualPaddingEnabled(boolean) -> setVisualPaddingEnabled
    void paintDebugOutline(boolean) -> paintDebugOutline
    int getComponentType(boolean) -> getComponentType
    int getLayoutHashCode() -> getLayoutHashCode
    int checkType(boolean) -> checkType
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int getContentBias() -> getContentBias
    void <clinit>() -> <clinit>
net.miginfocom.swing.SwingContainerWrapper -> net.miginfocom.swing.SwingContainerWrapper:
    java.awt.Color DB_CELL_OUTLINE -> DB_CELL_OUTLINE
    void <init>(java.awt.Container) -> <init>
    net.miginfocom.layout.ComponentWrapper[] getComponents() -> getComponents
    int getComponentCount() -> getComponentCount
    java.lang.Object getLayout() -> getLayout
    boolean isLeftToRight() -> isLeftToRight
    void paintDebugCell(int,int,int,int) -> paintDebugCell
    int getComponentType(boolean) -> getComponentType
    int getLayoutHashCode() -> getLayoutHashCode
    void <clinit>() -> <clinit>
