/*
 * Copyright 2021 Itzbenz
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java-library'
sourceCompatibility = "1.8"
targetCompatibility = "1.8"
ext {
    minApi = '21'
    sdkVersion = '30'
    sdkRoot = System.getenv("ANDROID_HOME")
    sdkBuildToolVersion = '30.0.2'
    doExec = { cmd ->
        def proc = cmd.execute(null, new File(rootDir, "/build/libs/"))
        proc.waitForProcessOutput(System.out, System.err)
    }
}
dependencies {
    def sdkFile = new File(sdkRoot, "/platforms/android-${sdkVersion}/android.jar")
    if(sdkFile.exists()) compileOnly files(sdkFile.absolutePath)
}
jar{
    dependsOn ":makeJar"
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    archiveFileName = "Ozone-Android.jar"
        //collect dependencies needed for desugaring
        def files = (configurations.compileClasspath.asList() + configurations.runtimeClasspath.asList() + [new File("$sdkRoot/platforms/android-$sdkVersion/android.jar")])
        def dependencies = files.collect{ "--classpath $it.path" }.join(" ")

        //dex and desugar files - this requires d8 in your PATH
    doExec(sdkRoot + "/build-tools/"+sdkBuildToolVersion+"/"+"d8 $dependencies --min-api $minApi --output ${rootProject.archivesBaseName}-AndroidDex.jar ${rootProject.archivesBaseName}.jar")
    from(){
        zipTree(new File(rootDir, "/build/libs/${rootProject.archivesBaseName}-AndroidDex.jar"))
    }
    from(rootDir){
        include "mod.hjson"
    }
    from(){
        new File(rootDir, "src/main/resources/")
    }
    from(){
        new File(rootDir, "Android/src/main/resources/")
    }
}
