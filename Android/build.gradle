apply plugin: 'java'
//heck loading Atomic library is complicated in android
dependencies {
    compileOnly fileTree(dir: "libs", include: ["*.jar"])
    testImplementation 'junit:junit:4.12'
}

jar{
    archiveFileName = "${project.archivesBaseName}.jar"
    from{
        configurations.runtimeClasspath.collect{it.isDirectory() ? it : zipTree(it)}
    }
}

//Android jar dexxed
task jarAndroid(dependsOn: jar){

        //collect dependencies needed for desugaring
        def files = (configurations.compileClasspath.asList() + configurations.runtimeClasspath.asList() + [new File("$sdkRoot/platforms/android-$sdkVersion/android.jar")])
        def dependencies = files.collect{ "--classpath $it.path" }.join(" ")

        //dex and desugar files - this requires d8 in your PATH
        doExec("d8 $dependencies --min-api 14 --output ${project.archivesBaseName}Android.jar ${project.archivesBaseName}.jar")

}
task proguard(dependsOn: jarAndroid, type: proguard.gradle.ProGuardTask) {
    configuration 'proguard.txt'
    // Automatically handle the Java version of this build.
    libraryjars "$sdkRoot/platforms/android-$sdkVersion/android.jar"
    libraryjars "libs"
    injars "$buildDir/libs/${project.archivesBaseName}Android.jar"
    outjars "$buildDir/libs/${project.archivesBaseName}Android.out.jar"
}